generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedIndexes"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model GeoPC {
  Country  String? @db.VarChar(2)
  Language String? @db.VarChar(2)
  ID       BigInt
  ISO2     String? @db.VarChar(6)
  Region1  String? @db.VarChar(60)
  Region2  String? @db.VarChar(60)
  Region3  String? @db.VarChar(60)
  Region4  String? @db.VarChar(60)
  ZIP      String? @db.VarChar(10)
  City     String? @db.VarChar(60)
  Area1    String? @db.VarChar(80)
  Area2    String? @db.VarChar(80)
  Lat      Float
  Lng      Float
  TZ       String? @db.VarChar(30)
  UTC      String? @db.VarChar(10)
  DST      String? @db.VarChar(1)

  @@ignore
}

model absence {
  profile_id               BigInt
  event_series_id          BigInt
  quota                    Float        @db.Float
  total_seconds            Int
  absent_seconds           Int
  lecture_series_id        Int?
  excused_quota            Float        @db.Float
  excused_absent_seconds   BigInt
  unexcused_quota          Float        @db.Float
  unexcused_absent_seconds BigInt
  event_series             event_series @relation(fields: [event_series_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_absence_event_series_id")
  profil                   profil       @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_absence_profile_id")

  @@id([profile_id, event_series_id])
  @@index([event_series_id], map: "fk_absence_event_series_id")
}

model absence_quota {
  profile_booking_id       BigInt
  course_lecture_series_id BigInt
  participated_hours       Float          @db.Float
  planned_hours            Float          @db.Float
  missing_quota            Float          @db.Float
  kb_vorlesungen           kb_vorlesungen @relation(fields: [course_lecture_series_id], references: [referenzid], onDelete: Cascade, onUpdate: NoAction, map: "absence_quota_lecture_series_id")
  profil_studium           profil_studium @relation(fields: [profile_booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "absence_quota_booking_id")

  @@id([profile_booking_id, course_lecture_series_id])
  @@index([course_lecture_series_id], map: "absence_quota_lecture_series_id")
}

model ac5_academic_year {
  id          Int      @id @default(autoincrement())
  bez_de      String?  @db.VarChar(255)
  bez_en      String?  @db.VarChar(255)
  beginn      DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  ende        DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  mnr_zaehler Int
}

model ac5_semester {
  id                                    Int                                     @id @default(autoincrement())
  term                                  Int?                                    @db.SmallInt
  jahr                                  Int?                                    @db.SmallInt
  semesterbeginn                        DateTime?                               @db.Date
  semesterende                          DateTime?                               @db.Date
  vorlesungsbeginn                      DateTime?                               @db.Date
  vorlesungsende                        DateTime?                               @db.Date
  published_for_application             Int?                                    @db.TinyInt
  moodle_sync                           Int?                                    @db.TinyInt
  infopool_directory_id                 BigInt?
  active                                Boolean?
  admission_procedure                   admission_procedure[]
  admission_procedure_part              admission_procedure_part[]
  lecturer_contract_employment_semester lecturer_contract_employment_semester[]
  planning_group                        planning_group[]
  semester_site_infopool_folder         semester_site_infopool_folder[]

  @@index([semesterbeginn, semesterende], map: "idx_semesterbeginn_semesterende")
}

model academy_version {
  id                     Int                      @id @default(autoincrement())
  value                  String?                  @db.VarChar(255)
  timestamp              DateTime                 @db.DateTime(0)
  system_usability_scale system_usability_scale[]
}

model access_groups {
  id                                        BigInt                                      @id @default(autoincrement())
  parent                                    BigInt                                      @default(0)
  active                                    Int                                         @default(1) @db.TinyInt
  position                                  Int                                         @default(1) @db.TinyInt
  name                                      String?                                     @db.Char(50)
  en                                        String?                                     @db.VarChar(64)
  beschreibung                              String?                                     @db.Char(255)
  typ                                       Int                                         @default(1) @db.TinyInt
  public                                    Int                                         @default(0) @db.TinyInt
  community                                 Boolean                                     @default(false)
  login                                     Int                                         @default(0) @db.TinyInt
  USER_SET                                  Int                                         @default(1) @db.TinyInt
  autor                                     Int?                                        @db.TinyInt
  dozent                                    Int?                                        @db.TinyInt
  access_meta                               Boolean                                     @default(false)
  system                                    Boolean
  show_in_tree                              Boolean
  application                               application[]
  document_generator_document_access_groups document_generator_document_access_groups[]
  noten_stat_cat_access_group               noten_stat_cat_access_group[]
  research_area_group                       research_area_group[]
  skeleton_access_group                     skeleton_access_group?
  soap_access_group                         soap_access_group?

  @@index([access_meta], map: "access_meta")
  @@index([active], map: "active")
}

model access_groups_cohort {
  cohort_id BigInt
  group_id  BigInt

  @@id([cohort_id, group_id])
}

model access_groups_grad {
  id               BigInt @id @default(autoincrement())
  access_groups_id BigInt
  pm_grad_id       BigInt

  @@index([access_groups_id, pm_grad_id], map: "access_groups_id")
}

model access_groups_group_rights {
  group_id        BigInt
  access_group_id BigInt
  access_right    Int
  id              BigInt @id @default(autoincrement())

  @@unique([group_id, access_group_id, access_right], map: "group_id")
}

model access_groups_mailinglist {
  mailinglist_id BigInt
  group_id       BigInt

  @@id([mailinglist_id, group_id])
}

model access_groups_user {
  groupid                BigInt    @default(0)
  userid                 BigInt    @default(0)
  valid_until            DateTime? @db.Date
  represented_profile_id BigInt?
  profil                 profil?   @relation(fields: [represented_profile_id], references: [id], onUpdate: NoAction, map: "fk_access_groups_user_represented_profile_id")

  @@unique([groupid, userid], map: "groupid")
  @@index([represented_profile_id], map: "fk_access_groups_user_represented_profile_id")
  @@index([userid], map: "userid")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model access_member {
  groupid BigInt @default(0)
  stid    BigInt @default(0)

  @@ignore
}

model access_token {
  token      String   @id @db.VarChar(255)
  validUntil DateTime @db.DateTime(0)
}

model address_type {
  id                                                                                          Int                             @id @default(autoincrement())
  active                                                                                      Boolean                         @default(true)
  address_type_language                                                                       address_type_language[]
  mobility_online_configuration_address_typeTomobility_online_configuration_emergency_address mobility_online_configuration[] @relation("address_typeTomobility_online_configuration_emergency_address")
  mobility_online_configuration_address_typeTomobility_online_configuration_home_address      mobility_online_configuration[] @relation("address_typeTomobility_online_configuration_home_address")
  mobility_online_configuration_address_typeTomobility_online_configuration_study_address     mobility_online_configuration[] @relation("address_typeTomobility_online_configuration_study_address")
}

model address_type_language {
  id           Int
  language     String       @db.VarChar(2)
  label        String       @db.VarChar(256)
  address_type address_type @relation(fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "address_type_language_ibfk_1")

  @@id([id, language])
}

model admin_access_group {
  groupid                                       BigInt   @id @default(1)
  s_read                                        Int?     @default(1) @db.TinyInt
  s_write                                       Int      @default(0) @db.TinyInt
  s_del                                         Int      @default(0) @db.TinyInt
  d_read                                        Int?     @default(1) @db.TinyInt
  d_write                                       Int      @default(0) @db.TinyInt
  d_del                                         Int      @default(0) @db.TinyInt
  a_read                                        Int?     @default(1) @db.TinyInt
  a_write                                       Int      @default(0) @db.TinyInt
  a_del                                         Int      @default(0) @db.TinyInt
  site_set                                      Int      @default(0) @db.TinyInt
  pws_write                                     Int      @default(0) @db.TinyInt
  pwa_write                                     Int      @default(0) @db.TinyInt
  v_write                                       Int?     @default(1) @db.TinyInt
  datasrc                                       Int      @default(0) @db.TinyInt
  inst_write                                    Int?     @db.TinyInt
  inst_read                                     Int?     @db.TinyInt
  mnr_write                                     Int      @db.TinyInt
  user_write                                    Int      @default(1) @db.TinyInt
  standort                                      Int?     @db.TinyInt
  reports                                       Int?     @default(1) @db.TinyInt
  payment_basic                                 Int?     @db.TinyInt
  tag_write                                     Int      @default(0) @db.TinyInt
  search_settings                               Int      @default(1) @db.TinyInt
  arc_write                                     Int?     @default(0) @db.TinyInt
  region_edit                                   Boolean  @default(false)
  group_edit                                    Boolean  @default(false)
  group_assign                                  Boolean  @default(false)
  inst_fundraising                              Boolean  @default(false)
  campaign_edit                                 Boolean  @default(false)
  form_generator_write                          Boolean  @default(false)
  request_form_write                            Boolean  @default(false)
  request_form_admin                            Boolean  @default(false)
  color_categories_manage                       Int?     @default(0) @db.TinyInt
  color_categories_assign                       Int?     @default(0) @db.TinyInt
  internship_form_admin                         Boolean  @default(false)
  internship_form_write                         Boolean  @default(false)
  internship_form_read                          Boolean  @default(false)
  financial_read                                Boolean? @default(false)
  columnsettings_change_default                 Int?     @default(0) @db.TinyInt
  profile_absence_manage                        Int?     @default(0) @db.TinyInt
  profile_absence_reason_manage                 Int?     @default(0) @db.TinyInt
  periodical_calendar_view                      Boolean  @default(false)
  periodical_calendar_manage_events             Boolean  @default(false)
  periodical_calendar_manage_calendars          Boolean  @default(false)
  academical_calendar_view                      Boolean  @default(false)
  academical_calendar_manage_events             Boolean  @default(false)
  academical_calendar_manage_calendars          Boolean  @default(false)
  jasper_reports_browser                        Boolean  @default(false)
  jasper_reports_manage_users                   Boolean  @default(false)
  jasper_reports_configure                      Boolean  @default(false)
  shibboleth_configure                          Boolean  @default(false)
  privateroom_edit                              Boolean  @default(false)
  automation_edit                               Boolean  @default(false)
  automation_read                               Boolean  @default(false)
  admission_procedure_manage                    Boolean  @default(false)
  lecturer_contract_manage                      Boolean  @default(false)
  matriculation                                 Boolean  @default(false)
  manage_online_application                     Boolean?
  profile_merge                                 Int      @default(0) @db.TinyInt
  prospective_read                              Boolean?
  prospective_write                             Boolean?
  applicant_read                                Boolean?
  applicant_write                               Boolean?
  other_profile_read                            Boolean?
  other_profile_write                           Boolean?
  logs_view                                     Boolean?
  submission_read_write_delete                  Int      @default(0) @db.TinyInt
  submission_read                               Int?     @default(0) @db.TinyInt
  submission_status_edit                        Int      @default(0) @db.TinyInt
  submission_manage                             Int      @default(0) @db.TinyInt
  study_program_cohort_read                     Boolean
  study_program_write                           Boolean
  cohort_write                                  Boolean
  cohort_delete                                 Boolean
  specialisation_write                          Boolean
  diploma_supplement_write                      Boolean
  document_create                               Boolean
  document_generator_template_write             Boolean
  document_generator_digitally_signed_view_send Boolean
  booking_status_edit                           Boolean
  action_menu_view                              Boolean
  profile_archiving                             Int      @default(0) @db.TinyInt
  read_course_offers_and_lecturers              Boolean  @default(false)
  read_system_event_queue                       Boolean  @default(false)
  study_time_model_read                         Boolean  @default(false)
  study_time_model_edit                         Boolean  @default(false)
  set_password_for_external                     Boolean  @default(false)
  profile_search_across_all_sites               Boolean
  profile_search_import                         Boolean  @default(false)
  company_read                                  Boolean  @default(false)
  health_insurance_read                         Boolean  @default(false)
  health_insurance_edit                         Boolean  @default(false)
  lecturer_contract_edit_settings               Boolean  @default(false)
  health_insurance_reporting_institute          Boolean  @default(false)
  address_read                                  Int?     @db.TinyInt
  address_write                                 Int?     @db.TinyInt
}

model admin_access_group_rights {
  id           BigInt @id @default(autoincrement())
  verteilerid  BigInt @default(0)
  studienid    BigInt @default(0)
  queryid      BigInt @default(0)
  groupid      BigInt
  rightid      BigInt
  access_right Int    @db.TinyInt
}

model admin_config {
  id                                   BigInt    @id @default(autoincrement())
  bezeichnung                          String?   @db.VarChar(255)
  profil_suche_eingangszeitraum_beginn DateTime? @db.Date
  profil_suche_eingangszeitraum_ende   DateTime? @db.Date
}

model admin_cv_type {
  id                                             BigInt                                           @id @default(autoincrement())
  datasrc_id                                     BigInt?
  de                                             String?                                          @db.VarChar(150)
  en                                             String?                                          @db.VarChar(150)
  position                                       Int?
  mobility_online_configuration_mobility_program mobility_online_configuration_mobility_program[]
  submission_assignment                          submission_assignment[]
}

model admin_lang {
  id  BigInt  @id @default(autoincrement())
  tag String? @unique(map: "tag") @db.VarChar(64)
  de  String? @db.Text
  en  String? @db.Text
}

model admin_queries {
  id     BigInt  @id @default(autoincrement())
  modul  Int     @default(0) @db.SmallInt
  gruppe Int     @default(0) @db.SmallInt
  bez    String? @db.VarChar(255)
  sql    String? @db.LongText
  typ    Int     @default(0) @db.TinyInt
  de     String? @db.VarChar(255)
  en     String? @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model admin_queries_temporarily {
  sid String? @db.VarChar(40)
  sql String? @db.Text

  @@ignore
}

model admin_rights {
  id   BigInt  @id @default(autoincrement())
  type String? @db.VarChar(100)
  de   String? @db.VarChar(255)
  en   String? @db.VarChar(255)
}

model admin_verteiler {
  id               BigInt             @id @default(autoincrement())
  parent           BigInt?            @default(0)
  verteilername    String?            @db.VarChar(255)
  groesse          Int                @default(0)
  datum            DateTime           @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  pid              BigInt?
  beschreibung     String?            @db.Text
  show_in_tree     Boolean            @default(true)
  site_id          BigInt?
  group_id         BigInt?
  profil_verteiler profil_verteiler[]

  @@index([verteilername], map: "verteilername")
}

model admission_procedure {
  id                                BigInt                              @id @default(autoincrement())
  semester_id                       Int
  study_program_id                  BigInt
  begin                             DateTime                            @db.Date
  end                               DateTime                            @db.Date
  available_university_places       Int
  ac5_semester                      ac5_semester                        @relation(fields: [semester_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admission_procedure_ibfk_1")
  studium                           studium                             @relation(fields: [study_program_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admission_procedure_ibfk_2")
  admission_procedure_part_relation admission_procedure_part_relation[]
  admission_procedure_user_group    admission_procedure_user_group[]

  @@unique([semester_id, study_program_id], map: "UNIQUE")
  @@index([study_program_id], map: "study_program_id")
}

model admission_procedure_booking_result {
  id                                BigInt                             @id @default(autoincrement())
  booking_id                        BigInt
  relation_id                       BigInt?
  position                          Int                                @db.UnsignedSmallInt
  result                            Float?                             @db.Float
  profil_studium                    profil_studium                     @relation(fields: [booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admission_procedure_booking_result_booking_id")
  admission_procedure_part_relation admission_procedure_part_relation? @relation(fields: [relation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admission_procedure_booking_result_relation_id")

  @@unique([booking_id, position], map: "unique_booking_position")
  @@index([relation_id], map: "admission_procedure_booking_result_relation_id")
}

model admission_procedure_part {
  id                                                                BigInt                               @id @default(autoincrement())
  code                                                              String?                              @db.VarChar(255)
  name_de                                                           String?                              @db.VarChar(255)
  name_en                                                           String?                              @db.VarChar(255)
  description_de                                                    String?                              @db.Text
  description_en                                                    String?                              @db.Text
  subsequent_upload                                                 Int?                                 @db.TinyInt
  semester_id                                                       Int
  interview                                                         Boolean                              @default(false)
  register_template_de_id                                           BigInt?
  register_template_en_id                                           BigInt?
  nl_text_admission_procedure_part_register_template_de_idTonl_text nl_text?                             @relation("admission_procedure_part_register_template_de_idTonl_text", fields: [register_template_de_id], references: [id], onUpdate: NoAction, map: "fk_admission_procedure_part_register_template_de_id")
  nl_text_admission_procedure_part_register_template_en_idTonl_text nl_text?                             @relation("admission_procedure_part_register_template_en_idTonl_text", fields: [register_template_en_id], references: [id], onUpdate: NoAction, map: "fk_admission_procedure_part_register_template_en_id")
  ac5_semester                                                      ac5_semester                         @relation(fields: [semester_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admission_procedure_part_semester")
  admission_procedure_part_lecturer                                 admission_procedure_part_lecturer[]  @ignore
  admission_procedure_part_relation                                 admission_procedure_part_relation[]
  admission_procedure_profile_result                                admission_procedure_profile_result[]
  assessment_day_procedure_part                                     assessment_day_procedure_part[]

  @@index([semester_id], map: "admission_procedure_part_semester")
  @@index([register_template_de_id], map: "fk_admission_procedure_part_register_template_de_id")
  @@index([register_template_en_id], map: "fk_admission_procedure_part_register_template_en_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model admission_procedure_part_lecturer {
  admission_procedure_part_id BigInt
  profile_id                  BigInt
  admission_procedure_part    admission_procedure_part @relation(fields: [admission_procedure_part_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_admission_procedure_part_lecturer_admission_procedure_part_id")
  profil                      profil                   @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_admission_procedure_part_lecturers_profile_id")

  @@index([admission_procedure_part_id], map: "fk_admission_procedure_part_lecturer_admission_procedure_part_id")
  @@index([profile_id], map: "fk_admission_procedure_part_lecturers_profile_id")
  @@ignore
}

model admission_procedure_part_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model admission_procedure_part_relation {
  id                                 BigInt                               @id @default(autoincrement())
  weight                             Float                                @db.Float
  subsequent_ranking                 Boolean                              @default(false)
  position                           BigInt
  admission_procedure_id             BigInt
  admission_procedure_part_id        BigInt
  admission_procedure                admission_procedure                  @relation(fields: [admission_procedure_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "admission_procedure_part_relation_procedure_id")
  admission_procedure_part           admission_procedure_part             @relation(fields: [admission_procedure_part_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "admission_procedure_part_relation_part_id")
  admission_procedure_booking_result admission_procedure_booking_result[]

  @@unique([admission_procedure_id, admission_procedure_part_id], map: "admission_procedure_id")
  @@index([admission_procedure_part_id], map: "admission_procedure_part_relation_part_id")
}

model admission_procedure_profile_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model admission_procedure_profile_result {
  id                          BigInt                   @id @default(autoincrement())
  result                      Float?                   @db.Float
  profile_id                  BigInt
  admission_procedure_part_id BigInt
  admission_procedure_part    admission_procedure_part @relation(fields: [admission_procedure_part_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "profile_result_part")
  profil                      profil                   @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "profile_result_profile")

  @@unique([profile_id, admission_procedure_part_id], map: "unique_profile_part")
  @@index([admission_procedure_part_id], map: "profile_result_part")
}

model admission_procedure_user_group {
  id                     BigInt              @id @default(autoincrement())
  admission_procedure_id BigInt
  group_users_name       String?             @db.VarChar(255)
  quota                  Float?              @db.Float
  aliquote               Int?                @default(0) @db.TinyInt
  admission_procedure    admission_procedure @relation(fields: [admission_procedure_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__admission_procedure_user_group")
  profil_studium         profil_studium[]

  @@index([admission_procedure_id], map: "FK__admission_procedure_user_group")
}

model akten {
  id           BigInt    @id @default(autoincrement())
  kuerzel      String?   @db.VarChar(24)
  name         String?   @db.VarChar(72)
  beschreibung String?   @db.Text
  datum        DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  tabelle      String?   @db.VarChar(50)
  data_id      BigInt    @default(0)
  create_user  BigInt    @default(0)
  create_date  DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  edit_user    BigInt    @default(0)
  edit_date    DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  read_user    BigInt    @default(0)
  read_date    DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  deleted      Boolean   @default(false)
  delete_user  BigInt    @default(0)
  delete_date  DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  typ          Int       @default(1)
  open         DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  close        DateTime? @db.DateTime(0)
  status       Int       @default(1) @db.TinyInt
  akten_id_alt Int       @default(0)

  @@index([create_user], map: "create_user")
  @@index([delete_user], map: "delete_user")
  @@index([edit_user], map: "edit_user")
  @@index([read_user], map: "read_user")
  @@index([tabelle], map: "tabelle")
  @@index([data_id, create_user], map: "ticket")
}

model akten_access {
  id         BigInt   @id @default(autoincrement())
  akte       BigInt   @default(0)
  user_id    BigInt   @default(0)
  read       Int      @default(1) @db.TinyInt
  write      Int      @default(1) @db.TinyInt
  set_rights Boolean  @default(false)
  valid      DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  aktentyp   Int?
  groupid    BigInt?
  ebene      Int?
  grant      Int?     @db.TinyInt
}

model akten_data {
  id            BigInt   @id @default(autoincrement())
  akte          BigInt   @default(0)
  user          BigInt   @default(0)
  betreff       String?  @db.VarChar(255)
  inhalt        String?  @db.Text
  typ           Int?
  datum         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  create_date   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  create_user   BigInt   @default(0)
  edit_user     BigInt?
  edit_date     DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  delete_user   BigInt?
  delete_date   DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  deleted       Boolean  @default(false)
  views         Int      @default(0)
  last_view     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  akten_id_alt  Int?
  dat_korres_id BigInt?
  username      String?  @db.VarChar(255)
  tabelle       String?  @db.VarChar(255)
  data_id       BigInt?
  forwarded_by  BigInt?
  forwarded_to  BigInt?

  @@index([akten_id_alt], map: "akten_id_alt")
  @@index([create_user], map: "create_user")
  @@index([delete_user], map: "delete_user")
  @@index([edit_user], map: "edit_user")
  @@index([akte], map: "ticket")
  @@index([user], map: "user")
}

model akten_docs {
  id             BigInt   @id @default(autoincrement())
  akte           BigInt   @default(0)
  eintrag        BigInt   @default(0)
  name           String?  @db.VarChar(180)
  file           String?  @db.VarChar(255)
  size           BigInt   @default(0)
  format         String?  @db.VarChar(5)
  type           String?  @db.VarChar(255)
  create_user    BigInt   @default(0)
  create_date    DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  edit_user      BigInt   @default(0)
  edit_date      DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  delete_user    BigInt   @default(0)
  delete_date    DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  views          Int      @default(0)
  last_view      DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  last_viewed_by BigInt   @default(0)
  deleted        Boolean  @default(false)
  dokumenttyp    Int?
  akten_id_alt   Int      @default(0)
  pw             String?  @db.VarChar(255)

  @@index([eintrag], map: "eintrag")
}

model akten_suche_fields {
  id              BigInt   @id @default(autoincrement())
  ref_field       String?  @db.VarChar(255)
  ref_field_label String?  @db.VarChar(255)
  ref_table       String?  @db.VarChar(255)
  aktiv           Boolean? @default(true)
  typ             String?  @db.VarChar(255)
  dsrc_ref_field  String?  @db.VarChar(255)
  dsrc_ref_table  String?  @db.VarChar(255)
  comparable      Boolean? @default(true)
}

model akten_suche_group_field {
  id           Int @id @default(autoincrement())
  ref_field_id Int @default(0)
  group_id     Int @default(0)
  pos          Int @default(0)
}

model akten_suche_groups {
  id        BigInt  @id @default(autoincrement())
  pos       Int     @default(0)
  ref_table String? @db.VarChar(255)
  name      String? @db.VarChar(255)
  visual    Boolean @default(false)
}

model application {
  id                                  BigInt                                @id @default(autoincrement())
  name                                String?                               @db.VarChar(255)
  email_registration_template_de_id   BigInt?
  email_registration_template_en_id   BigInt?
  access_group_id                     BigInt?
  schema_id                           BigInt?
  sender_email_address                String?                               @db.VarChar(255)
  portal_name                         String?                               @db.VarChar(255)
  access_groups                       access_groups?                        @relation(fields: [access_group_id], references: [id], onUpdate: NoAction, map: "a_access_group_id")
  settings_schema                     settings_schema?                      @relation(fields: [schema_id], references: [id], onUpdate: NoAction, map: "fk_application_schema_id")
  application_data_protection_version application_data_protection_version[]
  application_period_application      application_period_application[]
  application_program                 application_program[]
  application_site                    application_site[]

  @@index([access_group_id], map: "a_access_group_id")
  @@index([schema_id], map: "fk_application_schema_id")
}

model application_booking_order {
  booking_id     BigInt         @id
  order          Int?           @db.SmallInt
  created_date   DateTime?      @db.DateTime(0)
  edit_date      DateTime?      @db.DateTime(0)
  profil_studium profil_studium @relation(fields: [booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "application_booking_order_booking_id_profil_studium_id")
}

model application_category {
  id      BigInt  @id @default(autoincrement())
  name_de String? @db.VarChar(255)
  name_en String? @db.VarChar(255)
}

model application_data_protection_version {
  id                                          BigInt                                        @id @default(autoincrement())
  application_id                              BigInt
  agreement                                   String?                                       @db.Text
  version                                     Int
  language_code                               String?                                       @db.VarChar(255)
  application                                 application                                   @relation(fields: [application_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_application_data_protection_version_application_id")
  profile_application_data_protection_version profile_application_data_protection_version[]

  @@unique([application_id, version, language_code], map: "application_id")
}

model application_document_confirmation {
  booking_id        BigInt         @id
  confirmation_date DateTime?      @db.DateTime(0)
  download_date     DateTime?      @db.DateTime(0)
  profil_studium    profil_studium @relation(fields: [booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_application_document_confirmation_booking_id_new")
}

model application_document_type {
  id              BigInt  @id @default(autoincrement())
  de              String? @db.VarChar(150)
  en              String? @db.VarChar(150)
  pos             Int?    @db.SmallInt
  verpflichtend   Int?    @db.TinyInt
  domain          BigInt?
  profile_picture Boolean
}

model application_link {
  id               BigInt  @id @default(autoincrement())
  name             String? @db.VarChar(255)
  applicationId    BigInt?
  authenticationId BigInt?
}

model application_period {
  id                             BigInt                           @id @default(autoincrement())
  reference_semester_id          BigInt?
  application_period_from        DateTime?                        @db.DateTime(0)
  application_period_to          DateTime?                        @db.DateTime(0)
  application_period_application application_period_application[]
}

model application_period_application {
  application_period_id BigInt
  application_id        BigInt
  application           application        @relation(fields: [application_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_application_period_application_application_id")
  application_period    application_period @relation(fields: [application_period_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_application_period_application_application_period_id")

  @@id([application_period_id, application_id])
  @@index([application_id], map: "fk_application_period_application_application_id")
}

model application_period_mapping {
  studyProgramId      BigInt
  applicationPeriodId BigInt

  @@unique([studyProgramId, applicationPeriodId], map: "studyProgramId")
}

model application_program {
  id                                                                            BigInt                                     @id @default(autoincrement())
  application_id                                                                BigInt
  study_program_id                                                              BigInt
  study_program_name_de                                                         String?                                    @db.VarChar(255)
  study_program_name_en                                                         String?                                    @db.VarChar(255)
  active                                                                        Int?                                       @db.SmallInt
  position                                                                      BigInt?
  datasource_id                                                                 BigInt?
  email_submit_template_de_id                                                   BigInt?
  email_submit_template_en_id                                                   BigInt?
  max_focus_applications                                                        Int?                                       @db.SmallInt
  email_assessment_register_template_de_id                                      BigInt?
  email_assessment_register_template_en_id                                      BigInt?
  application                                                                   application                                @relation(fields: [application_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "application_program_application_id")
  cms_datasrc                                                                   cms_datasrc?                               @relation(fields: [datasource_id], references: [id], onUpdate: NoAction, map: "application_program_datasource_id")
  nl_text_application_program_email_assessment_register_template_de_idTonl_text nl_text?                                   @relation("application_program_email_assessment_register_template_de_idTonl_text", fields: [email_assessment_register_template_de_id], references: [id], onUpdate: NoAction, map: "fk_application_program_nl_text_assessment_register_de")
  nl_text_application_program_email_assessment_register_template_en_idTonl_text nl_text?                                   @relation("application_program_email_assessment_register_template_en_idTonl_text", fields: [email_assessment_register_template_en_id], references: [id], onUpdate: NoAction, map: "fk_application_program_nl_text_assessment_register_en")
  nl_text_application_program_email_submit_template_de_idTonl_text              nl_text?                                   @relation("application_program_email_submit_template_de_idTonl_text", fields: [email_submit_template_de_id], references: [id], onUpdate: NoAction, map: "application_program_email_submit_template_de_id")
  nl_text_application_program_email_submit_template_en_idTonl_text              nl_text?                                   @relation("application_program_email_submit_template_en_idTonl_text", fields: [email_submit_template_en_id], references: [id], onUpdate: NoAction, map: "application_program_email_submit_template_en_id")
  studium                                                                       studium                                    @relation(fields: [study_program_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "application_program_study_program_id")
  application_program_language                                                  application_program_language[]
  application_program_site                                                      application_program_site[]
  application_program_status_ignore_period                                      application_program_status_ignore_period[]

  @@unique([application_id, study_program_id], map: "application_id_study_program_id")
  @@index([datasource_id], map: "application_program_datasource_id")
  @@index([email_submit_template_de_id], map: "application_program_email_submit_template_de_id")
  @@index([email_submit_template_en_id], map: "application_program_email_submit_template_en_id")
  @@index([study_program_id], map: "application_program_study_program_id")
  @@index([email_assessment_register_template_de_id], map: "fk_application_program_nl_text_assessment_register_de")
  @@index([email_assessment_register_template_en_id], map: "fk_application_program_nl_text_assessment_register_en")
}

model application_program_language {
  application_program_id BigInt              @default(0)
  key                    String              @default("") @db.VarChar(2)
  application_program    application_program @relation(fields: [application_program_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_application_program_language_application_program_id")

  @@id([application_program_id, key])
}

model application_program_site {
  application_program_id BigInt              @default(0)
  site_id                BigInt
  application_program    application_program @relation(fields: [application_program_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_application_program_site_application_program_id")

  @@id([application_program_id, site_id])
  @@index([site_id], map: "application_program_site_site_id")
}

model application_program_status_ignore_period {
  application_program_id BigInt
  status_id              BigInt
  application_program    application_program @relation(fields: [application_program_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_application_program_status_application_id")
  pm_grad                pm_grad             @relation(fields: [status_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_application_status_status_id")

  @@id([application_program_id, status_id])
  @@index([status_id], map: "fk_application_status_status_id")
}

model application_registration_token {
  email        String   @id @default("") @db.VarChar(255)
  token        String?  @unique(map: "token") @db.VarChar(255)
  created_date DateTime @db.DateTime(0)
}

model application_site {
  application_id BigInt
  site_id        BigInt
  application    application  @relation(fields: [application_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_application_site_application_id")
  pm_standorte   pm_standorte @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_application_site_site_id")

  @@id([application_id, site_id])
  @@index([site_id], map: "fk_application_site_site_id")
}

model application_status_change_confirmation {
  booking_id        BigInt
  booking_status_id BigInt
  created_date      DateTime          @db.DateTime(0)
  profil_studium    profil_studium    @relation(fields: [booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_application_status_change_booking_id")
  pm_grad_applicant pm_grad_applicant @relation(fields: [booking_status_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_application_status_change_booking_status_id")

  @@id([booking_id, booking_status_id])
  @@index([booking_status_id], map: "fk_application_status_change_booking_status_id")
}

model assessment_day {
  id                            BigInt                          @id @default(autoincrement())
  date                          DateTime                        @db.Date
  term                          Int                             @db.SmallInt
  year                          Int                             @db.SmallInt
  site_id                       BigInt
  status                        Int                             @db.SmallInt
  registration_date             DateTime                        @db.Date
  deregistration_date           DateTime                        @db.Date
  label                         String?                         @db.VarChar(255)
  deleted                       Boolean                         @default(false)
  visibility_date               DateTime?                       @db.Date
  pm_standorte                  pm_standorte                    @relation(fields: [site_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_assessment_day_site_id")
  assessment_day_procedure_part assessment_day_procedure_part[]

  @@index([site_id], map: "fk_assessment_day_site_id")
}

model assessment_day_log {
  id        BigInt    @id @default(autoincrement())
  type      String?   @db.VarChar(255)
  time      DateTime? @db.DateTime(0)
  user_id   BigInt?
  values    String?   @db.Text
  entity_id BigInt?
}

model assessment_day_procedure_part {
  id                                      BigInt                                    @id @default(autoincrement())
  from                                    DateTime                                  @db.DateTime(0)
  to                                      DateTime                                  @db.DateTime(0)
  assessment_day_id                       BigInt
  admission_procedure_part_id             BigInt
  max_participants                        Int                                       @default(100) @db.SmallInt
  event_date_id                           BigInt?
  admission_procedure_part                admission_procedure_part                  @relation(fields: [admission_procedure_part_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_assessment_day_procedure_part_procedure_part_id")
  assessment_day                          assessment_day                            @relation(fields: [assessment_day_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_assessment_day_procedure_assessment_day_id")
  assessment_day_procedure_part_lecturers assessment_day_procedure_part_lecturers[]
  assessment_day_procedure_part_profile   assessment_day_procedure_part_profile[]

  @@index([assessment_day_id], map: "fk_assessment_day_procedure_assessment_day_id")
  @@index([admission_procedure_part_id], map: "fk_assessment_day_procedure_part_procedure_part_id")
}

model assessment_day_procedure_part_lecturers {
  admission_procedure_part_id   BigInt
  profile_id                    BigInt
  assessment_day_procedure_part assessment_day_procedure_part @relation(fields: [admission_procedure_part_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_assessment_day_procedure_part_lecturer_admission_procedure")
  profil                        profil                        @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_assessment_day_procedure_part_lecturers_profile_id")

  @@id([admission_procedure_part_id, profile_id])
  @@index([profile_id], map: "fk_assessment_day_procedure_part_lecturers_profile_id")
}

model assessment_day_procedure_part_profile {
  admission_procedure_part_id   BigInt
  profile_id                    BigInt
  registration_date             DateTime                      @db.DateTime(0)
  assessment_day_procedure_part assessment_day_procedure_part @relation(fields: [admission_procedure_part_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_assessment_day_procedure_part_profile_admission_procedure")
  profil                        profil                        @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_assessment_day_procedure_part_profile_profile_id")

  @@id([admission_procedure_part_id, profile_id])
  @@index([profile_id], map: "fk_assessment_day_procedure_part_profile_profile_id")
}

model assessment_day_procedure_part_room {
  admission_procedure_part_id BigInt
  room_id                     BigInt

  @@id([admission_procedure_part_id, room_id])
}

model assessment_day_settings {
  id                        BigInt                     @id @default(autoincrement())
  custom_event_type_id      BigInt?
  planning_status_id        BigInt?
  event_custom_event_type   event_custom_event_type?   @relation(fields: [custom_event_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_event_custom_event_type_assessment_day_settings")
  scheduler_planning_status scheduler_planning_status? @relation(fields: [planning_status_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_scheduler_planning_status_assessment_day_settings")

  @@index([custom_event_type_id], map: "fk_event_custom_event_type_assessment_day_settings")
  @@index([planning_status_id], map: "fk_scheduler_planning_status_assessment_day_settings")
}

model assessment_days {
  id               BigInt    @id @default(autoincrement())
  bezeichnung_de   String?   @db.VarChar(255)
  bezeichnung_en   String?   @db.VarChar(255)
  city             String?   @db.VarChar(255)
  datum            DateTime  @db.Date
  registrationFrom DateTime? @db.Date
  registrationTo   DateTime? @db.Date
  standort         Int
  von              DateTime? @db.Time(0)
  bis              DateTime? @db.Time(0)
  kommentar        String?   @db.Text
  max_teilnehmer   Int?
  gruppe           BigInt?
  created_date     DateTime  @db.DateTime(0)
  created_user     BigInt
  deleted_date     DateTime? @db.DateTime(0)
  deleted_user     BigInt
  status           Int       @default(1) @db.TinyInt
  signOffTo        DateTime? @db.Date

  @@index([deleted_date], map: "deleted_date")
  @@index([standort], map: "standort")
}

model assessment_groups {
  id   BigInt  @id @default(autoincrement())
  name String? @db.VarChar(255)
}

model assessment_user {
  id         BigInt    @id @default(autoincrement())
  assessment BigInt?
  profil     BigInt?
  datum      DateTime? @db.DateTime(0)
  status     Int?
  score      Float?    @db.Float
  kommentar  String?   @db.Text

  @@unique([assessment, profil], map: "assessment")
  @@index([profil], map: "idx_profil")
  @@index([status], map: "status")
}

model authentication_oauth {
  id           BigInt  @id @default(autoincrement())
  name         String? @db.VarChar(255)
  clientId     String? @db.VarChar(255)
  clientSecret String? @db.VarChar(255)
}

model ba_statistic_profile {
  profile_id              BigInt  @id
  admission_requirement   BigInt?
  region_abroad           BigInt?
  stay_abroad_state       BigInt?
  stay_abroad_state_month BigInt?
  stay_abroad_kind        BigInt?
  mobility_program        BigInt?
  profil                  profil  @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ba_statistic_profile_profil_id")
}

model ba_statistic_reporting_institute {
  id                        BigInt @id @default(autoincrement())
  name                      String @db.VarChar(255)
  report_entity_id_code     String @db.VarChar(8)
  report_federal_state_code String @db.VarChar(2)
  site_id_code              String @db.VarChar(4)
}

model ba_statistic_reporting_institute_site {
  site_id                             BigInt @id
  ba_statistic_reporting_institute_id BigInt
}

model ba_statistic_student_report {
  id                     BigInt   @id @default(autoincrement())
  announcement_year      BigInt
  reporting_institute_id BigInt
  create_date_time       DateTime @db.DateTime(0)
  create_user_id         BigInt
  student_count          Int?
  delivered              Int      @default(0) @db.TinyInt
  comment                String?  @db.VarChar(255)
}

model ba_statistic_student_report_study_program {
  ba_statistic_student_report_id BigInt
  study_program_id               BigInt

  @@id([ba_statistic_student_report_id, study_program_id])
}

model bis_admission_requirement {
  code  String  @id @default("") @db.VarChar(255)
  label String? @db.VarChar(255)
}

model bis_announcement_type {
  code              String  @id @default("") @db.VarChar(255)
  label             String? @db.VarChar(255)
  announcement_type Int
  degree_type       Int     @default(1)
}

model bis_booking_admission_requirement {
  booking_id               BigInt    @id
  admission_requirement_id String?   @db.VarChar(255)
  date                     DateTime? @db.Date
  institution              String?   @db.VarChar(255)
  zip                      String?   @db.VarChar(255)
  country_id               BigInt?
  city                     String?   @db.VarChar(255)
  bis_occupation_id        BigInt?
}

model bis_booking_educational_background {
  booking_id                 BigInt                      @id
  educational_background_id  String?                     @db.VarChar(255)
  date                       DateTime?                   @db.Date
  institution                String?                     @db.VarChar(255)
  zip                        String?                     @db.VarChar(255)
  country_id                 BigInt?
  city                       String?                     @db.VarChar(255)
  bis_educational_background bis_educational_background? @relation(fields: [educational_background_id], references: [code], onDelete: Cascade, onUpdate: NoAction, map: "bis_booking_educational_background_code")

  @@index([educational_background_id], map: "bis_booking_educational_background_code")
}

model bis_educational_background {
  code                               String                               @id @default("") @db.VarChar(255)
  label                              String?                              @db.VarChar(255)
  bis_booking_educational_background bis_booking_educational_background[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model bis_exchange_support_code {
  bis_profile_id BigInt
  code           String @db.VarChar(255)

  @@ignore
}

model bis_habitation_purpose {
  code  String  @id @default("") @db.VarChar(255)
  label String? @db.VarChar(255)
}

model bis_joint_studies {
  id                            BigInt  @id @default(autoincrement())
  booking_id                    BigInt
  study_type                    BigInt
  bis_linked_study_program_code String? @db.VarChar(255)
  bis_mobility_program_code     String? @db.VarChar(255)
  bis_status                    Int
  university_semester_number    BigInt?
  year                          BigInt?
  term                          BigInt?
}

model bis_lecturer_first_occupation_type {
  code                         String                         @id @default("") @db.VarChar(255)
  label                        String?                        @db.VarChar(255)
  bis_code                     String?                        @db.VarChar(255)
  lecturer_contract_employment lecturer_contract_employment[]
}

model bis_lecturer_function_code {
  code                       BigInt                       @id
  label                      String                       @db.VarChar(255)
  lecturer_contract_function lecturer_contract_function[]
}

model bis_lecturer_highest_completed_education {
  code              String              @id @default("") @db.VarChar(255)
  label             String?             @db.VarChar(255)
  lecturer_contract lecturer_contract[]
}

model bis_lecturer_main_occupation {
  code              String              @id @default("") @db.VarChar(255)
  label             String?             @db.VarChar(255)
  lecturer_contract lecturer_contract[]
}

model bis_lecturer_occupation_usage_category {
  code                                          String                                          @id @default("") @db.VarChar(255)
  label                                         String?                                         @db.VarChar(255)
  lecturer_contract_employment                  lecturer_contract_employment[]
  lecturer_contract_employment_occupation_usage lecturer_contract_employment_occupation_usage[]
}

model bis_lecturer_second_occupation_type {
  code                         String                         @id @default("") @db.VarChar(255)
  label                        String?                        @db.VarChar(255)
  lecturer_contract_employment lecturer_contract_employment[]
}

model bis_lecturer_special_qualification {
  code              String              @id @default("") @db.VarChar(255)
  label             String?             @db.VarChar(255)
  lecturer_contract lecturer_contract[]
}

model bis_lecturer_working_hours {
  code                         String                         @id @default("") @db.VarChar(255)
  label                        String?                        @db.VarChar(255)
  lecturer_contract_employment lecturer_contract_employment[]
}

model bis_linked_study_program {
  code                        String  @id @default("") @db.VarChar(255)
  label                       String? @db.VarChar(255)
  bis_partner_university_code String? @db.VarChar(255)
  study_type                  BigInt
}

model bis_mobility_program {
  code        String        @id @default("") @db.VarChar(255)
  label       String?       @db.VarChar(255)
  bis_profile bis_profile[]
}

model bis_occupation {
  code  String  @id @default("") @db.VarChar(255)
  label String? @db.VarChar(255)
}

model bis_organizational_form {
  code  String  @id @default("") @db.VarChar(255)
  label String? @db.VarChar(255)
}

model bis_partner_university {
  code  String  @id @default("") @db.VarChar(255)
  label String? @db.VarChar(255)
}

model bis_profile {
  id                      BigInt                @id @default(autoincrement())
  profile_id              BigInt
  semester_year           Int
  semester_term           Int
  booking_id              BigInt
  country_id              BigInt
  mobility_program_code   String?               @db.VarChar(255)
  habitation_purpose_code String?               @db.VarChar(255)
  institution             String?               @db.VarChar(255)
  from_date               DateTime              @db.Date
  to_date                 DateTime              @db.Date
  comment                 String?               @db.Text
  ects_achieved           Int?                  @db.TinyInt
  ects_credited           Int?                  @db.TinyInt
  profil_studium          profil_studium        @relation(fields: [booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "bis_profile_profil_studium_id")
  laender                 laender               @relation(fields: [country_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "bis_profile_country_id")
  bis_mobility_program    bis_mobility_program? @relation(fields: [mobility_program_code], references: [code], onDelete: Cascade, onUpdate: NoAction, map: "bis_profile_mobility_program_code")
  profil                  profil                @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_bis_profile_profile_id")

  @@index([country_id], map: "bis_profile_country_id")
  @@index([habitation_purpose_code], map: "bis_profile_habitation_purpose_code")
  @@index([mobility_program_code], map: "bis_profile_mobility_program_code")
  @@index([booking_id], map: "bis_profile_profil_studium_id")
  @@index([profile_id], map: "fk_bis_profile_profile_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model bis_profile_habitation_purpose_code {
  bis_profile_id              BigInt
  bis_habitation_purpose_code String? @db.VarChar(255)

  @@ignore
}

model bis_profile_property {
  profile_id                       BigInt    @id
  social_insurance_number          String?   @db.VarChar(255)
  replacement_label                String?   @db.VarChar(255)
  matriculation_number             String?   @db.VarChar(255)
  sector_specific_pin              String?   @db.VarChar(255)
  social_insurance_number_add_date DateTime? @db.Date
  date_of_issue                    DateTime? @db.Date
  country_id                       BigInt?
  issuing_authority                String?   @db.VarChar(255)
  document_number                  String?   @db.VarChar(255)
  document_type                    BigInt?
  profil                           profil    @relation(fields: [profile_id], references: [id], onDelete: Cascade, map: "bis_profile_property_profile_id")
}

model bis_reporting_institute {
  id              BigInt @id @default(autoincrement())
  maintainer      String @db.VarChar(255)
  name            String @db.VarChar(255)
  location        String @db.VarChar(255)
  address_type_id BigInt
}

model bis_reporting_institute_lecturer_contract_employment_status {
  lecturer_contract_employment_status_id BigInt
  bis_reporting_institute_id             BigInt

  @@id([lecturer_contract_employment_status_id, bis_reporting_institute_id])
}

model bis_reporting_institute_site {
  site_id                    BigInt @id
  bis_reporting_institute_id BigInt
}

model bis_staff_report {
  id               BigInt   @id @default(autoincrement())
  date_generated   DateTime @db.Date
  academic_year    Int
  create_user_id   BigInt
  create_date_time DateTime @db.DateTime(0)
  count_staff      BigInt?
}

model bis_student_report {
  id                       BigInt    @id @default(autoincrement())
  date_generated           DateTime  @db.Date
  referenced_semester_id   BigInt
  count_study_programs     BigInt
  count_students           BigInt
  create_user_id           BigInt
  create_date_time         DateTime? @db.DateTime(0)
  report_from_date         DateTime? @db.DateTime(0)
  report_to_date           DateTime? @db.DateTime(0)
  study_program_short_list String?   @db.VarChar(255)
}

model bis_student_report_study_program {
  student_report_id BigInt
  study_program_id  BigInt
  studium           studium @relation(fields: [study_program_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_bis_student_report_study_program_study_program_id")

  @@id([student_report_id, study_program_id])
  @@index([study_program_id], map: "fk_bis_student_report_study_program_study_program_id")
}

model bis_training_course_report {
  id                         BigInt   @id @default(autoincrement())
  date_generated             DateTime @db.Date
  referenced_year            Int
  referenced_term            Int
  create_date_time           DateTime @db.DateTime(0)
  create_user_id             BigInt
  count_students             Int?
  count_training_courses     Int?
  training_course_short_list String?  @db.VarChar(255)
}

model booking_draw_removal {
  booking_id     BigInt
  course_id      BigInt
  removal_date   DateTime       @db.DateTime(0)
  profil_studium profil_studium @relation(fields: [booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_booking_draw_removal_booking_id")
  kb_kursangebot kb_kursangebot @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_booking_draw_removal_course_id")

  @@id([booking_id, course_id, removal_date])
  @@index([course_id], map: "fk_booking_draw_removal_course_id")
}

model booking_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model booking_study_time_model {
  booking_id          BigInt           @id
  study_time_model_id BigInt
  date                DateTime         @db.DateTime(0)
  profil_studium      profil_studium   @relation(fields: [booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_booking_study_time_model_booking_id")
  study_time_model    study_time_model @relation(fields: [study_time_model_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_booking_study_time_model_study_time_model_id")

  @@index([study_time_model_id], map: "fk_booking_study_time_model_study_time_model_id")
}

model building_approved_sites {
  building_id  BigInt
  site_id      BigInt
  kb_standorte kb_standorte @relation(fields: [building_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_building_site_approved_building_id")
  pm_standorte pm_standorte @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_building_site_approved_site_id")

  @@id([building_id, site_id])
  @@index([site_id], map: "fk_building_site_approved_site_id")
}

model building_room_category {
  id        BigInt      @id @default(autoincrement())
  label_de  String?     @db.VarChar(255)
  label_en  String?     @db.VarChar(255)
  color_id  BigInt
  color     color       @relation(fields: [color_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "building_room_category_color")
  pm_raeume pm_raeume[]

  @@index([color_id], map: "building_room_category_color")
}

model calendar_settings {
  profile_id             BigInt   @id
  hour_start             Int?     @db.SmallInt
  hour_end               Int?     @db.SmallInt
  hour_size              Int?     @db.SmallInt
  day_first              Int?     @db.SmallInt
  event_template         String?  @db.Text
  event_template_seminar String?  @db.Text
  number_of_days         Int?     @default(5)
  filter_save            Boolean? @default(true)
}

model campaign {
  id                BigInt    @id @default(autoincrement())
  name              String?   @db.VarChar(255)
  from              DateTime? @db.Date
  until             DateTime? @db.Date
  description       String?   @db.Text
  target_group      String?   @db.Text
  contact_person_id BigInt?
  budget            Decimal?  @db.Decimal(10, 2)
  category_id       BigInt?
  created_date      DateTime? @db.Date
  created_user      BigInt?
  deleted_date      DateTime? @db.Date
}

model campaign_category {
  id       BigInt  @id @default(autoincrement())
  label_de String? @db.VarChar(255)
  label_en String? @db.VarChar(255)
}

model campaign_profile {
  campaign_id BigInt
  profile_id  BigInt
  status_id   BigInt?

  @@id([campaign_id, profile_id])
}

model campaign_profile_status {
  id       BigInt  @id @default(autoincrement())
  label_de String? @db.VarChar(255)
  label_en String? @db.VarChar(255)
}

model clix_sync {
  id                            BigInt                          @id @default(autoincrement())
  start_time                    DateTime                        @db.DateTime(0)
  end_time                      DateTime?                       @db.DateTime(0)
  clix_sync_course              clix_sync_course[]
  clix_sync_course_ticket       clix_sync_course_ticket[]
  clix_sync_course_ticket_error clix_sync_course_ticket_error[]
  clix_sync_profile             clix_sync_profile[]
  clix_sync_profile_error       clix_sync_profile_error[]
}

model clix_sync_course {
  sync_id   BigInt
  course_id BigInt
  time      DateTime  @db.DateTime(0)
  clix_sync clix_sync @relation(fields: [sync_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "course_sync")

  @@id([sync_id, course_id])
  @@index([course_id, time], map: "course_time")
}

model clix_sync_course_ticket {
  sync_id          BigInt
  course_ticket_id BigInt
  time             DateTime  @db.DateTime(0)
  exam_admission   Boolean
  clix_sync        clix_sync @relation(fields: [sync_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "course_ticket_sync")

  @@id([sync_id, course_ticket_id, exam_admission])
  @@index([exam_admission, course_ticket_id], map: "admission_ticket")
}

model clix_sync_course_ticket_error {
  sync_id          BigInt
  course_ticket_id BigInt
  sent_message     String?   @db.LongText
  received_message String?   @db.LongText
  clix_sync        clix_sync @relation(fields: [sync_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "course_ticket_error_sync")

  @@id([sync_id, course_ticket_id])
  @@index([course_ticket_id], map: "course_ticket")
}

model clix_sync_profile {
  sync_id    BigInt
  profile_id BigInt
  time       DateTime  @db.DateTime(0)
  clix_sync  clix_sync @relation(fields: [sync_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "profile_sync")

  @@id([sync_id, profile_id])
  @@index([profile_id, time], map: "profile_time")
}

model clix_sync_profile_error {
  sync_id          BigInt
  profile_id       BigInt
  sent_message     String?   @db.LongText
  received_message String?   @db.LongText
  clix_sync        clix_sync @relation(fields: [sync_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "profile_error_sync")

  @@id([sync_id, profile_id])
  @@index([profile_id], map: "profile")
}

model cms_access {
  pageid  BigInt @default(0)
  groupid BigInt @default(0)
  access  Int    @default(1) @db.TinyInt

  @@id([pageid, groupid])
  @@index([groupid], map: "groupid")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model cms_access_group {
  groupid        BigInt   @default(0)
  domain         BigInt
  nav_view       Int      @default(0) @db.TinyInt
  nav_edit       Int      @default(0) @db.TinyInt
  design_write   Int      @default(0) @db.TinyInt
  files_read     Int      @default(0) @db.TinyInt
  files_write    Int      @default(0) @db.TinyInt
  page_create    Int      @default(0) @db.TinyInt
  page_edit      Int      @default(0) @db.TinyInt
  page_delete    Int      @default(0) @db.TinyInt
  page_release   Int      @default(0) @db.TinyInt
  content_read   Int      @default(0) @db.TinyInt
  content_edit   Int      @default(0) @db.TinyInt
  content_delete Int      @default(0) @db.TinyInt
  form_read      Int?     @default(0) @db.TinyInt
  form_write     Int?     @default(0) @db.TinyInt
  lang_write     Int      @default(0) @db.TinyInt
  access         Int      @default(0) @db.TinyInt
  datasrc        Int      @default(0) @db.TinyInt
  module         Int      @default(0) @db.TinyInt
  config         Int      @default(0) @db.TinyInt
  lang           Int      @default(0) @db.TinyInt
  domains        Int      @default(0) @db.TinyInt
  comm_admin     Boolean?

  @@index([domain], map: "domain")
  @@ignore
}

model cms_area {
  id       BigInt  @id @default(autoincrement())
  layout   BigInt  @default(1)
  name     String? @db.VarChar(64)
  shorttag String? @db.VarChar(16)

  @@index([layout], map: "layout")
}

model cms_args {
  id          BigInt  @id @default(autoincrement())
  layout      BigInt  @default(0)
  border      BigInt  @default(0)
  name        String? @db.VarChar(64)
  bezeichnung String? @db.VarChar(32)
  typ         String? @db.VarChar(8)
  position    Int     @default(1)
  img_x       Int     @default(0)
  img_y       Int     @default(0)
  dir         String? @db.VarChar(128)
  link_db     String? @db.VarChar(32)
  link_ref    String? @db.VarChar(32)
  link_field  String? @db.VarChar(32)

  @@index([border], map: "border")
  @@index([layout], map: "layout")
}

model cms_border {
  id     BigInt  @id @default(autoincrement())
  name   String? @db.VarChar(128)
  domain BigInt  @default(0)
  beginn String? @db.Text
  ende   String? @db.Text

  @@index([domain], map: "domain")
}

model cms_com_custom_color {
  domain_id Int     @default(0) @db.SmallInt
  number    Int     @default(0) @db.SmallInt
  color     String? @db.VarChar(255)

  @@id([domain_id, number])
}

model cms_com_footer {
  domain_id Int     @default(0) @db.SmallInt
  lang      String  @default("") @db.VarChar(255)
  footer    String? @db.LongText

  @@id([domain_id, lang])
}

model cms_com_logo {
  domain_id Int     @default(0) @db.SmallInt
  lang      String  @default("") @db.VarChar(255)
  logo      String? @db.VarChar(255)

  @@id([domain_id, lang])
}

model cms_community {
  domain_id                       Int                          @id @db.SmallInt
  name                            String?                      @db.VarChar(255)
  url                             String?                      @db.VarChar(255)
  mail_adressor                   String?                      @db.VarChar(255)
  mail_contact                    String?                      @db.VarChar(255)
  banner_image                    String?                      @db.VarChar(255)
  custom_profile_images           Boolean?
  personal_data_editable          Boolean?                     @default(false)
  correspondence_address_editable Boolean?                     @default(false)
  extended_search_enable          Boolean?
  display_logo_all_pages          Boolean?
  students_findable               Boolean                      @default(true)
  affiliation                     Boolean?
  tracking_code                   String?                      @db.Text
  custom_error_message_de         String?                      @db.Text
  custom_error_message_en         String?                      @db.Text
  external_change_password_link   String?                      @db.VarChar(255)
  external_forgot_password_link   String?                      @db.VarChar(255)
  default_schema_id               BigInt
  com_visible_address_status      com_visible_address_status[]
  com_visible_address_types       com_visible_address_types[]
  push_subscription               push_subscription[]
}

model cms_community_configuration {
  community_id Int
  key          String  @default("") @db.VarChar(255)
  value        String? @db.LongText

  @@id([community_id, key])
}

model cms_community_custom_color {
  domain_id  Int
  identifier String  @default("") @db.VarChar(255)
  color      String? @db.VarChar(255)

  @@id([domain_id, identifier])
}

model cms_community_site {
  domain_id Int @db.SmallInt
  site_id   Int

  @@id([domain_id, site_id])
}

model cms_community_white_label {
  id           Int     @id @default(autoincrement())
  domain_id    Int?
  name         String? @db.VarChar(255)
  url          String? @db.VarChar(255)
  welcome_text String? @db.Text
  banner       String? @db.VarChar(255)
}

model cms_community_white_label_access_group {
  white_label_id  Int
  access_group_id Int

  @@id([white_label_id, access_group_id])
}

model cms_config {
  domain         String  @id @default("") @db.VarChar(64)
  next_pageid    BigInt  @default(1)
  default_lang   String? @db.Char(2)
  cms_login      BigInt  @default(0)
  cms_404        BigInt  @default(0)
  cms_dir        String? @db.VarChar(128)
  cms_data       String? @db.VarChar(128)
  cms_url        String? @db.VarChar(128)
  cms_live       String? @db.VarChar(128)
  cms_modules    String? @db.VarChar(128)
  cms_images     String? @db.VarChar(128)
  cms_files      String? @db.VarChar(128)
  cms_styles     String? @db.VarChar(128)
  cms_datasrc    String? @db.VarChar(128)
  cms_imagick    String? @db.VarChar(128)
  server_livedir String? @db.VarChar(128)
  server_root    String? @db.VarChar(64)
  stat_url       String? @db.VarChar(255)
  larissa_lib    String? @db.VarChar(255)

  @@index([domain], map: "domain")
}

model cms_container {
  id                  BigInt   @id @default(autoincrement())
  typ                 Int      @default(1)
  pageid              BigInt   @default(1)
  parent              BigInt   @default(0)
  lang                Int      @default(1)
  name                String?  @db.VarChar(64)
  position            Int      @default(1)
  template            BigInt   @default(0)
  modul               String?  @db.VarChar(255)
  modul_args          String?  @db.Text
  border              BigInt   @default(0)
  border_args         String?  @db.Text
  multiple            BigInt?
  show_random         Int      @default(0) @db.TinyInt
  recordset           BigInt   @default(0)
  released            DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  valid               DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  visible_only_public Boolean  @default(false)

  @@index([parent], map: "parent")
}

model cms_data {
  id          BigInt    @id @default(autoincrement())
  c_cat       BigInt    @default(0)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  html        String?   @db.LongText

  @@index([c_aktiv], map: "c_container")
}

model cms_data_abwesenheitsgruende {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(1)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  bezeichnung String?   @db.VarChar(255)

  @@index([id, c_domain, c_cat, c_aktiv], map: "id")
}

model cms_data_adressstatus {
  id                         BigInt                       @id @default(autoincrement())
  c_domain                   BigInt                       @default(0)
  c_cat                      BigInt                       @default(0)
  c_pos                      Int                          @default(1)
  c_version                  String?                      @db.VarChar(32)
  c_aktiv                    Int                          @default(0) @db.TinyInt
  c_online                   DateTime?                    @db.Date
  c_offline                  DateTime?                    @db.Date
  adress_status              String?                      @db.VarChar(255)
  adress_status_en           String?                      @db.VarChar(64)
  com_visible_address_status com_visible_address_status[]

  @@index([c_domain], map: "c_domain")
  @@index([id, c_cat, c_aktiv], map: "id")
}

model cms_data_application_programs {
  id                    BigInt    @id @default(autoincrement())
  c_domain              BigInt    @default(0)
  c_cat                 BigInt
  c_pos                 Int       @default(1)
  c_version             String?   @db.VarChar(32)
  c_published           Int       @default(0) @db.TinyInt
  c_owner               BigInt    @default(0)
  c_user                BigInt    @default(0)
  c_edit_user           BigInt    @default(0)
  c_edit_date           DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv               Int       @default(0) @db.TinyInt
  c_online              DateTime? @db.Date
  c_offline             DateTime? @db.Date
  application           BigInt
  studium               BigInt
  datasrc               String?   @db.VarChar(255)
  von                   DateTime? @db.Date
  bis                   DateTime? @db.Date
  uploads               Int       @default(0) @db.TinyInt
  tab_dokumente         BigInt
  tab_submit            BigInt
  number_referees       BigInt
  number_doks           BigInt
  mail_referee          BigInt
  mail_referee_done     BigInt
  mail_submit           BigInt
  dq_id_referees        BigInt
  position              BigInt
  study_program_name_de String?   @db.Text
  study_program_name_en String?   @db.Text

  @@index([application], map: "application")
  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_application_settings {
  id                BigInt    @id @default(autoincrement())
  c_domain          BigInt    @default(0)
  c_cat             BigInt
  c_pos             Int       @default(1)
  c_version         String?   @db.VarChar(32)
  c_published       Int       @default(0) @db.TinyInt
  c_owner           BigInt    @default(0)
  c_user            BigInt    @default(0)
  c_edit_user       BigInt    @default(0)
  c_edit_date       DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv           Int       @default(0) @db.TinyInt
  c_online          DateTime? @db.Date
  c_offline         DateTime? @db.Date
  kuerzel           String?   @db.VarChar(255)
  name              String?   @db.VarChar(255)
  appl_year         String?   @db.VarChar(255)
  mail_forgot_pw    BigInt
  mail_registration BigInt

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_apply_language {
  id               BigInt  @id @default(autoincrement())
  sid              BigInt
  language_name    String? @db.VarChar(200)
  read             Int     @db.TinyInt
  write            Int     @db.TinyInt
  speak            Int     @db.TinyInt
  language_list_id Int?

  @@index([sid], map: "sid")
}

model cms_data_aufgaben {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  TEST        BigInt
  educational BigInt

  @@index([TEST], map: "TEST")
  @@index([educational], map: "educational")
  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_bewerbungsdaten {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_course_description {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_cv_dual_study {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
}

model cms_data_cv_fixed_position {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
}

model cms_data_cv_misc {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
}

model cms_data_cv_school {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
}

model cms_data_cv_semester_abroad {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
}

model cms_data_cv_study {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
}

model cms_data_cv_term_position {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
}

model cms_data_cv_work_experience {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
}

model cms_data_diploma_supplement {
  id                            BigInt    @id @default(autoincrement())
  c_cat                         BigInt
  c_pos                         Int       @default(1)
  c_version                     String?   @db.VarChar(32)
  c_aktiv                       Int       @default(0) @db.TinyInt
  c_online                      DateTime? @db.Date
  c_offline                     DateTime? @db.Date
  ds_2_2_main_fields            String?   @db.VarChar(255)
  ds_2_3_institution            String?   @db.VarChar(255)
  ds_2_3_institution_2          String?   @db.VarChar(255)
  ds_2_3_status                 String?   @db.VarChar(255)
  ds_2_4_instutution            String?   @db.VarChar(255)
  ds_2_4_status                 String?   @db.VarChar(255)
  ds_2_5_languages              String?   @db.VarChar(255)
  ds_3_1_level                  String?   @db.VarChar(255)
  ds_3_1_official_length        String?   @db.VarChar(255)
  ds_3_3_access_requirements    String?   @db.Text
  ds_4_2_program_requirements   String?   @db.Text
  ds_4_3_program_details        String?   @db.Text
  ds_4_4_grading_scheme         String?   @db.Text
  ds_5_1_access_further_study   String?   @db.Text
  ds_5_2_professional_status    String?   @db.Text
  ds_6_1_additional_information String?   @db.Text
  ds_6_2_further_information    String?   @db.Text
  ds_2_1_title_conferred        String?   @db.Text
  ds_4_1_mode_of_study          String?   @db.Text
  ds_4_4_grading_scheme_1       String?   @db.VarChar(255)
  ds_4_4_grading_scheme_2       String?   @db.VarChar(255)
  ds_4_4_grading_scheme_3       String?   @db.VarChar(255)
  ds_4_4_grading_scheme_4       String?   @db.VarChar(255)
  ds_4_4_grading_scheme_5       String?   @db.VarChar(255)
  ds_4_4_grading_scheme_6       String?   @db.VarChar(255)
  ds_7_degree_certificate       String?   @db.VarChar(255)
  ds_7_academic_transcript      String?   @db.VarChar(255)
  ds_7_transcript_of_records    String?   @db.VarChar(255)
  ds_certification_date         String?   @db.VarChar(255)
  ds_unterschrift               String?   @db.VarChar(255)
  ds_position                   String?   @db.VarChar(255)

  @@index([id, c_cat, c_aktiv], map: "id")
}

model cms_data_diploma_supplement_student {
  id                            BigInt    @id @default(autoincrement())
  c_cat                         BigInt    @default(0)
  c_pos                         Int       @default(1)
  c_version                     String?   @db.VarChar(32)
  c_aktiv                       Int       @default(0) @db.TinyInt
  c_online                      DateTime? @db.Date
  c_offline                     DateTime? @db.Date
  additional_information        String?   @db.Text
  further_information_sources   String?   @db.Text
  document_1                    String?   @db.VarChar(255)
  document_2                    String?   @db.VarChar(255)
  document_3                    String?   @db.VarChar(255)
  document_4                    String?   @db.VarChar(255)
  document_5                    String?   @db.VarChar(255)
  ds_4_5_overall_classification String?   @db.Text

  @@index([id, c_cat, c_aktiv], map: "id")
}

model cms_data_dokumente {
  id           BigInt    @id @default(autoincrement())
  c_domain     BigInt    @default(1)
  c_cat        BigInt
  c_pos        Int       @default(1)
  c_version    String?   @db.VarChar(32)
  c_published  Int       @default(0) @db.TinyInt
  c_owner      BigInt    @default(0)
  c_user       BigInt    @default(0)
  c_edit_user  BigInt    @default(0)
  c_edit_date  DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv      Int       @default(0) @db.TinyInt
  c_online     DateTime? @db.Date
  c_offline    DateTime? @db.Date
  bez_de       String?   @db.VarChar(255)
  bez_en       String?   @db.VarChar(255)
  skript       String?   @db.VarChar(255)
  semester_anz Int       @default(0) @db.TinyInt

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_familienstand {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(1)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  name        String?   @db.VarChar(255)

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_felder_doks {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(1)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  datum       DateTime? @db.Date
  text        String?   @db.Text

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_fundraising_arten {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  de          String?   @db.VarChar(255)
  en          String?   @db.VarChar(255)

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_grades_curriculum {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_hintergrund {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  educational BigInt
  schoolt_ype String?   @db.VarChar(255)
  place       String?   @db.VarChar(255)
  time        String?   @db.VarChar(255)
  diplom      String?   @db.VarChar(255)

  @@index([educational], map: "educational")
  @@index([educational], map: "educational_2")
  @@index([educational], map: "educational_3")
  @@index([educational], map: "educational_4")
  @@index([educational], map: "educational_5")
  @@index([educational], map: "educational_6")
  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_import_field_mapping {
  id                     BigInt    @id @default(autoincrement())
  c_domain               BigInt?   @default(0)
  c_cat                  BigInt?
  c_pos                  Int?      @default(1)
  c_version              String?   @db.VarChar(32)
  c_published            Int?      @default(0) @db.TinyInt
  c_owner                BigInt?   @default(0)
  c_user                 BigInt?   @default(0)
  c_edit_user            BigInt?   @default(0)
  c_edit_date            DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv                Int?      @default(0) @db.TinyInt
  c_online               DateTime? @db.Date
  c_offline              DateTime? @db.Date
  profil_suche_fields_id BigInt?
  wrong_value            String?   @db.VarChar(255)
  right_value            String?   @db.VarChar(255)
}

model cms_data_instrument {
  id                       BigInt    @id @default(autoincrement())
  c_cat                    BigInt    @default(0)
  c_pos                    Int       @default(1)
  c_version                String?   @db.VarChar(32)
  c_aktiv                  Int       @default(0) @db.TinyInt
  c_online                 DateTime? @db.Date
  c_offline                DateTime? @db.Date
  instrument               String?   @db.VarChar(255)
  instrument_name          String?   @db.VarChar(255)
  instrument_kennbuchstabe String?   @db.VarChar(255)

  @@index([id, c_cat, c_aktiv], map: "id")
}

model cms_data_interessent {
  id              BigInt    @id @default(autoincrement())
  c_domain        BigInt?   @default(0)
  c_cat           BigInt?
  c_pos           Int?      @default(1)
  c_version       String?   @db.VarChar(32)
  c_published     Int?      @default(0) @db.TinyInt
  c_owner         BigInt?   @default(0)
  c_user          BigInt?   @default(0)
  c_edit_user     BigInt?   @default(0)
  c_edit_date     DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv         Int?      @default(0) @db.TinyInt
  c_online        DateTime? @db.Date
  c_offline       DateTime? @db.Date
  rueckruf        Int?      @default(0) @db.TinyInt
  beratungstermin Int?      @default(0) @db.TinyInt
  terminwunsch    DateTime? @db.Date
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model cms_data_k_krabnr {
  krabnr    String? @db.VarChar(20)
  aikz      String? @db.Char(1)
  ktxt      String? @db.VarChar(10)
  dtxt      String? @db.VarChar(25)
  ltxt      String? @db.VarChar(50)
  bemerkung String? @db.VarChar(30)
  strasse   String? @db.VarChar(30)
  plz       String? @db.VarChar(6)
  ort       String? @db.VarChar(30)
  telefon   String? @db.VarChar(20)
  bnr       String? @db.VarChar(8)
  updmark   String? @db.Char(1)
  kkonline  String? @db.Char(1)
  krweitst  String? @db.VarChar(8)
  kkv       String? @db.VarChar(4)

  @@ignore
}

model cms_data_k_kraver {
  id     Int     @id @default(autoincrement())
  kraver String? @db.Char(1)
  aikz   String? @db.Char(1)
  ktxt   String? @db.VarChar(10)
  dtxt   String? @db.VarChar(25)
  ltxt   String? @db.VarChar(50)
}

model cms_data_kalender {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(1)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  von         DateTime  @db.Date
  bis         DateTime  @db.Date
  headline    String?   @db.VarChar(255)
  kategorie   BigInt

  @@index([id, c_domain, c_cat, c_aktiv], map: "id")
}

model cms_data_key_adresstypen {
  id             Int     @id @default(autoincrement())
  name_adresstyp String? @db.VarChar(255)
}

model cms_data_key_anrede {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(1)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  anrede      String?   @db.VarChar(255)
  anrede_en   String?   @db.VarChar(255)

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model cms_data_key_berufbereich {
  Kennummer Int     @default(0)
  BereichDE String? @db.VarChar(50)
  BereichEN String? @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model cms_data_key_berufstatus {
  Kennummer Int     @default(0)
  StatusDE  String? @db.VarChar(50)
  StatusEN  String? @db.VarChar(50)

  @@ignore
}

model cms_data_key_branche {
  id        BigInt    @id @default(autoincrement())
  c_domain  BigInt    @default(0)
  c_cat     BigInt    @default(0)
  c_pos     Int       @default(1)
  c_version String?   @db.VarChar(32)
  c_aktiv   Int       @default(0) @db.TinyInt
  c_online  DateTime? @db.Date
  c_offline DateTime? @db.Date
  branchede String?   @db.VarChar(50)
  brancheen String?   @db.VarChar(50)

  @@index([c_domain], map: "c_domain")
}

model cms_data_key_instkategorie {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  kategoriede String?   @db.VarChar(255)
  kategorieen String?   @db.VarChar(255)

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_key_sprachen {
  id      Int     @id @default(autoincrement())
  sprache String? @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model cms_data_key_studpruef {
  kennummer Int     @default(0)
  pruefde   String? @db.VarChar(50)
  pruefen   String? @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model cms_data_key_studpruefart {
  id     Int     @default(0)
  parent BigInt  @default(0)
  de     String? @db.VarChar(50)
  en     String? @db.VarChar(50)

  @@ignore
}

model cms_data_klasse {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_korrespondenzsprache {
  id        BigInt    @id @default(autoincrement())
  c_domain  BigInt    @default(0)
  parent    BigInt    @default(0)
  c_cat     BigInt    @default(0)
  c_pos     Int       @default(1)
  c_version String?   @db.VarChar(32)
  c_aktiv   Int       @default(0) @db.TinyInt
  c_online  DateTime? @db.Date
  c_offline DateTime? @db.Date
  ks_name   String?   @db.VarChar(255)

  @@index([c_domain], map: "c_domain")
  @@index([id, c_cat, c_aktiv], map: "id")
}

model cms_data_kurse_bereiche {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(1)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  name_de     String?   @db.VarChar(255)
  name_en     String?   @db.VarChar(255)

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_news {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(1)
  c_cat       BigInt    @default(0)
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  datum       DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  titel       String?   @db.VarChar(255)
  teaser      String?   @db.Text
  text        String?   @db.Text
  link        String?   @db.VarChar(100)

  @@index([id, c_domain, c_cat, c_aktiv], map: "id")
}

model cms_data_nl_blocks {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  image_left  String?   @db.VarChar(255)
  image_right String?   @db.VarChar(255)
  text_left   String?   @db.Text
  text_right  String?   @db.Text

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_nl_teaserimage_text {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  image       String?   @db.VarChar(255)
  text        String?   @db.Text

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_nl_text_image {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  text        String?   @db.Text

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_nl_trenner {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  anchor      String?   @db.VarChar(255)
  headline    String?   @db.VarChar(255)

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_online_application_hsog {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_online_application_master {
  id                     BigInt    @id @default(autoincrement())
  c_domain               BigInt    @default(0)
  c_cat                  BigInt
  c_pos                  Int       @default(1)
  c_version              String?   @db.VarChar(32)
  c_published            Int       @default(0) @db.TinyInt
  c_owner                BigInt    @default(0)
  c_user                 BigInt    @default(0)
  c_edit_user            BigInt    @default(0)
  c_edit_date            DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv                Int       @default(0) @db.TinyInt
  c_online               DateTime? @db.Date
  c_offline              DateTime? @db.Date
  Einstieg               Int       @default(0) @db.TinyInt
  enter                  BigInt
  language_1             String?   @db.VarChar(255)
  language_2             String?   @db.VarChar(255)
  sprachren              Int       @default(0) @db.TinyInt
  check                  Int       @default(0) @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 1_1                 String?   @map("1_1") @db.VarChar(255)
  which_other            String?   @db.VarChar(255)
  other_indicate         Int       @default(0) @db.TinyInt
  anm_indicate           String?   @db.VarChar(255)
  a_n_m                  Int       @default(0) @db.TinyInt
  study_portal_which     String?   @db.VarChar(255)
  study_portal           Int       @default(0) @db.TinyInt
  social_media_which     String?   @db.VarChar(255)
  social_media           Int       @default(0) @db.TinyInt
  fair_which             String?   @db.VarChar(255)
  fair_m                 Int       @default(0) @db.TinyInt
  lbs_students_graduates Int       @default(0) @db.TinyInt
  family_and_friends     Int       @default(0) @db.TinyInt
  search_engine          Int       @default(0) @db.TinyInt
  test                   BigInt
  second                 BigInt
  certificate_english    BigInt
  pofile_picture         String?   @db.VarChar(255)
  test2                  BigInt
  english                BigInt
  german                 BigInt
  hebrew                 BigInt
  PROFILBILDTEST         String?   @db.VarChar(255)
  test1                  String?   @db.VarChar(255)
  school_certificate     BigInt
  other_                 String?   @db.VarChar(255)
  specify_               String?   @db.VarChar(255)
  specify                String?   @db.VarChar(255)
  info                   String?   @db.Text

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_online_bachelor_de {
  id                     BigInt    @id @default(autoincrement())
  c_domain               BigInt    @default(0)
  c_cat                  BigInt
  c_pos                  Int       @default(1)
  c_version              String?   @db.VarChar(32)
  c_published            Int       @default(0) @db.TinyInt
  c_owner                BigInt    @default(0)
  c_user                 BigInt    @default(0)
  c_edit_user            BigInt    @default(0)
  c_edit_date            DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv                Int       @default(0) @db.TinyInt
  c_online               DateTime? @db.Date
  c_offline              DateTime? @db.Date
  Einstieg               Int       @default(0) @db.TinyInt
  enter                  BigInt
  language_1             String?   @db.VarChar(255)
  language_2             String?   @db.VarChar(255)
  sprachren              Int       @default(0) @db.TinyInt
  check                  Int       @default(0) @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 1_1                 String?   @map("1_1") @db.VarChar(255)
  which_other            String?   @db.VarChar(255)
  other_indicate         Int       @default(0) @db.TinyInt
  anm_indicate           String?   @db.VarChar(255)
  a_n_m                  Int       @default(0) @db.TinyInt
  study_portal_which     String?   @db.VarChar(255)
  study_portal           Int       @default(0) @db.TinyInt
  social_media_which     String?   @db.VarChar(255)
  social_media           Int       @default(0) @db.TinyInt
  fair_which             String?   @db.VarChar(255)
  fair_m                 Int       @default(0) @db.TinyInt
  lbs_students_graduates Int       @default(0) @db.TinyInt
  family_and_friends     Int       @default(0) @db.TinyInt
  search_engine          Int       @default(0) @db.TinyInt
  test                   BigInt
  second                 BigInt
  certificate_english    BigInt
  pofile_picture         String?   @db.VarChar(255)
  test2                  BigInt
  english                BigInt
  german                 BigInt
  hebrew                 BigInt
  PROFILBILDTEST         String?   @db.VarChar(255)
  test1                  String?   @db.VarChar(255)
  school_certificate     BigInt
  other_                 String?   @db.VarChar(255)
  description            String?   @db.VarChar(255)
  specify                String?   @db.VarChar(255)
  text                   String?   @db.Text
  number                 String?   @db.VarChar(255)
  number_1               String?   @db.VarChar(255)
  russian                BigInt
  chinese                BigInt
  spanish                BigInt
  number2                String?   @db.VarChar(255)
  number4                String?   @db.VarChar(255)
  number3                String?   @db.VarChar(255)
  school_certificate_    BigInt

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_personal_finanzen {
  id                      BigInt    @id @default(autoincrement())
  c_domain                BigInt    @default(1)
  c_cat                   BigInt
  c_pos                   Int       @default(1)
  c_version               String?   @db.VarChar(32)
  c_published             Int       @default(0) @db.TinyInt
  c_owner                 BigInt    @default(0)
  c_user                  BigInt    @default(0)
  c_edit_user             BigInt    @default(0)
  c_edit_date             DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv                 Int       @default(0) @db.TinyInt
  c_online                DateTime? @db.Date
  c_offline               DateTime? @db.Date
  honorar                 BigInt
  variabler_anteil        String?   @db.VarChar(255)
  weihnachtsgratifikation BigInt

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_personenkategorien {
  id        BigInt    @id @default(autoincrement())
  c_cat     BigInt    @default(0)
  c_pos     Int       @default(1)
  c_version String?   @db.VarChar(32)
  c_aktiv   Int       @default(0) @db.TinyInt
  c_online  DateTime? @db.Date
  c_offline DateTime? @db.Date
  kategorie String?   @db.VarChar(255)

  @@index([id, c_cat, c_aktiv], map: "id")
}

model cms_data_profil_studium {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_profile_picture {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_pz_ablehnungsgruende {
  id        BigInt    @id @default(autoincrement())
  c_cat     BigInt    @default(0)
  c_pos     Int       @default(1)
  c_version String?   @db.VarChar(32)
  c_aktiv   Int       @default(0) @db.TinyInt
  c_online  DateTime? @db.Date
  c_offline DateTime? @db.Date
  pz_ag_bez String?   @db.VarChar(255)

  @@index([id, c_cat, c_aktiv], map: "id")
}

model cms_data_religion {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(1)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_rss {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  name        String?  @db.VarChar(100)
  url         String?  @unique(map: "url") @db.VarChar(255)
  last_update DateTime @db.DateTime(0)
  parse_text  Boolean? @default(false)
}

model cms_data_rss_entries {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  rss_id      BigInt   @db.UnsignedBigInt
  title       String?  @db.VarChar(255)
  description String?  @db.Text
  pubdate     DateTime @db.DateTime(0)
  guid        String?  @db.VarChar(255)
  link        String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)

  @@index([rss_id], map: "rss_id")
}

model cms_data_standort_plz {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt?   @default(0)
  c_cat       BigInt?
  c_pos       Int?      @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int?      @default(0) @db.TinyInt
  c_owner     BigInt?   @default(0)
  c_user      BigInt?   @default(0)
  c_edit_user BigInt?   @default(0)
  c_edit_date DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int?      @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  site_id     BigInt?
  zip_start   String?   @db.VarChar(20)
  zip_end     String?   @db.VarChar(20)
  country     BigInt?
}

model cms_data_statistic_country {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  signature   String?   @db.VarChar(255)
  namede      String?   @db.VarChar(400)
  nameen      String?   @db.VarChar(400)

  @@unique([c_cat, signature], map: "signature")
  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_statistic_course {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  signature   String?   @db.VarChar(255)
  namede      String?   @db.VarChar(255)
  nameen      String?   @db.VarChar(255)

  @@unique([c_cat, signature], map: "signature")
  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_statistic_district {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  signature   String?   @db.VarChar(255)
  namede      String?   @db.VarChar(255)
  nameen      String?   @db.VarChar(255)

  @@unique([c_cat, signature], map: "signature")
  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_statistic_exmatriculation {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  signature   String?   @db.VarChar(255)
  namede      String?   @db.VarChar(255)
  nameen      String?   @db.VarChar(255)

  @@unique([c_cat, signature], map: "signature")
  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_statistic_graduation {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  signature   String?   @db.VarChar(255)
  namede      String?   @db.VarChar(255)
  nameen      String?   @db.VarChar(255)

  @@unique([c_cat, signature], map: "signature")
  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_statistic_state {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  signature   String?   @db.VarChar(255)
  namede      String?   @db.VarChar(255)
  nameen      String?   @db.VarChar(255)

  @@unique([c_cat, signature], map: "signature")
  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_statistic_study_interruption {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt?
  c_pos       Int?      @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  signature   String?   @db.VarChar(255)
  namede      String?   @db.VarChar(400)
  nameen      String?   @db.VarChar(400)
}

model cms_data_statistic_study_type {
  id                                             BigInt                                           @id @default(autoincrement())
  c_domain                                       BigInt                                           @default(0)
  c_cat                                          BigInt
  c_pos                                          Int                                              @default(1)
  c_version                                      String?                                          @db.VarChar(32)
  c_published                                    Int                                              @default(0) @db.TinyInt
  c_owner                                        BigInt                                           @default(0)
  c_user                                         BigInt                                           @default(0)
  c_edit_user                                    BigInt                                           @default(0)
  c_edit_date                                    DateTime                                         @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv                                        Int                                              @default(0) @db.TinyInt
  c_online                                       DateTime?                                        @db.Date
  c_offline                                      DateTime?                                        @db.Date
  signature                                      String?                                          @db.VarChar(255)
  namede                                         String?                                          @db.VarChar(255)
  nameen                                         String?                                          @db.VarChar(255)
  mobility_online_configuration_mobility_program mobility_online_configuration_mobility_program[]

  @@unique([c_cat, signature], map: "signature")
  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_statistic_suspension {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  signature   String?   @db.VarChar(255)
  namede      String?   @db.VarChar(255)
  nameen      String?   @db.VarChar(255)

  @@unique([c_cat, signature], map: "signature")
  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_statistic_university {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  signature   String?   @db.VarChar(255)
  namede      String?   @db.VarChar(255)
  nameen      String?   @db.VarChar(255)

  @@unique([c_cat, signature], map: "signature")
  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_statistic_university_entrance_exam {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  signature   String?   @db.VarChar(255)
  namede      String?   @db.VarChar(255)
  nameen      String?   @db.VarChar(255)

  @@unique([c_cat, signature], map: "signature")
  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_stellen_kategorie {
  id           BigInt    @id @default(autoincrement())
  c_cat        BigInt    @default(0)
  c_pos        Int       @default(1)
  c_version    String?   @db.VarChar(32)
  c_aktiv      Int       @default(0) @db.TinyInt
  c_online     DateTime? @db.Date
  c_offline    DateTime? @db.Date
  name         String?   @db.VarChar(255)
  nk_kategorie String?   @db.VarChar(255)
  name_de      String?   @db.VarChar(255)
  name_en      String?   @db.VarChar(255)

  @@index([id, c_cat, c_aktiv], map: "id")
}

model cms_data_studium {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_teilnehmer {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(1)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  kurs_id     BigInt
  pid         BigInt
  datum       DateTime? @db.Date
  zahlung     String?   @db.VarChar(255)

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_testdq {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  testinput1  String?   @db.VarChar(255)

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_titel {
  c_cat                BigInt   @default(0)
  c_pos                Int      @default(0)
  c_version            String?  @db.VarChar(32)
  c_aktiv              Int      @default(0) @db.TinyInt
  c_online             DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  c_offline            DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  parent               Int?
  titel_bezeichnung    String?  @db.VarChar(255)
  id                   Int      @id @default(autoincrement())
  c_domain             BigInt   @default(0)
  at_position          BigInt   @default(0)
  anrede_unterdruecken Boolean? @default(false)
  titel_position_neu   BigInt

  @@index([c_domain], map: "c_domain")
  @@index([titel_bezeichnung], map: "titel_bezeichnung")
}

model cms_data_weitere_doz {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date
  LBS_SVNR    String?   @db.VarChar(255)

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_data_weitere_studenten {
  id                          BigInt    @id @default(autoincrement())
  c_domain                    BigInt    @default(0)
  c_cat                       BigInt
  c_pos                       Int       @default(1)
  c_version                   String?   @db.VarChar(32)
  c_published                 Int       @default(0) @db.TinyInt
  c_owner                     BigInt    @default(0)
  c_user                      BigInt    @default(0)
  c_edit_user                 BigInt    @default(0)
  c_edit_date                 DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv                     Int       @default(0) @db.TinyInt
  c_online                    DateTime? @db.Date
  c_offline                   DateTime? @db.Date
  reihungstest_1              String?   @db.VarChar(255)
  reihungstest_2              String?   @db.VarChar(255)
  reihungstest_3              String?   @db.VarChar(255)
  reihungstest_gesamt         String?   @db.VarChar(255)
  Matrikelnummer_Datenverbund String?   @db.VarChar(255)
  eu_non_eu                   BigInt

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_datasrc {
  id                              BigInt                            @id @default(autoincrement())
  category                        BigInt?
  domain                          BigInt                            @default(0)
  domain_data                     BigInt                            @default(0)
  name                            String?                           @db.VarChar(32)
  db_table                        String?                           @db.VarChar(50)
  sort1_by                        String?                           @db.VarChar(32)
  sort1_dir                       String?                           @db.VarChar(4)
  sort2_by                        String?                           @db.VarChar(32)
  sort2_dir                       String?                           @db.VarChar(4)
  show_in_cms                     Int                               @default(1) @db.TinyInt
  show_in_tree                    Int                               @default(0) @db.TinyInt
  show_in_profilsuche             Int                               @default(0) @db.TinyInt
  application                     Int                               @default(0) @db.TinyInt
  check_mandatory                 Int                               @default(0) @db.TinyInt
  ansprechpartner                 Int                               @default(0) @db.TinyInt
  categories                      Int                               @default(0) @db.TinyInt
  abc                             Int                               @default(0) @db.TinyInt
  status                          Int                               @default(0) @db.TinyInt
  img_dir                         String?                           @db.VarChar(64)
  img_small_width                 Int?
  img_small_height                Int?
  img_big_width                   Int?
  img_big_height                  Int?
  styles                          BigInt                            @default(0)
  datasrc_for_course_offer        Boolean
  application_program             application_program[]
  course_data_source              course_data_source[]
  course_offer_type               course_offer_type[]
  profil_studium                  profil_studium[]
  settings_system_datasource_site settings_system_datasource_site[]

  @@index([category], map: "category")
  @@index([domain], map: "domain")
}

model cms_datasrc_access {
  datasrc BigInt  @default(0)
  groupid BigInt  @default(0)
  access  Int     @default(1) @db.SmallInt
  view    String? @db.VarChar(3)

  @@id([datasrc, groupid])
}

model cms_datasrc_actions {
  id           BigInt  @id @default(autoincrement())
  datasrc      BigInt
  show_in_menu Int     @default(1) @db.TinyInt
  name         String? @db.VarChar(32)
  icon         String? @db.VarChar(32)
  tab          BigInt  @default(0)
  groupname    String? @db.VarChar(32)
  src          String? @db.Text
  target       String? @db.VarChar(6)
  confirm      String? @db.VarChar(255)

  @@index([datasrc], map: "datasrc")
  @@index([icon], map: "icon")
  @@index([show_in_menu], map: "show_in_menu")
  @@index([tab], map: "tab")
}

model cms_datasrc_areas {
  id                BigInt  @id @default(autoincrement())
  tab               BigInt  @default(0)
  position          Int     @default(1) @db.TinyInt
  de                String? @db.VarChar(255)
  en                String? @db.VarChar(255)
  typ               Int     @default(1) @db.TinyInt
  spalten           Int     @default(1) @db.TinyInt
  mandatory         Int?    @default(0) @db.TinyInt
  datasrc           BigInt  @default(0)
  datasrc_typ       Int     @default(1) @db.TinyInt
  datasrc_inline    Int     @default(1) @db.TinyInt
  datasrc_field     String? @db.VarChar(32)
  groupid           BigInt
  ip_folder         BigInt  @default(0)
  img_dir           String? @db.VarChar(255)
  img_small_width   Int     @default(0)
  img_small_height  Int     @default(0)
  img_small_exakt   Int
  img_big_width     Int     @default(0)
  img_big_height    Int     @default(0)
  img_big_exakt     Int
  img_medium_width  Int
  img_medium_height Int
  img_medium_exakt  Int
  script_edit       String? @db.VarChar(128)
  script_update     String? @db.VarChar(128)
  module            String? @db.VarChar(64)
  modul_args        String? @db.Text
  info_de           String? @db.Text
  info_en           String? @db.Text
  selection_args    String? @db.Text

  @@index([tab], map: "tab")
}

model cms_datasrc_category {
  id       BigInt  @id @default(autoincrement())
  datasrc  BigInt  @default(0)
  parent   BigInt  @default(0)
  name     String? @db.VarChar(128)
  name_en  String  @db.VarChar(128)
  position Int     @default(1) @db.TinyInt

  @@index([datasrc], map: "datasrc")
}

model cms_datasrc_fields {
  id               BigInt  @id @default(autoincrement())
  datasrc          BigInt  @default(0)
  area             BigInt  @default(0)
  spalte           Int     @default(1) @db.TinyInt
  name             String? @db.VarChar(64)
  de               String? @db.VarChar(255)
  en               String? @db.VarChar(255)
  typ              String? @db.VarChar(20)
  maxchar          Int?    @default(0)
  defaultvalue     String? @db.VarChar(64)
  mandatory        Int?    @default(0) @db.TinyInt
  bar              BigInt  @default(0)
  position         Int     @default(1)
  suche            Int     @default(0) @db.TinyInt
  list_width       Int     @default(0)
  img_x            Int     @default(0)
  img_y            Int     @default(0)
  img_exakt        Int     @default(0) @db.TinyInt
  dir              String? @db.VarChar(128)
  link_external    Int     @default(0) @db.TinyInt
  link_db          String? @db.VarChar(64)
  link_ref         String? @db.VarChar(32)
  link_field       String? @db.VarChar(32)
  link_field_en    String? @db.VarChar(64)
  link_sel         String? @db.VarChar(32)
  link_value       String? @db.VarChar(32)
  link_multiselect Int?    @default(0) @db.TinyInt
  link_sql         String? @db.Text
  comment_field    String? @db.VarChar(32)
  groupid          String? @db.VarChar(32)
  groupshow        String? @db.VarChar(8)
  ownership        Int     @default(0) @db.TinyInt
  onchange         String? @db.VarChar(255)
  info_de          String? @db.Text
  info_en          String? @db.Text
  html_toolbar_1   String? @db.VarChar(255)
  html_toolbar_2   String? @db.VarChar(255)
  max_characters   Int?

  @@index([area], map: "area")
  @@index([bar], map: "bar")
}

model cms_datasrc_fields_restrictions {
  id       BigInt  @id @default(autoincrement())
  datasrc  BigInt  @default(0)
  field    BigInt
  groupid  BigInt
  access   Int     @default(0)
  standard String? @db.VarChar(32)
  alias    BigInt  @default(0)

  @@index([datasrc], map: "datasrc")
}

model cms_datasrc_files {
  id          BigInt  @id @default(autoincrement())
  area        BigInt  @default(0)
  data        BigInt  @default(0)
  name        String? @db.VarChar(255)
  filename    String? @db.VarChar(255)
  description String? @db.Text

  @@index([area, data], map: "area")
}

model cms_datasrc_groups {
  id     BigInt  @id @default(autoincrement())
  domain BigInt
  de     String? @db.VarChar(64)
  en     String? @db.VarChar(64)
  icon   Int     @default(125)

  @@index([domain], map: "domain")
}

model cms_datasrc_groups_access {
  datasrc_group BigInt @default(0)
  groupid       BigInt @default(0)

  @@id([datasrc_group, groupid])
}

model cms_datasrc_groups_item {
  id       BigInt  @id @default(autoincrement())
  groupid  BigInt
  icon     Int     @default(125)
  datasrc  BigInt
  de       String? @db.VarChar(64)
  en       String? @db.VarChar(64)
  script   String? @db.VarChar(128)
  position Int     @default(1)

  @@index([groupid], map: "groupid")
}

model cms_datasrc_images {
  id          BigInt  @id @default(autoincrement())
  area        BigInt  @default(0)
  data        BigInt  @default(0)
  position    Int     @default(1)
  filename    String? @db.VarChar(32)
  title       String? @db.VarChar(255)
  text        String? @db.VarChar(255)
  link        String? @db.VarChar(255)
  orientation Int     @default(0)

  @@index([area], map: "area")
  @@index([data], map: "data")
}

model cms_datasrc_infopool {
  id       BigInt  @id @default(autoincrement())
  area     BigInt? @default(0)
  data     BigInt?
  dataid   BigInt? @default(0)
  position Int?    @default(1)
}

model cms_datasrc_mandatory_fields {
  id              BigInt  @id @default(autoincrement())
  field           BigInt?
  value           String? @db.VarChar(64)
  mandatory_field BigInt?
}

model cms_datasrc_mapping {
  datasrc BigInt
  domain  BigInt

  @@unique([datasrc, domain], map: "datasrc")
}

model cms_datasrc_parent {
  id       BigInt  @id @default(autoincrement())
  de       String? @db.VarChar(128)
  en       String? @db.VarChar(128)
  position Int?    @db.TinyInt
}

model cms_datasrc_relations {
  id             BigInt @id @default(autoincrement())
  typ            Int    @default(1) @db.TinyInt
  area           BigInt
  recordset      BigInt
  data           BigInt
  root_datasrc   BigInt
  root_dataid    BigInt
  target_datasrc BigInt
  target_dataid  BigInt

  @@index([typ, area, recordset, data], map: "typ")
  @@index([typ, root_datasrc, root_dataid, target_datasrc, target_dataid], map: "typ_2")
}

model cms_datasrc_relations_nn {
  id             BigInt @id @default(autoincrement())
  area           BigInt
  root_datasrc   BigInt
  root_dataid    BigInt
  target_datasrc BigInt
  target_dataid  BigInt

  @@unique([root_datasrc, root_dataid, target_datasrc, target_dataid], map: "root_datasrc")
  @@index([area], map: "area")
}

model cms_datasrc_select {
  id        BigInt  @id @default(autoincrement())
  selectbox BigInt  @default(0)
  de        String? @db.VarChar(128)
  en        String? @db.VarChar(128)
  c_owner   BigInt  @default(0)
  position  Int?

  @@index([c_owner], map: "c_owner")
  @@index([selectbox, position], map: "selectbox")
}

model cms_datasrc_selection {
  profile_booking_id   BigInt
  data_source_id       BigInt
  data_source_entry_id Int

  @@id([profile_booking_id, data_source_id, data_source_entry_id])
}

model cms_datasrc_sql {
  id       BigInt  @id @default(autoincrement())
  datasrc  BigInt  @default(0)
  query    String? @db.VarChar(255)
  position Int     @default(1) @db.TinyInt

  @@index([datasrc], map: "datasrc")
}

model cms_datasrc_tabs {
  id                    BigInt                  @id @default(autoincrement())
  datasrc               BigInt                  @default(0)
  name                  String?                 @db.VarChar(64)
  name_en               String?                 @db.VarChar(64)
  position              Int                     @default(1) @db.TinyInt
  edit_profile          Int                     @default(0) @db.TinyInt
  edit_company          Int                     @default(0) @db.TinyInt
  hide_internal         Int?                    @default(0) @db.TinyInt
  hide_external         Int?                    @db.TinyInt
  to_be_completed       Int                     @db.TinyInt
  pdf_summary_display   Int                     @default(1) @db.TinyInt
  cms_datasrc_tabs_grad cms_datasrc_tabs_grad[]

  @@index([datasrc], map: "datasrc")
}

model cms_datasrc_tabs_grad {
  tab_id           BigInt
  grad_id          BigInt
  tab_read         Int?             @default(0) @db.TinyInt
  tab_write        Int?             @default(0) @db.TinyInt
  pm_grad          pm_grad          @relation(fields: [grad_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "cms_datasrc_tabs_grad_grad_id_pm_grad_id")
  cms_datasrc_tabs cms_datasrc_tabs @relation(fields: [tab_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "cms_datasrc_tabs_grad_tab_id_cms_datasrc_tabs_id")

  @@id([tab_id, grad_id])
  @@index([grad_id], map: "cms_datasrc_tabs_grad_grad_id_pm_grad_id")
}

model cms_datasrc_tabs_status {
  id     BigInt @id @default(autoincrement())
  sid    BigInt
  refid  BigInt @default(0)
  tabid  BigInt
  status Int    @default(0)

  @@unique([sid, tabid, refid], map: "sid")
}

model cms_datasrc_videos {
  id             BigInt  @id @default(autoincrement())
  area           BigInt  @default(0)
  data           BigInt  @default(0)
  position       Int     @default(1)
  filename       String? @db.VarChar(32)
  name           String? @db.VarChar(255)
  description    String? @db.Text
  video_provider String? @db.VarChar(16)
  video_id       String? @db.VarChar(16)

  @@index([area], map: "area")
  @@index([data], map: "data")
}

model cms_deleted_5b911401b474f_online_application_master {
  id          BigInt    @id @default(autoincrement())
  c_domain    BigInt    @default(0)
  c_cat       BigInt
  c_pos       Int       @default(1)
  c_version   String?   @db.VarChar(32)
  c_published Int       @default(0) @db.TinyInt
  c_owner     BigInt    @default(0)
  c_user      BigInt    @default(0)
  c_edit_user BigInt    @default(0)
  c_edit_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv     Int       @default(0) @db.TinyInt
  c_online    DateTime? @db.Date
  c_offline   DateTime? @db.Date

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_deleted_5bc060402d218_online_application_master {
  id            BigInt    @id @default(autoincrement())
  c_domain      BigInt    @default(0)
  c_cat         BigInt
  c_pos         Int       @default(1)
  c_version     String?   @db.VarChar(32)
  c_published   Int       @default(0) @db.TinyInt
  c_owner       BigInt    @default(0)
  c_user        BigInt    @default(0)
  c_edit_user   BigInt    @default(0)
  c_edit_date   DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  c_aktiv       Int       @default(0) @db.TinyInt
  c_online      DateTime? @db.Date
  c_offline     DateTime? @db.Date
  Einstieg      Int       @default(0) @db.TinyInt
  enter         BigInt
  language_1    String?   @db.VarChar(255)
  language_2    String?   @db.VarChar(255)
  sprachren     Int       @default(0) @db.TinyInt
  first         String?   @db.VarChar(255)
  messe         String?   @db.VarChar(255)
  fair          Int       @default(0) @db.TinyInt
  ad            Int       @default(0) @db.TinyInt
  which_ad      String?   @db.VarChar(255)
  internet      Int       @default(0) @db.TinyInt
  andere        Int       @default(0) @db.TinyInt
  which_other   String?   @db.VarChar(255)
  second_choice String?   @db.VarChar(255)
  check         Int       @default(0) @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 11         BigInt    @map("11")

  @@index([id, c_domain, c_cat, c_owner, c_user, c_aktiv], map: "id")
}

model cms_domains {
  id               BigInt            @id @default(autoincrement())
  domain           String?           @db.VarChar(255)
  www              Int               @default(0) @db.TinyInt
  live             Int               @default(1) @db.TinyInt
  preview          String?           @db.VarChar(255)
  url_stat         String?           @db.VarChar(255)
  url_root         String?           @db.VarChar(255)
  lang_default     String?           @db.Char(2)
  page_login       BigInt            @default(0)
  page_404         BigInt            @default(0)
  plain_text       Int               @default(0) @db.TinyInt
  multi_aktiv      Int               @default(0) @db.TinyInt
  multi_lang       Boolean           @default(false)
  dir_publish      String?           @db.VarChar(255)
  dir_images       String?           @db.VarChar(255)
  dir_files        String?           @db.VarChar(255)
  dir_modules      String?           @db.VarChar(255)
  dir_js           String?           @db.VarChar(255)
  dir_styles       String?           @db.VarChar(255)
  dir_datasrc      String?           @db.VarChar(255)
  db_support       Int               @default(1) @db.TinyInt
  html_end         String?           @db.Text
  no_publish       Int               @default(0) @db.TinyInt
  htaccess         String?           @db.Text
  htaccess_full    String?           @db.Text
  secure_user      String?           @db.VarChar(255)
  secure_pass      String?           @db.VarChar(255)
  larissa_lib      String?           @db.VarChar(255)
  exclude_dir      String?           @db.VarChar(255)
  head_include     String?           @db.Text
  title_suffix     String?           @db.VarChar(255)
  aktiv            Boolean           @default(true)
  cookie_notice_de String?           @db.Text
  cookie_notice_en String?           @db.Text
  cms_pwa_settings cms_pwa_settings?
}

model cms_domains_access {
  domain  BigInt @default(0)
  groupid BigInt @default(0)
  access  Int    @default(0) @db.TinyInt

  @@unique([domain, groupid], map: "lang")
}

model cms_files_hidden {
  id     BigInt  @id @default(autoincrement())
  domain BigInt
  dir    String? @db.VarChar(255)

  @@unique([domain, dir], map: "domain_2")
  @@index([domain], map: "domain")
}

model cms_files_meta {
  domain    BigInt  @default(0)
  filename  String  @default("") @db.VarChar(255)
  keywords  String? @db.Text
  menu      String? @db.VarChar(255)
  page      String? @db.Text
  styles    String? @db.VarChar(255)
  layout    String? @db.Text
  template  String? @db.Text
  container String? @db.Text
  recordset String? @db.Text

  @@id([filename, domain])
}

model cms_form {
  id     BigInt  @id @default(autoincrement())
  domain Int?    @default(1)
  name   String? @db.VarChar(64)
  aktiv  Int?    @default(1) @db.TinyInt
}

model cms_imagesize {
  id     BigInt  @id @default(autoincrement())
  name   String? @db.VarChar(64)
  width  Int     @default(0)
  height Int     @default(0)
  exakt  Int     @default(0) @db.TinyInt
}

model cms_lang {
  id  BigInt  @id @default(autoincrement())
  tag String? @unique(map: "tag") @db.VarChar(64)
  de  String? @db.Text
  en  String? @db.Text
}

model cms_layout {
  id       BigInt  @id @default(autoincrement())
  domain   BigInt  @default(0)
  aktiv    Int     @default(1) @db.TinyInt
  name     String? @db.VarChar(255)
  typ      String? @db.VarChar(10)
  template String? @db.Text
  head     String? @db.Text
  cssfile  String? @db.VarChar(32)

  @@index([aktiv], map: "aktiv")
  @@index([domain], map: "domain")
}

model cms_layout_fields {
  id          BigInt  @id @default(autoincrement())
  layout      BigInt  @default(0)
  name        String? @db.VarChar(64)
  bezeichnung String? @db.VarChar(32)
  typ         String? @db.VarChar(8)
  options     String? @db.Text
  img_x       Int     @default(0)
  img_y       Int     @default(0)
  dir         String? @db.VarChar(64)
}

model cms_layout_vars {
  id         BigInt  @id @default(0)
  var        String? @db.VarChar(64)
  modul      String? @db.VarChar(128)
  modul_args String? @db.VarChar(255)
  de         String? @db.VarChar(255)
  en         String? @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model cms_live {
  id            BigInt    @default(0)
  download      String?   @db.VarChar(64)
  template      BigInt    @default(1)
  template_args String?   @db.Text
  lang          Int       @default(1)
  relocate      Int       @default(0)
  name          String?   @db.VarChar(255)
  title         String?   @db.VarChar(255)
  keywords      String?   @db.VarChar(255)
  description   String?   @db.Text
  released      DateTime? @db.DateTime(0)
  views         BigInt    @default(0)
  created       DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  created_autor BigInt    @default(0)
  edited        DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  edited_autor  BigInt    @default(0)
  menue         BigInt    @default(0)

  @@index([id], map: "id")
  @@index([lang], map: "lang")
  @@ignore
}

model cms_menue {
  id            BigInt    @default(0)
  domain        BigInt    @default(0)
  lang          Int       @default(1)
  aktiv         Int       @default(1) @db.TinyInt
  parent        BigInt?   @default(0)
  style         String?   @db.VarChar(20)
  text          String?   @db.VarChar(64)
  menutext      String?   @db.VarChar(64)
  beschreibung  String?   @db.VarChar(255)
  pageid        Int       @default(0)
  href          String?   @db.VarChar(255)
  newwindow     Int       @default(0) @db.TinyInt
  typ           Int       @default(0) @db.TinyInt
  typ_bottom    Int       @default(0) @db.TinyInt
  position      Int       @default(0) @db.TinyInt
  released      DateTime? @db.DateTime(0)
  css_class     String?   @db.VarChar(32)
  styles        String?   @db.VarChar(255)
  subdomain     String?   @db.VarChar(64)
  dir           String?   @db.VarChar(64)
  url           String?   @db.VarChar(128)
  file          String?   @db.VarChar(128)
  deleted       DateTime? @db.DateTime(0)
  deleted_autor BigInt    @default(0)

  @@id([id, domain, lang])
  @@index([deleted], map: "deleted")
  @@index([domain, lang], map: "domain_language")
  @@index([parent], map: "parent")
}

model cms_page {
  id        BigInt
  domain_id Int
  name      String @db.VarChar(128)

  @@id([id, name])
}

model cms_preview {
  id            BigInt    @default(0)
  domain        BigInt    @default(0)
  download      String?   @db.VarChar(255)
  template      BigInt    @default(1)
  template_args String?   @db.Text
  lang          Int       @default(1)
  relocate      Int       @default(0)
  name          String?   @db.VarChar(255)
  title         String?   @db.VarChar(255)
  keywords      String?   @db.VarChar(255)
  description   String?   @db.Text
  robots        String    @default("INDEX, FOLLOW") @db.VarChar(255)
  released      DateTime? @db.DateTime(0)
  views         BigInt    @default(0)
  created       DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  created_autor BigInt    @default(0)
  lock_publish  Int       @default(0) @db.TinyInt
  lock_user     BigInt    @default(0)
  lock_date     DateTime? @db.DateTime(0)
  edited        DateTime? @db.DateTime(0)
  edited_autor  BigInt    @default(0)
  deleted       DateTime? @db.DateTime(0)
  deleted_autor BigInt
  menue         BigInt    @default(0)

  @@id([id, domain, lang])
  @@index([deleted], map: "deleted")
}

model cms_publish {
  domain   BigInt    @default(0)
  pageid   BigInt    @default(0)
  lang     Int       @default(1)
  args     String?   @db.VarChar(255)
  hash     String?   @db.VarChar(32)
  filename String?   @db.VarChar(255)
  filehash String?   @db.VarChar(32)
  updated  DateTime? @db.DateTime(0)

  @@id([pageid, lang])
  @@index([domain, lang], map: "domain_language")
  @@index([hash], map: "hash")
}

model cms_pwa_settings {
  id                       BigInt      @id @default(autoincrement())
  active                   Boolean     @default(false)
  domain_id                BigInt      @unique(map: "idx_cms_pwa_settings_domain_id")
  name                     String      @db.VarChar(255)
  short_description        String?     @db.Text
  border_color             String?     @db.VarChar(255)
  logo_url                 String?     @db.VarChar(255)
  white_header             Int         @default(0) @db.TinyInt
  color_primary            String?     @db.VarChar(255)
  color_secondary          String?     @db.VarChar(255)
  color_tertiary           String?     @db.VarChar(255)
  vapid_subject            String?     @db.VarChar(255)
  vapid_public             String?     @db.VarChar(255)
  vapid_private            String?     @db.VarChar(255)
  push_notification_active Boolean     @default(false)
  color_primary_button     String?     @db.VarChar(255)
  color_footer             String?     @db.VarChar(255)
  color_footer_text        String?     @db.VarChar(255)
  cms_domains              cms_domains @relation(fields: [domain_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cms_pwa_domain_id")
}

model cms_recordset {
  container BigInt @default(0)
  template  BigInt @default(0)
  dataid    BigInt @default(0)

  @@unique([container, template, dataid], map: "container")
}

model cms_redirects {
  id     BigInt  @id @default(autoincrement())
  domain BigInt
  name   String? @db.VarChar(255)
  url    String? @db.VarChar(255)

  @@unique([domain, name], map: "name")
  @@index([domain], map: "domain")
}

model cms_session {
  sid        String   @id @default("") @db.VarChar(40)
  pid        BigInt   @default(0)
  lastaction DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  member     String?  @db.Text
  lang       Int      @default(1)
}

model cms_shortlinks {
  id     BigInt  @id @default(autoincrement())
  domain BigInt
  name   String? @db.VarChar(64)
  url    String? @db.VarChar(255)

  @@unique([domain, name], map: "domain")
}

model cms_sprachen {
  id       BigInt  @id @default(autoincrement())
  domain   BigInt  @default(0)
  name     String? @db.VarChar(30)
  kuerzel  String? @db.Char(2)
  charset  String? @db.VarChar(16)
  aktiv    Int     @default(1) @db.TinyInt
  standard Int     @default(0) @db.TinyInt

  @@unique([domain, kuerzel], map: "domain")
}

model cms_sprachen_access {
  lang    BigInt @default(0)
  groupid BigInt @default(0)
  access  Int    @default(0) @db.TinyInt

  @@unique([lang, groupid], map: "lang")
}

model cms_stat_access {
  datum  DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  stunde Int      @db.TinyInt
  url    Int      @default(0) @db.MediumInt
  hits   Int      @default(0) @db.MediumInt

  @@id([datum, url])
}

model cms_stat_features {
  jahr    Int @default(0)
  monat   Int @default(0) @db.TinyInt
  evaled  Int @default(0) @db.MediumInt
  java    Int @default(0) @db.MediumInt
  flash   Int @default(0) @db.MediumInt
  acrobat Int @default(0) @db.MediumInt

  @@id([jahr, monat])
}

model cms_stat_keywords {
  jahr     Int    @default(0)
  monat    Int    @default(0) @db.TinyInt
  keywords String @default("") @db.VarChar(32)
  hits     Int    @default(0) @db.MediumInt

  @@id([jahr, monat, keywords])
}

model cms_stat_path {
  session    String   @id @default("") @db.VarChar(32)
  datum      DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  entry      Int      @default(0) @db.MediumInt
  exit       Int      @default(0) @db.MediumInt
  pfad       String?  @db.Text
  beginn     BigInt   @default(0)
  aufenthalt Int      @default(0)
}

model cms_stat_referrer {
  jahr     Int    @default(0)
  monat    Int    @default(0) @db.TinyInt
  referrer String @default("") @db.VarChar(64)
  hits     Int    @default(0) @db.MediumInt

  @@id([jahr, monat, referrer])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model cms_statistic {
  datum  DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  stunde Int      @default(0) @db.TinyInt
  p1     Int      @default(0)
  p2     Int      @default(0)
  p3     Int      @default(0)
  p4     Int      @default(0)
  p5     Int      @default(0)
  p6     Int      @default(0)
  p7     Int      @default(0)
  p8     Int      @default(0)
  p9     Int      @default(0)
  p10    Int      @default(0)
  p11    Int      @default(0)
  p12    Int      @default(0)
  p13    Int      @default(0)
  p14    Int      @default(0)
  p15    Int      @default(0)
  p16    Int      @default(0)
  p17    Int      @default(0)
  p18    Int      @default(0)
  p19    Int      @default(0)
  p20    Int      @default(0)
  p21    Int      @default(0)
  p22    Int      @default(0)
  p23    Int      @default(0)
  p24    Int      @default(0)
  p25    Int      @default(0)
  p26    Int      @default(0)
  p27    Int      @default(0)
  p28    Int      @default(0)
  p29    Int      @default(0)
  p30    Int      @default(0)
  p31    Int      @default(0)
  p32    Int      @default(0)
  p33    Int      @default(0)
  p34    Int      @default(0)
  p35    Int      @default(0)
  p36    Int      @default(0)
  p37    Int      @default(0)
  p38    Int      @default(0)
  p39    Int      @default(0)
  p40    Int      @default(0)
  p41    Int      @default(0)
  p42    Int      @default(0)
  p43    Int      @default(0)
  p44    Int      @default(0)
  p45    Int      @default(0)
  p46    Int      @default(0)
  p47    Int      @default(0)
  p48    Int      @default(0)
  p49    Int      @default(0)
  p50    Int      @default(0)
  p51    Int      @default(0)
  p52    Int      @default(0)
  p53    Int      @default(0)
  p54    Int      @default(0)
  p55    Int      @default(0)
  p56    Int      @default(0)
  p57    Int      @default(0)
  p58    Int      @default(0)
  p59    Int      @default(0)
  p60    Int      @default(0)
  p61    Int      @default(0)
  p62    Int      @default(0)
  p63    Int      @default(0)
  p64    Int      @default(0)
  p65    Int      @default(0)
  p66    Int      @default(0)
  p67    Int      @default(0)
  p68    Int      @default(0)
  p69    Int      @default(0)
  p70    Int      @default(0)
  p71    Int      @default(0)
  p72    Int      @default(0)
  p73    Int      @default(0)
  p74    Int      @default(0)
  p75    Int      @default(0)
  p76    Int      @default(0)
  p77    Int      @default(0)
  p78    Int      @default(0)
  p79    Int      @default(0)
  p80    Int      @default(0)
  p81    Int      @default(0)
  p82    Int      @default(0)
  p83    Int      @default(0)
  p85    Int      @default(0)
  p86    Int      @default(0)
  p87    Int      @default(0)
  p88    Int      @default(0)
  p89    Int      @default(0)
  p90    Int      @default(0)
  p91    Int      @default(0)
  p92    Int      @default(0)
  p93    Int      @default(0)
  p94    Int      @default(0)
  p95    Int      @default(0)
  p96    Int      @default(0)
  p97    Int      @default(0)
  p98    Int      @default(0)
  p99    Int      @default(0)
  p100   Int      @default(0)
  p101   Int      @default(0)
  p102   Int      @default(0)
  p103   Int      @default(0)
  p104   Int      @default(0)
  p105   Int      @default(0)
  p106   Int      @default(0)
  p107   Int      @default(0)
  p108   Int      @default(0)
  p109   Int      @default(0)
  p110   Int      @default(0)
  p111   Int      @default(0)
  p112   Int      @default(0)
  p113   Int      @default(0)
  p114   Int      @default(0)
  p115   Int      @default(0)
  p116   Int      @default(0)
  p117   Int      @default(0)
  p118   Int      @default(0)
  p119   Int      @default(0)
  p120   Int      @default(0)
  p121   Int      @default(0)
  p122   Int      @default(0)
  p123   Int      @default(0)
  p125   Int      @default(0)
  p126   Int      @default(0)
  p127   Int      @default(0)
  p128   Int      @default(0)
  p129   Int      @default(0)
  p130   Int      @default(0)
  p131   Int      @default(0)
  p132   Int      @default(0)
  p133   Int      @default(0)
  p134   Int      @default(0)
  p135   Int      @default(0)
  p136   Int      @default(0)
  p137   Int      @default(0)
  p138   Int      @default(0)
  p139   Int      @default(0)
  p140   Int      @default(0)
  p141   Int      @default(0)
  p142   Int      @default(0)
  p143   Int      @default(0)
  p144   Int      @default(0)
  p145   Int
  p146   Int
  p147   Int
  p148   Int
  p149   Int
  p150   Int
  p151   Int
  p152   Int
  p153   Int
  p154   Int
  p155   Int
  p156   Int
  p157   Int
  p158   Int
  p159   Int
  p160   Int
  p161   Int
  p162   Int
  p163   Int
  p164   Int
  p165   Int
  p166   Int
  p167   Int
  p168   Int
  p169   Int
  p170   Int
  p171   Int
  p172   Int
  p174   Int
  p175   Int
  p176   Int
  p177   Int
  p84    Int

  @@index([datum, stunde], map: "date")
  @@ignore
}

model cms_style {
  id     BigInt  @id @default(autoincrement())
  parent BigInt  @default(0)
  name   String? @db.VarChar(32)
  tag    String? @db.VarChar(32)
  klasse String? @db.VarChar(32)
  eid    String? @db.VarChar(32)

  @@index([parent], map: "parent")
}

model cms_styles {
  id       BigInt  @id @default(autoincrement())
  domain   BigInt  @default(0)
  filename String? @db.VarChar(32)
  media    String? @db.VarChar(16)
  active   Int     @default(1) @db.TinyInt
  ie_spec  Int     @default(0) @db.TinyInt
  ie_param String? @db.VarChar(16)

  @@unique([domain, filename], map: "domain")
}

model cms_templates {
  id       BigInt  @id @default(autoincrement())
  domain   BigInt  @default(1)
  name     String? @db.VarChar(100)
  template String? @db.Text
  datasrc  BigInt  @default(0)
  ca       String? @db.VarChar(255)

  @@index([domain], map: "domain")
}

model cms_templates_fields {
  id          BigInt  @id @default(autoincrement())
  datasrc     String? @db.VarChar(32)
  name        String? @db.VarChar(64)
  bezeichnung String? @db.VarChar(32)
  typ         String? @db.VarChar(8)
  options     String? @db.Text
  img_x       Int     @default(0)
  img_y       Int     @default(0)
  dir         String? @db.VarChar(64)
}

model cms_tracking {
  t_id     String    @id @default("") @db.VarChar(32)
  referer  String?   @db.VarChar(128)
  datum    DateTime? @db.DateTime(0)
  tracking String?   @db.Text
  language String?   @db.VarChar(12)
  ip       String?   @db.VarChar(15)

  @@index([ip], map: "ip")
  @@index([t_id], map: "t_id")
}

model cohort_quarter {
  cohort_id          BigInt
  corresponding_term Int
  year               Int
  term               Int
  start_date         DateTime @db.Date
  end_date           DateTime @db.Date
  study_status       BigInt
  term_of_study      Int?     @db.UnsignedTinyInt

  @@id([cohort_id, corresponding_term, year, term])
}

model cohort_working_period {
  id                BigInt   @id @default(autoincrement())
  cohort_id         BigInt
  year              Int
  term              Int
  period_name       String?  @db.VarChar(255)
  period_start_date DateTime @db.Date
  period_end_date   DateTime @db.Date
  bookable          Boolean
  klasse            klasse   @relation(fields: [cohort_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cohort_working_period_cohort_id")

  @@index([cohort_id], map: "cohort_id")
}

model color {
  id                                  BigInt                                @id @default(autoincrement())
  css_class_name                      String?                               @unique(map: "css_class_name") @db.VarChar(255)
  building_room_category              building_room_category[]
  course_lecture_series_part_type     course_lecture_series_part_type[]
  course_offer_type                   course_offer_type[]
  course_status                       course_status[]
  exam_status                         exam_status[]
  lecturer_contract_employment_status lecturer_contract_employment_status[]
  lecturer_contract_status            lecturer_contract_status[]
  lectureship_status                  lectureship_status[]
  submission_status                   submission_status[]
}

model column_configuration {
  id                          BigInt                        @id @default(autoincrement())
  list_name                   String?                       @db.VarChar(255)
  profile_id                  BigInt                        @default(0)
  profil                      profil                        @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_column_configuration_profile_id")
  column_configuration_column column_configuration_column[]

  @@unique([profile_id, list_name], map: "profile_list")
}

model column_configuration_column {
  column_config_id     BigInt
  name                 String               @default("") @db.VarChar(255)
  position             Int                  @default(0)
  column_configuration column_configuration @relation(fields: [column_config_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "column_configuration_column_ibfk_1")

  @@id([column_config_id, name])
}

model com_activity {
  id             BigInt    @id @default(autoincrement())
  datum          DateTime? @db.DateTime(0)
  negative       Boolean?  @default(false)
  profil_id      BigInt    @default(0)
  friend_id      BigInt?
  group_id       BigInt?
  event_id       BigInt?
  edit_pictures  Boolean?
  edit_info      Boolean?
  edit_education Boolean?
  edit_work      Boolean?
  status_update  Boolean?

  @@index([event_id], map: "event_id")
  @@index([friend_id], map: "friend_id")
  @@index([group_id], map: "group_id")
  @@index([profil_id], map: "profil_id")
}

model com_anhang {
  id     BigInt  @id @default(autoincrement())
  mailid BigInt  @default(0)
  name   String? @db.VarChar(180)
  size   BigInt  @default(0)
  format String? @db.VarChar(5)
}

model com_attachments {
  id          BigInt  @id @default(autoincrement())
  title       String? @db.VarChar(255)
  ext         String? @db.VarChar(255)
  description String? @db.Text
  folder      BigInt  @default(0)

  @@index([folder], map: "folder")
}

model com_editable_address_groups {
  domain_id        Int @default(0) @db.SmallInt
  address_group_id Int @default(0) @db.SmallInt

  @@id([domain_id, address_group_id])
}

model com_editable_address_types {
  domain_id       BigInt @default(0)
  address_type_id Int    @default(0) @db.SmallInt

  @@id([domain_id, address_type_id])
}

model com_education {
  id            BigInt   @id @default(autoincrement())
  pid           BigInt   @default(0)
  affiliate     Boolean  @default(false)
  sort_order    Int      @default(0) @db.UnsignedTinyInt
  von           String?  @db.VarChar(255)
  von_datum     DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  bis           String?  @db.VarChar(255)
  bis_datum     DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  institut      String?  @db.VarChar(50)
  beschreibung  String?  @db.Text
  degree        String?  @db.VarChar(255)
  concentration String?  @db.VarChar(255)
}

model com_email {
  id          BigInt   @id @default(autoincrement())
  absender    BigInt   @default(0)
  absender_ip String?  @db.VarChar(15)
  datum       DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  betreff     String?  @db.VarChar(255)
  text        String?  @db.MediumText
  anhang      Bytes    @db.Blob
  empfaenger  String?  @db.MediumText
  von         String?  @db.VarChar(100)
}

model com_events_user {
  event_id     BigInt    @default(0)
  profil_id    BigInt    @default(0)
  invite_id    BigInt    @default(0)
  confirmed    Boolean   @default(true)
  confirm_date DateTime? @db.DateTime(0)
  attend       Boolean   @default(false)
  attend_date  DateTime? @db.DateTime(0)

  @@id([event_id, profil_id])
  @@index([invite_id], map: "invite_id")
  @@index([profil_id], map: "profil_id")
}

model com_events_visited {
  id        BigInt    @id @default(autoincrement())
  event_id  BigInt    @default(0)
  profil_id BigInt    @default(0)
  datum     DateTime? @db.DateTime(0)

  @@index([event_id], map: "event_id")
  @@index([profil_id], map: "profil_id")
}

model com_events_wall {
  id        BigInt    @id @default(autoincrement())
  event_id  BigInt    @default(0)
  profil_id BigInt    @default(0)
  message   String?   @db.Text
  datum     DateTime? @db.DateTime(0)

  @@index([event_id], map: "event_id")
  @@index([event_id], map: "group")
  @@index([profil_id], map: "profil")
}

model com_folders {
  id        BigInt  @id @default(autoincrement())
  name      String? @db.VarChar(255)
  parent    BigInt  @default(0)
  profil_id BigInt  @default(0)
  group_id  BigInt  @default(0)
  event_id  BigInt  @default(0)

  @@index([event_id], map: "event_id")
  @@index([group_id], map: "group_id")
  @@index([profil_id], map: "profil_id")
}

model com_friends {
  source_id BigInt    @default(0)
  target_id BigInt    @default(0)
  confirmed Int       @default(0) @db.TinyInt
  datum     DateTime? @db.DateTime(0)

  @@id([source_id, target_id])
  @@index([source_id], map: "source_id")
  @@index([target_id], map: "target_id")
}

model com_groups {
  id           BigInt    @id @default(autoincrement())
  name         String?   @db.VarChar(128)
  kategorie    BigInt    @default(0)
  aktiv        Int       @default(1) @db.TinyInt
  privat       Int       @default(0) @db.TinyInt
  created_user BigInt    @default(0)
  created_date DateTime? @db.DateTime(0)
  edit_user    BigInt?
  edit_date    DateTime? @db.DateTime(0)
  klasse       BigInt    @default(0)
  course       Boolean   @default(false)
  access_group BigInt    @default(0)
  type         Int?

  @@index([access_group], map: "access_group")
  @@index([created_user], map: "created_user")
  @@index([kategorie], map: "kategorie")
  @@index([klasse], map: "klasse")
  @@index([name], map: "name")
}

model com_groups_categories {
  id          BigInt  @id @default(autoincrement())
  name        String? @db.VarChar(64)
  description String? @db.Text
  communityId BigInt?
}

model com_groups_user {
  group_id        BigInt    @default(0)
  profil_id       BigInt    @default(0)
  confirmed       Boolean   @default(true)
  confirm_date    DateTime? @db.DateTime(0)
  invite_id       BigInt    @default(0)
  invitation_date DateTime? @db.DateTime(0)
  datasrcid       Int?

  @@id([group_id, profil_id])
  @@index([confirmed, profil_id], map: "idx_confirmed_and_profil_id")
}

model com_groups_visited {
  id        BigInt    @id @default(autoincrement())
  group_id  BigInt    @default(0)
  profil_id BigInt    @default(0)
  datum     DateTime? @db.DateTime(0)

  @@index([group_id], map: "group_id")
  @@index([profil_id], map: "profil_id")
}

model com_groups_wall {
  id            BigInt    @id @default(autoincrement())
  group_id      BigInt    @default(0)
  profil_id     BigInt    @default(0)
  message       String?   @db.Text
  datum         DateTime? @db.DateTime(0)
  hsog_group_id BigInt    @default(0)

  @@index([group_id], map: "group")
  @@index([hsog_group_id], map: "hsog_group_id")
  @@index([profil_id], map: "profil")
}

model com_inbox {
  id              BigInt        @id @default(autoincrement())
  datum           DateTime      @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  msgid           BigInt
  betreff         String?       @db.VarChar(255)
  msg             String?       @db.Text
  fromid          BigInt        @default(0)
  msg_sent        DateTime?     @db.DateTime(0)
  email           Int           @default(0) @db.TinyInt
  message         Int           @default(0) @db.TinyInt
  toid            BigInt        @default(0)
  jread           Int           @default(0) @db.TinyInt
  reply           Int           @default(0) @db.TinyInt
  empfaenger      String?       @db.Text
  add_recipient   String?       @db.Text
  com_messages_id BigInt?
  com_messages    com_messages? @relation(fields: [com_messages_id], references: [id], onUpdate: NoAction, map: "fk_com_inbox_com_messages_id")

  @@index([com_messages_id], map: "fk_com_inbox_com_messages_id")
  @@index([toid], map: "idx_toid")
}

model com_kampagne_contributions {
  id          BigInt   @id @default(autoincrement())
  kampagne_id BigInt   @default(0)
  profil_id   BigInt   @default(0)
  amount      String?  @db.VarChar(255)
  datum       DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)

  @@index([kampagne_id], map: "kampagne_id")
  @@index([profil_id], map: "profil_id")
}

model com_kampagnen {
  id          BigInt    @id @default(autoincrement())
  title       String?   @db.VarChar(255)
  description String?   @db.Text
  datum       DateTime? @db.DateTime(0)
  email       String?   @db.VarChar(255)
}

model com_logs {
  id        BigInt   @id @default(autoincrement())
  bereich   String?  @db.VarChar(15)
  did       BigInt   @default(0)
  datum     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  user      BigInt   @default(0)
  ip        String?  @db.VarChar(15)
  log       String?  @db.VarChar(255)
  typ       Int      @default(0) @db.TinyInt
  ref_table String?  @db.VarChar(32)
  ref_field String?  @db.VarChar(32)
  ref_id    BigInt   @default(0)
}

model com_marketplace {
  id          BigInt    @id @default(autoincrement())
  profil_id   BigInt    @default(0)
  category    BigInt    @default(0)
  title       String?   @db.VarChar(255)
  description String?   @db.Text
  plain_text  String?   @db.Text
  updated     DateTime? @db.DateTime(0)

  @@index([category], map: "category")
  @@index([profil_id], map: "profil_id")
}

model com_marketplace_categories {
  id       BigInt  @id @default(autoincrement())
  name     String? @db.VarChar(255)
  parent   BigInt?
  position Int     @default(0)
  lft      Int     @default(0)
  rgt      Int     @default(0)

  @@index([parent], map: "parent")
}

model com_marketplace_category {
  id   BigInt  @id @default(autoincrement())
  name String? @db.VarChar(255)
}

model com_marketplace_entry {
  id          BigInt    @id @unique(map: "id") @default(autoincrement())
  profile_id  BigInt?
  headline    String?   @db.VarChar(255)
  description String?   @db.Text
  last_update DateTime? @db.DateTime(0)
}

model com_marketplace_entry_category {
  entry_id    BigInt @default(0)
  category_id BigInt @default(0)

  @@id([entry_id, category_id])
}

model com_mentee {
  profil_id   BigInt
  mentor_id   BigInt
  status      Int       @default(1)
  update_date DateTime? @db.DateTime(0)

  @@id([profil_id, mentor_id])
  @@index([status, mentor_id], map: "idx_status_and_mentor_id")
}

model com_mentor {
  profil_id   BigInt @unique(map: "profil_id")
  max_mentees Int?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model com_mentors {
  profil_id BigInt  @default(0)
  mentor_id BigInt?
  confirm   Boolean @default(false)

  @@unique([profil_id, mentor_id], map: "profil_mentor")
  @@index([mentor_id], map: "mentor_id")
  @@index([profil_id], map: "profil_id")
  @@ignore
}

model com_messages {
  id        BigInt      @id @default(autoincrement())
  from      BigInt      @default(0)
  datum     DateTime    @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  betreff   String?     @db.VarChar(255)
  text      String?     @db.Text
  delete    Boolean     @default(false)
  com_inbox com_inbox[]

  @@index([from], map: "from")
  @@index([delete], map: "idx_delete")
}

model com_messages_file {
  id         BigInt  @id @default(autoincrement())
  name       String? @db.VarChar(255)
  extension  String? @db.VarChar(255)
  message_id BigInt?
  size       BigInt? @default(0)
}

model com_notifications {
  profil_id       BigInt  @id @default(0)
  friend_requests Boolean @default(true)
  new_messages    Boolean @default(true)
  group_requests  Boolean @default(true)
  event_requests  Boolean @default(true)
}

model com_online_stack {
  profil_id     BigInt    @default(0)
  domain_id     BigInt    @default(0)
  last_activity DateTime? @db.DateTime(0)
  online_show   Int       @default(1) @db.SmallInt

  @@id([profil_id, domain_id])
}

model com_outbox {
  id            BigInt    @id @default(autoincrement())
  datum         DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  betreff       String?   @db.VarChar(255)
  msg           String?   @db.Text
  mailid        BigInt
  fromid        BigInt    @default(0)
  absender_ip   String?   @db.VarChar(15)
  msg_sent      DateTime? @db.DateTime(0)
  email         Int       @default(0) @db.TinyInt
  message       Int       @default(0) @db.TinyInt
  sms           Int       @default(0) @db.TinyInt
  toid          BigInt    @default(-1)
  jread         Int       @default(0) @db.TinyInt
  reply         Int       @default(0) @db.TinyInt
  empfaenger    String?   @db.LongText
  add_recipient String?   @db.Text
  route         String?   @db.VarChar(8)
  stakeholderid String?   @db.Text
  msgid         Boolean   @default(false)
}

model com_photos {
  id            BigInt  @id @default(autoincrement())
  group_id      BigInt  @default(0)
  hsog_group_id BigInt  @default(0)
  event_id      BigInt  @default(0)
  profil_id     BigInt  @default(0)
  album_id      BigInt  @default(0)
  name          String? @db.VarChar(128)
  position      Int     @default(1) @db.TinyInt
  text          String? @db.VarChar(255)

  @@index([album_id], map: "album_id")
  @@index([event_id], map: "event_id")
  @@index([group_id], map: "group_id")
  @@index([hsog_group_id], map: "hsog_group_id")
  @@index([profil_id], map: "profil_id")
}

model com_professional {
  id          BigInt   @id @unique(map: "id") @default(autoincrement())
  pid         BigInt   @default(0)
  affiliate   Boolean  @default(false)
  sort_order  Int      @default(0) @db.UnsignedTinyInt
  von         String?  @db.VarChar(255)
  von_datum   DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  bis         String?  @db.VarChar(255)
  bis_datum   DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  firma       String?  @db.VarChar(100)
  sector      String?  @db.VarChar(255)
  anstellung  String?  @db.VarChar(255)
  bereich     String?  @db.Text
  description String?  @db.Text
  kommentar   String?  @db.Text

  @@index([id], map: "id_2")
}

model com_profil {
  profil_id       BigInt  @id @default(0)
  profil_typ      String? @db.VarChar(255)
  primary_study   String? @db.VarChar(255)
  secondary_study String? @db.VarChar(255)
  class_year      Int?
  status          String? @db.VarChar(255)
}

model com_profil_access {
  id                   BigInt   @id @default(autoincrement())
  profil               BigInt   @default(0)
  classmates_contact   Boolean  @default(false)
  classmates_aboutme   Boolean  @default(true)
  classmates_education Boolean  @default(true)
  classmates_work      Boolean  @default(true)
  classmates_pics      Boolean  @default(true)
  classmates_groups    Boolean  @default(true)
  contacts_contact     Boolean  @default(true)
  contacts_aboutme     Boolean  @default(true)
  contacts_education   Boolean  @default(true)
  contacts_work        Boolean  @default(true)
  contacts_pics        Boolean  @default(true)
  contacts_groups      Boolean  @default(true)
  region_contact       Boolean  @default(true)
  region_aboutme       Boolean  @default(true)
  region_education     Boolean  @default(true)
  region_work          Boolean  @default(true)
  region_pics          Boolean  @default(true)
  region_groups        Boolean  @default(true)
  alumni_contact       Boolean  @default(false)
  alumni_aboutme       Boolean  @default(true)
  alumni_education     Boolean  @default(true)
  alumni_work          Boolean  @default(true)
  alumni_pics          Boolean  @default(true)
  alumni_groups        Boolean  @default(true)
  students_contact     Boolean  @default(false)
  students_aboutme     Boolean  @default(true)
  students_education   Boolean  @default(true)
  students_work        Boolean  @default(true)
  students_pics        Boolean  @default(true)
  students_groups      Boolean  @default(true)
  hr_contact           Boolean? @default(true)
  hr_aboutme           Boolean  @default(false)
  hr_education         Boolean  @default(false)
  hr_work              Boolean  @default(true)
  hr_pics              Boolean  @default(false)
  hr_groups            Boolean  @default(false)
  faculty_contact      Boolean  @default(true)
  faculty_aboutme      Boolean  @default(true)
  faculty_education    Boolean  @default(true)
  faculty_work         Boolean  @default(true)
  faculty_pics         Boolean  @default(true)
  faculty_groups       Boolean  @default(true)

  @@index([profil], map: "profil")
}

model com_profil_clicks {
  profil_id BigInt   @default(0)
  user_id   BigInt   @default(0)
  datum     DateTime @default(dbgenerated("'0000-00-00'")) @db.Date

  @@id([profil_id, user_id])
}

model com_profile_privacy_policy {
  profile_id                   BigInt @default(0)
  profile_info_viewer_group_id Int    @default(0) @db.SmallInt
  profile_info_category_id     Int    @default(0) @db.SmallInt

  @@id([profile_id, profile_info_viewer_group_id, profile_info_category_id])
}

model com_recipients {
  msg                 BigInt    @default(0)
  recipient           BigInt    @default(0)
  read                DateTime? @db.DateTime(0)
  reply               BigInt    @default(0)
  delete              Int       @default(0) @db.TinyInt
  read_from_sender    DateTime? @db.DateTime(0)
  deleted_from_sender Int       @default(0) @db.TinyInt
  from                BigInt?

  @@id([msg, recipient])
  @@index([recipient], map: "idx_recipient")
}

model com_sms {
  id          BigInt   @id @default(autoincrement())
  absender    BigInt   @default(0)
  absender_ip String?  @db.VarChar(15)
  datum       DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  text        String?  @db.VarChar(160)
  empfaenger  String?  @db.MediumText
  route       String?  @db.VarChar(7)
}

model com_sportarten {
  id        BigInt  @id @default(autoincrement())
  profil_id BigInt  @default(0)
  sportart  String? @db.VarChar(255)
  koennen   String? @db.VarChar(255)
  mitrenner Boolean @default(true)

  @@index([profil_id], map: "profil_id")
}

model com_sprachen {
  id         BigInt  @id @default(autoincrement())
  profil_id  BigInt  @default(0)
  language   String? @db.VarChar(255)
  level      Int     @default(1)
  sort_order Int?    @db.TinyInt

  @@index([profil_id], map: "profil_id")
}

model com_tasks {
  id              BigInt  @id @default(0)
  name            String? @db.VarChar(255)
  typ             String? @db.VarChar(20)
  attribut        String? @db.Text
  cronjob         String? @db.VarChar(20)
  reminder_set    Int     @default(1) @db.TinyInt
  erinnerung_nach Int     @default(0)
  einheiten       String? @db.VarChar(10)
  erinnerungszeit BigInt  @default(0)
  fromid          BigInt  @default(0)
  stid            Int     @default(1)
  mail            Int     @default(0) @db.TinyInt
  sms             Int     @default(0) @db.TinyInt
  news            Int     @default(0) @db.TinyInt
  nid             BigInt  @default(0)
  startseite      Int     @default(0) @db.TinyInt
  mail_subject    String? @db.VarChar(255)
  mail_text       String? @db.Text
  sms_text        String? @db.VarChar(160)
  news_text       String? @db.Text
  news_subject    String? @db.VarChar(255)
  startseite_text String? @db.Text
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model com_tasks_member {
  taskid BigInt @default(0)
  userid BigInt @default(0)

  @@ignore
}

model com_tracking {
  id           BigInt    @id @default(autoincrement())
  msgid        BigInt    @default(0)
  empfaengerid BigInt    @default(0)
  email        String?   @db.VarChar(255)
  message      BigInt    @default(0)
  send         DateTime? @db.DateTime(0)
  RECOG        DateTime? @db.DateTime(0)
}

model com_visible_address_status {
  domain_id             Int                   @db.SmallInt
  address_status_id     BigInt
  cms_data_adressstatus cms_data_adressstatus @relation(fields: [address_status_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_com_visible_address_status_address_status_id")
  cms_community         cms_community         @relation(fields: [domain_id], references: [domain_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_com_visible_address_status_domain_id")

  @@id([domain_id, address_status_id])
  @@index([address_status_id], map: "fk_com_visible_address_status_address_status_id")
}

model com_visible_address_types {
  domain_id       Int           @default(0) @db.SmallInt
  address_type_id Int           @default(0) @db.SmallInt
  cms_community   cms_community @relation(fields: [domain_id], references: [domain_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_com_visible_address_types_domain_id")

  @@id([domain_id, address_type_id])
}

model comm_access_group {
  groupid                     BigInt  @id @default(0)
  email_read                  Int?    @default(0) @db.TinyInt
  email_write                 Int?    @default(0) @db.TinyInt
  text_read                   Int?    @default(0) @db.TinyInt
  text_write                  Int?    @default(0) @db.TinyInt
  email_textdraft_assignement Boolean @default(false)
}

model comm_approvals {
  profile_id   BigInt
  approval_id  BigInt
  created_date DateTime @default(now()) @db.Timestamp(0)

  @@id([profile_id, approval_id])
}

model comm_attachments {
  id        BigInt    @id @default(autoincrement())
  msgid     BigInt
  filename  String?   @db.VarChar(32)
  name      String?   @db.VarChar(128)
  extension String?   @db.VarChar(5)
  filesize  BigInt    @default(0)
  uploaded  DateTime? @db.DateTime(0)

  @@index([msgid], map: "msgid")
}

model comm_layout_email {
  id     Int     @id @default(autoincrement())
  name   String? @db.VarChar(64)
  head   String? @db.Text
  footer String? @db.Text
  styles String? @db.Text
}

model comm_msg {
  id           BigInt    @id @default(autoincrement())
  type         String?   @db.VarChar(5)
  format       String?   @db.VarChar(5)
  subject      String?   @db.VarChar(128)
  text         String?   @db.LongText
  sender       String?   @db.VarChar(128)
  priority     Int       @default(0) @db.TinyInt
  language     String?   @db.VarChar(2)
  userid       BigInt
  bcc          String?   @db.VarChar(255)
  recipients   String?   @db.LongText
  date_created DateTime  @db.DateTime(0)
  date_send    DateTime? @db.DateTime(0)
  date_read    DateTime? @db.DateTime(0)
  date_reply   DateTime? @db.DateTime(0)
  date_deleted DateTime  @db.DateTime(0)

  @@index([date_deleted], map: "date_deleted")
  @@index([subject, userid], map: "subject")
  @@index([type, userid, date_send], map: "type")
}

model comm_signature {
  id     BigInt  @id @default(autoincrement())
  profil BigInt
  type   String? @db.VarChar(5)
  text   String? @db.Text

  @@unique([profil, type], map: "profil")
}

model comm_unsubscribe {
  id     BigInt  @id @default(autoincrement())
  profil BigInt? @unique(map: "profil")
  text   String? @db.Text
}

model communication_settings {
  id                      BigInt  @id @default(autoincrement())
  save_to_contact_history Boolean
}

model communicator_admin {
  participant_id           BigInt                   @id
  communicator_participant communicator_participant @relation(fields: [participant_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_communicator_admin_participant__participant_id_id")
}

model communicator_conversation {
  id                       BigInt                     @id @default(autoincrement())
  type                     Int?                       @db.TinyInt
  title                    String?                    @db.VarChar(255)
  communicator_file        communicator_file[]
  communicator_message     communicator_message[]
  communicator_participant communicator_participant[]
}

model communicator_file {
  id                        BigInt                    @id @default(autoincrement())
  conversation_id           BigInt
  message_id                BigInt?
  name                      String                    @db.VarChar(255)
  communicator_conversation communicator_conversation @relation(fields: [conversation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_communicator_file_conversation__conversation_id_id")
  communicator_message      communicator_message?     @relation(fields: [message_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_communicator_file_message__message_id_id")

  @@index([conversation_id], map: "fk_communicator_file_conversation__conversation_id_id")
  @@index([message_id], map: "fk_communicator_file_message__message_id_id")
}

model communicator_message {
  id                         BigInt                    @id @default(autoincrement())
  participant_id             BigInt
  conversation_id            BigInt
  quote_id                   BigInt?
  created                    DateTime?                 @db.DateTime(0)
  deleted                    DateTime?                 @db.DateTime(0)
  type                       Int?                      @db.TinyInt
  text                       String                    @db.Text
  communicator_conversation  communicator_conversation @relation(fields: [conversation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_communicator_message_conversation__conversation_id_id")
  communicator_participant   communicator_participant  @relation(fields: [participant_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_communicator_message_participant__participant_id_id")
  communicator_message       communicator_message?     @relation("communicator_messageTocommunicator_message_quote_id", fields: [quote_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_communicator_message_quote_id")
  communicator_file          communicator_file[]
  other_communicator_message communicator_message[]    @relation("communicator_messageTocommunicator_message_quote_id")

  @@index([conversation_id], map: "fk_communicator_message_conversation__conversation_id_id")
  @@index([participant_id], map: "fk_communicator_message_participant__participant_id_id")
  @@index([quote_id], map: "fk_communicator_message_quote_id")
}

model communicator_participant {
  id                        BigInt                    @id @default(autoincrement())
  profile_id                BigInt
  conversation_id           BigInt
  joined                    DateTime                  @db.DateTime(0)
  left                      DateTime?                 @db.DateTime(0)
  deleted                   DateTime?                 @db.DateTime(0)
  last_seen                 DateTime?                 @db.DateTime(0)
  communicator_conversation communicator_conversation @relation(fields: [conversation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_communicator_participant_conversation__conversation_id_id")
  profil                    profil                    @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_communicator_participant_profile__profile_id_id")
  communicator_admin        communicator_admin?
  communicator_message      communicator_message[]

  @@index([conversation_id], map: "fk_communicator_participant_conversation__conversation_id_id")
  @@index([profile_id], map: "fk_communicator_participant_profile__profile_id_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model company_contact_person {
  company_id        BigInt
  student_id        BigInt
  contact_person_id BigInt
  cv_id             BigInt

  @@ignore
}

model company_log {
  id        BigInt    @id @default(autoincrement())
  type      String?   @db.VarChar(255)
  time      DateTime? @db.DateTime(0)
  user_id   BigInt?
  values    String?   @db.Text
  entity_id BigInt?
}

model configuration_value {
  name  String @id @db.VarChar(255)
  value String @db.Text
}

model country_province {
  id         BigInt  @id @default(autoincrement())
  country_id BigInt
  label      String? @db.VarChar(255)
}

model course_data_source {
  course_id      BigInt         @default(0)
  data_source_id BigInt         @default(0)
  kb_kursangebot kb_kursangebot @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_data_source_course_id")
  cms_datasrc    cms_datasrc    @relation(fields: [data_source_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_data_source_data_source_id")

  @@id([course_id, data_source_id])
  @@index([data_source_id], map: "fk_course_data_source_data_source_id")
}

model course_default_settings {
  id                                               BigInt                                  @id @default(autoincrement())
  teaching_units                                   Float                                   @db.Float
  min_participants                                 Int?                                    @db.SmallInt
  max_participants                                 Int?                                    @db.SmallInt
  compulsory_attendance                            Boolean                                 @default(false)
  show_attendance_in_community                     Boolean                                 @default(false)
  max_absence_percentage                           Int?                                    @db.SmallInt
  max_unexcused_percentage                         Int?                                    @db.SmallInt
  course_status_id                                 BigInt?
  offer_number_template                            String?                                 @db.VarChar(255)
  paid_offers                                      Boolean                                 @default(false)
  participant_suggestion                           Boolean                                 @default(false)
  min_weekly_semester_hours_internal               Float?                                  @db.Float
  max_weekly_semester_hours_internal               Float?                                  @db.Float
  min_weekly_semester_hours_external               Float?                                  @db.Float
  max_weekly_semester_hours_external               Float?                                  @db.Float
  course_generation_series_per_cohort              Int                                     @default(0) @db.TinyInt
  consider_module_selection_participant_suggestion Int                                     @default(0) @db.TinyInt
  employment_generation_period_calculation         Int                                     @default(0) @db.TinyInt
  room_utilization_target_minutes                  Float                                   @default(480) @db.Float
  planning_type                                    String?                                 @db.VarChar(255)
  course_lecture_series_languages                  Boolean                                 @default(false)
  course_status                                    course_status?                          @relation(fields: [course_status_id], references: [id], onUpdate: NoAction, map: "course_status_id")
  course_default_settings_semester_type            course_default_settings_semester_type[]
  course_default_settings_study_type               course_default_settings_study_type[]

  @@index([course_status_id], map: "course_status_id")
}

model course_default_settings_semester_type {
  course_default_settings_id BigInt
  semester_type_id           BigInt
  course_default_settings    course_default_settings @relation(fields: [course_default_settings_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_default_settings_semester_type_id")

  @@id([course_default_settings_id, semester_type_id])
}

model course_default_settings_study_type {
  course_default_settings_id BigInt
  study_type_signature       String                  @default("") @db.VarChar(255)
  course_default_settings    course_default_settings @relation(fields: [course_default_settings_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "course_default_settings_id")

  @@id([course_default_settings_id, study_type_signature])
}

model course_enrolment_period_courses {
  course_enrolment_period_id BigInt
  course_id                  BigInt
  course_enrolment_periods   course_enrolment_periods @relation(fields: [course_enrolment_period_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_enrolment_period_courses_period_id")
  kb_kursangebot             kb_kursangebot           @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_enrolment_period_courses_course_id")

  @@id([course_enrolment_period_id, course_id])
  @@index([course_id], map: "fk_course_enrolment_period_courses_course_id")
}

model course_enrolment_period_excluded_profile_keyword {
  enrolment_period_id      BigInt
  keyword_id               BigInt
  course_enrolment_periods course_enrolment_periods @relation(fields: [enrolment_period_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_enrolment_period_excluded_profile_keyword_period_id")
  profil_links_keywords    profil_links_keywords    @relation(fields: [keyword_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_enrolment_period_excluded_profile_keyword_keyword_id")

  @@id([enrolment_period_id, keyword_id])
  @@index([keyword_id], map: "fk_course_enrolment_period_excluded_profile_keyword_keyword_id")
}

model course_enrolment_period_semester_type {
  enrolment_period_id      BigInt
  semester_type_id         Int
  course_enrolment_periods course_enrolment_periods @relation(fields: [enrolment_period_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_enrolment_period_semester_type__enrolment_periods_id")
  semester_type            semester_type            @relation(fields: [semester_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_enrolment_period_semester_type__semester_type_id")

  @@id([enrolment_period_id, semester_type_id])
  @@index([semester_type_id], map: "fk_enrolment_period_semester_type__semester_type_id")
}

model course_enrolment_periods {
  id                                               BigInt                                             @id @default(autoincrement())
  name                                             String?                                            @db.VarChar(255)
  preview_date_time                                DateTime?                                          @db.DateTime(0)
  start_date_time                                  DateTime?                                          @db.DateTime(0)
  end_date_time                                    DateTime?                                          @db.DateTime(0)
  start_lottery_date_time                          DateTime?                                          @db.DateTime(0)
  overbookable                                     Boolean                                            @default(false)
  permanent                                        Boolean                                            @default(false)
  site_id                                          BigInt
  instantExamLicenseAssignement                    Boolean                                            @default(true)
  involve_study_program                            Boolean?
  cancel_period_days                               Int?                                               @default(0)
  semester_year                                    Int?
  semester_term                                    Int?
  consider_curriculum_vitae                        Boolean?                                           @default(false)
  limit_courses_by_planning_groups                 Boolean                                            @default(false)
  start_cancel_enrollment_date_time                DateTime?                                          @db.DateTime(0)
  end_cancel_enrollment_date_time                  DateTime?                                          @db.DateTime(0)
  is_course_inscription_prioritization             Boolean                                            @default(false)
  course_inscription_prioritization_minimum        BigInt                                             @default(0)
  is_for_repeater                                  Int                                                @default(0) @db.TinyInt
  pm_standorte                                     pm_standorte                                       @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "course_enrolment_periods_ibfk_1")
  course_enrolment_period_courses                  course_enrolment_period_courses[]
  course_enrolment_period_excluded_profile_keyword course_enrolment_period_excluded_profile_keyword[]
  course_enrolment_period_semester_type            course_enrolment_period_semester_type[]
  course_series_draw_priority                      course_series_draw_priority[]
  enrolment_period_course_draw                     enrolment_period_course_draw[]
  enrolment_period_log                             enrolment_period_log[]
  enrolment_period_prioritisation                  enrolment_period_prioritisation?
  enrolment_period_profile_score                   enrolment_period_profile_score[]
  enrolment_period_status                          enrolment_period_status[]
  kb_kursangebot_tickets                           kb_kursangebot_tickets[]

  @@index([site_id], map: "site_id")
}

model course_evaluation_log {
  id        BigInt   @id @default(autoincrement())
  action    String   @db.VarChar(255)
  value_old String?  @db.Text
  value_new String?  @db.Text
  userid    BigInt
  timestamp DateTime @default(now()) @db.Timestamp(0)
}

model course_export {
  id              BigInt   @id @default(autoincrement())
  created_date    DateTime @db.DateTime(0)
  created_user_id BigInt?
  filter_values   String?  @db.Text
  profil          profil?  @relation(fields: [created_user_id], references: [id], onUpdate: NoAction, map: "created_user_id_profile")

  @@index([created_user_id], map: "created_user_id_profile")
}

model course_lecture_series_language {
  course_lecture_series_id BigInt
  language_id              BigInt
  kb_vorlesungen           kb_vorlesungen @relation(fields: [course_lecture_series_id], references: [referenzid], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_lecture_series_language_course_lecture_series_id")
  noten_select             noten_select   @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_course_lecture_series_language_language_id")

  @@id([course_lecture_series_id, language_id])
  @@index([language_id], map: "fk_course_lecture_series_language_language_id")
}

model course_lecture_series_lecturer {
  course_lecture_series_id BigInt
  profile_id               BigInt
  hours_per_week           Float          @db.Float
  kb_vorlesungen           kb_vorlesungen @relation(fields: [course_lecture_series_id], references: [referenzid], onDelete: Cascade, onUpdate: NoAction, map: "course_lecture_series_lecturer_ibfk_1")
  profil                   profil         @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "course_lecture_series_lecturer_ibfk_2")

  @@id([course_lecture_series_id, profile_id])
  @@index([profile_id], map: "profile_id")
}

model course_lecture_series_part {
  id                                        BigInt                                      @id @default(autoincrement())
  course_lecture_series_id                  BigInt
  label_de                                  String?                                     @db.VarChar(255)
  label_en                                  String?                                     @db.VarChar(255)
  room_booking_required                     Boolean?
  teaching_units_to_be_planned              Float?                                      @db.Float
  series_part_type_id                       BigInt?
  kb_vorlesungen                            kb_vorlesungen                              @relation(fields: [course_lecture_series_id], references: [referenzid], onDelete: Cascade, onUpdate: NoAction, map: "course_lecture_series_part_ibfk_1")
  course_lecture_series_part_type           course_lecture_series_part_type?            @relation(fields: [series_part_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_part_part_type")
  course_lecture_series_part_lecturer       course_lecture_series_part_lecturer[]
  course_lecture_series_part_planning_group course_lecture_series_part_planning_group[]

  @@index([series_part_type_id], map: "fk_part_part_type")
  @@index([course_lecture_series_id], map: "series_part_reference_id")
}

model course_lecture_series_part_lecturer {
  id                            BigInt                     @id @default(autoincrement())
  course_lecture_series_part_id BigInt
  profile_id                    BigInt
  hours_per_week                Float?                     @db.Float
  course_lecture_series_part    course_lecture_series_part @relation(fields: [course_lecture_series_part_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "course_lecture_series_part_lecturer_ibfk_1")

  @@index([course_lecture_series_part_id], map: "series_part_lecturer_series_part_id")
}

model course_lecture_series_part_planning_group {
  course_lecture_series_part_id BigInt
  planning_group_id             BigInt
  course_lecture_series_part    course_lecture_series_part @relation(fields: [course_lecture_series_part_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "course_lecture_series_part_planning_group_ibfk_1")
  planning_group                planning_group             @relation(fields: [planning_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "course_lecture_series_part_planning_group_ibfk_2")

  @@id([course_lecture_series_part_id, planning_group_id])
  @@index([planning_group_id], map: "planning_group_id")
}

model course_lecture_series_part_type {
  id                         BigInt                       @id @default(autoincrement())
  de                         String?                      @db.VarChar(255)
  en                         String?                      @db.VarChar(255)
  abbreviation               String?                      @db.VarChar(255)
  color_id                   BigInt
  position                   Int?
  color                      color                        @relation(fields: [color_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_course_lecture_series_part_type_color")
  course_lecture_series_part course_lecture_series_part[]

  @@index([color_id], map: "FK_course_lecture_series_part_type_color")
}

model course_lecture_series_planning_group {
  course_lecture_series_id BigInt
  planning_group_id        BigInt
  booking_action           Int            @db.TinyInt
  kb_vorlesungen           kb_vorlesungen @relation(fields: [course_lecture_series_id], references: [referenzid], onDelete: Cascade, onUpdate: NoAction, map: "series_group_series_id")
  planning_group           planning_group @relation(fields: [planning_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "series_group_group_id")

  @@id([course_lecture_series_id, planning_group_id])
  @@index([planning_group_id], map: "series_group_group_id")
}

model course_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model course_offer_type {
  id                             BigInt           @id @default(autoincrement())
  de                             String?          @db.VarChar(255)
  en                             String?          @db.VarChar(255)
  based_on                       String?          @db.VarChar(32)
  position                       Int?
  relevant_for_planning          Boolean?
  color_id                       BigInt
  individual_care                Boolean          @default(false)
  cancelling_booking_by_student  Boolean?         @default(true)
  relevant_for_course_generation Int              @default(1) @db.TinyInt
  data_source_id                 BigInt?
  color                          color            @relation(fields: [color_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "course_offer_type_color")
  cms_datasrc                    cms_datasrc?     @relation(fields: [data_source_id], references: [id], onUpdate: NoAction, map: "fk_course_offer_type_data_source_id")
  kb_kursangebot                 kb_kursangebot[]

  @@index([color_id], map: "course_offer_type_color")
  @@index([data_source_id], map: "fk_course_offer_type_data_source_id")
}

model course_report_budget_plan_export {
  id              BigInt   @id @default(autoincrement())
  file_name       String?  @db.VarChar(255)
  created_date    DateTime @db.DateTime(0)
  created_user_id BigInt?
  filter_values   String?  @db.LongText
  profil          profil?  @relation(fields: [created_user_id], references: [id], onUpdate: NoAction, map: "budget_plan_export_user_id")

  @@index([created_user_id], map: "budget_plan_export_user_id")
}

model course_series_draw_priority {
  id                       BigInt                   @id @default(autoincrement())
  booking_id               BigInt
  enrolment_period_id      BigInt
  course_id                BigInt
  course_lecture_series_id BigInt
  curriculum_entry_id      BigInt
  priority                 Int?                     @db.TinyInt
  created_date_time        DateTime?                @db.DateTime(0)
  draw_status              Int                      @default(0) @db.TinyInt
  updated_date_time        DateTime?                @db.DateTime(0)
  created_user_id          BigInt
  profil_studium           profil_studium           @relation(fields: [booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_series_draw_priority_profil_studium")
  kb_kursangebot           kb_kursangebot           @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_series_draw_priority_course_id")
  kb_vorlesungen           kb_vorlesungen           @relation(fields: [course_lecture_series_id], references: [referenzid], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_series_draw_priority_course_lecture_series_id")
  noten_notenblatt_klasse  noten_notenblatt_klasse  @relation(fields: [curriculum_entry_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_series_draw_priority_curriculum_entry_id")
  course_enrolment_periods course_enrolment_periods @relation(fields: [enrolment_period_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_series_draw_priority_enrolment_period")

  @@index([course_id], map: "fk_course_series_draw_priority_course_id")
  @@index([course_lecture_series_id], map: "fk_course_series_draw_priority_course_lecture_series_id")
  @@index([enrolment_period_id], map: "fk_course_series_draw_priority_enrolment_period")
  @@index([booking_id, enrolment_period_id, course_lecture_series_id, curriculum_entry_id], map: "idx_course_series_draw_priority_unique_fields")
  @@index([curriculum_entry_id, enrolment_period_id, booking_id, draw_status], map: "idx_curriculum_entry_enrolment_period_booking_draw_status")
}

model course_status {
  id                                      BigInt                    @id @default(autoincrement())
  label_de                                String?                   @db.VarChar(255)
  label_en                                String?                   @db.VarChar(255)
  position                                BigInt?                   @default(0)
  course_offer_deletable                  Boolean?                  @default(true)
  course_published_for_lecturers          Boolean                   @default(false)
  course_published_for_students           Boolean                   @default(false)
  course_offer_editable                   Boolean?                  @default(true)
  course_offer_schedule_assignable        Boolean?                  @default(true)
  color_id                                BigInt
  course_exam_type_editable_for_lecturers Boolean                   @default(false)
  color                                   color                     @relation(fields: [color_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "course_status_color")
  course_default_settings                 course_default_settings[]
  kb_kursangebot                          kb_kursangebot[]
  lectureship_setting                     lectureship_setting[]

  @@index([color_id], map: "course_status_color")
}

model course_study_program_focus {
  course_id              BigInt
  study_program_focus_id BigInt
  kb_kursangebot         kb_kursangebot       @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "course_study_program_focus_ibfk_1")
  studium_schwerpunkte   studium_schwerpunkte @relation(fields: [study_program_focus_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "course_study_program_focus_ibfk_2")

  @@id([course_id, study_program_focus_id])
  @@index([study_program_focus_id], map: "study_program_focus_id")
}

model course_ticket_draw {
  ticket_id                BigInt                 @id
  accepted_date            DateTime?              @db.DateTime(0)
  consider_for_course_draw Boolean                @default(false)
  kb_kursangebot_tickets   kb_kursangebot_tickets @relation(fields: [ticket_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_ticket_draw_kb_kursangebot_tickets")
}

model course_ticket_forbid_cancellation {
  ticket_id              BigInt                 @id
  kb_kursangebot_tickets kb_kursangebot_tickets @relation(fields: [ticket_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_course_ticket_forbid_cancellation_kb_kursangebot_tickets")
}

model course_ticket_grade_subject {
  course_ticket_id       BigInt
  grade_subject_id       BigInt
  kb_kursangebot_tickets kb_kursangebot_tickets @relation(fields: [course_ticket_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "course_ticket_course_ticket_id")

  @@id([course_ticket_id, grade_subject_id])
}

model credited_achievement {
  id                          BigInt                       @id @default(autoincrement())
  credit_number               String?                      @db.VarChar(32)
  reason_id                   BigInt?
  name_de                     String?                      @db.VarChar(255)
  name_en                     String?                      @db.VarChar(255)
  grade                       String?                      @db.VarChar(255)
  credits                     Float?                       @db.Float
  date                        DateTime?                    @db.Date
  credited_achievement_reason credited_achievement_reason? @relation(fields: [reason_id], references: [id], onUpdate: NoAction, map: "credited_achievement_reason_id")

  @@index([reason_id], map: "credited_achievement_reason_id")
}

model credited_achievement_reason {
  id                   BigInt                 @id @default(autoincrement())
  from_date            DateTime?              @db.Date
  until_date           DateTime?              @db.Date
  institute_de         String?                @db.VarChar(255)
  institute_en         String?                @db.VarChar(255)
  comment_de           String?                @db.VarChar(255)
  comment_en           String?                @db.VarChar(255)
  study_course         String?                @db.VarChar(255)
  contact_name         String?                @db.VarChar(255)
  contact_phone        String?                @db.VarChar(255)
  contact_mail         String?                @db.VarChar(255)
  profile_id           BigInt?
  is_abroad            Int                    @default(0) @db.SmallInt
  is_qualified         Int                    @default(0) @db.SmallInt
  profil               profil?                @relation(fields: [profile_id], references: [id], onUpdate: NoAction, map: "credited_achievement_profile_id")
  credited_achievement credited_achievement[]

  @@index([profile_id], map: "credited_achievement_profile_id")
}

model crm_student_anfragen {
  id           BigInt   @id @default(autoincrement())
  profil       BigInt
  datum        DateTime @db.DateTime(0)
  status       Int      @default(0)
  created_date DateTime @db.DateTime(0)
  created_user BigInt

  @@index([profil], map: "profil")
}

model crm_student_data {
  id             BigInt  @id @default(autoincrement())
  pid            BigInt  @default(0)
  bewerbung_mit  String? @db.TinyText
  bewerbung_fuer String? @db.TinyText
  quelle         String? @db.VarChar(255)
  quelle_detail  String? @db.Text

  @@index([pid], map: "pid")
}

model crm_student_interest {
  interessent BigInt
  studium     BigInt
  schwerpunkt BigInt @default(0)
  anfrage     BigInt @default(0)

  @@id([interessent, studium, schwerpunkt])
  @@index([anfrage], map: "anfrage")
}

model crm_student_standort {
  interessent BigInt @default(0)
  stid        BigInt @default(1)
  anfrage     BigInt @default(0)

  @@id([interessent, stid, anfrage])
  @@index([anfrage], map: "anfrage")
}

model curriculum_aoc_limits {
  id          BigInt @id @default(autoincrement())
  version     BigInt
  klasse      BigInt
  studium     BigInt
  aoc_id      BigInt
  max_credits Float? @db.Float

  @@unique([version, klasse, studium, aoc_id], map: "uk_curriculum_aoc_limits")
}

model curriculum_module_relation {
  cohort_id        BigInt
  study_program_id BigInt
  module_one_id    BigInt
  module_two_id    BigInt

  @@id([cohort_id, study_program_id, module_one_id, module_two_id])
  @@index([cohort_id, study_program_id], map: "idx_cohort_study_program_id")
}

model curriculum_study_program_log {
  id        BigInt    @id @default(autoincrement())
  type      String?   @db.VarChar(255)
  time      DateTime? @db.DateTime(0)
  user_id   BigInt?
  values    String?   @db.Text
  entity_id BigInt?
}

model curriculum_template_module_relation {
  version          BigInt
  study_program_id BigInt
  module_one_id    BigInt
  module_two_id    BigInt

  @@id([version, study_program_id, module_one_id, module_two_id])
}

model dashboard {
  id               BigInt             @id @default(autoincrement())
  shared           Boolean
  description      String             @db.Text
  label            String             @db.VarChar(255)
  owner_profile_id BigInt
  system           Boolean            @default(false)
  profil           profil             @relation(fields: [owner_profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dashboard_owner_to_profile")
  dashboard_gadget dashboard_gadget[]
  dashboard_user   dashboard_user[]

  @@index([owner_profile_id], map: "dashboard_owner_to_profile")
}

model dashboard_gadget {
  id                      BigInt                   @id @default(autoincrement())
  gadget_id               BigInt
  position_column         Int
  position_row            Int
  dashboard_id            BigInt
  gadget_type             Int                      @default(0)
  dashboard               dashboard                @relation(fields: [dashboard_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dashboard_gadget_to_dashboard")
  gadget                  gadget                   @relation(fields: [gadget_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dashboard_gadget_to_gadget")
  dashboard_gadget_html   dashboard_gadget_html?
  dashboard_gadget_report dashboard_gadget_report?
  dashboard_gadget_tiles  dashboard_gadget_tiles[]

  @@index([dashboard_id], map: "dashboard_gadget_to_dashboard")
  @@index([gadget_id], map: "dashboard_gadget_to_gadget")
}

model dashboard_gadget_html {
  dashboard_gadget_id BigInt           @unique(map: "dashboard_gadget_id")
  label               String?          @db.VarChar(255)
  content             String?          @db.Text
  dashboard_gadget    dashboard_gadget @relation(fields: [dashboard_gadget_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_dashboard_gadget_html_dashboard_gadget_id")
}

model dashboard_gadget_report {
  id               BigInt           @id
  report_id        BigInt?
  arguments        String?          @db.Text
  name             String?          @db.VarChar(255)
  dashboard_gadget dashboard_gadget @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dashboard_gadget_report_dashboard_gadget")
}

model dashboard_gadget_tiles {
  id                  BigInt            @id @default(autoincrement())
  dashboard_gadget_id BigInt?
  position            Int
  title               String?           @db.VarChar(255)
  route               String?           @db.Text
  icon_id             BigInt?
  color_id            BigInt?
  report_id           BigInt?
  tile_color          tile_color?       @relation(fields: [color_id], references: [id], onUpdate: NoAction, map: "fk_dashboard_gadget_tiles_color_id")
  dashboard_gadget    dashboard_gadget? @relation(fields: [dashboard_gadget_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_dashboard_gadget_tiles_dashboard_gadget_id")
  tile_icons          tile_icons?       @relation(fields: [icon_id], references: [id], onUpdate: NoAction, map: "fk_dashboard_gadget_tiles_tile_icons")
  noten_stat          noten_stat?       @relation(fields: [report_id], references: [id], onUpdate: NoAction, map: "fk_dashboard_gadget_tiles_report_id")

  @@index([color_id], map: "fk_dashboard_gadget_tiles_color_id")
  @@index([dashboard_gadget_id], map: "fk_dashboard_gadget_tiles_dashboard_gadget_id")
  @@index([report_id], map: "fk_dashboard_gadget_tiles_report_id")
  @@index([icon_id], map: "fk_dashboard_gadget_tiles_tile_icons")
}

model dashboard_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model dashboard_user {
  last_usage   DateTime  @db.DateTime(0)
  profile_id   BigInt
  dashboard_id BigInt
  dashboard    dashboard @relation(fields: [dashboard_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dashboard_user_to_dashboard")
  profil       profil    @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "dashboard_user_to_profile_id")

  @@id([profile_id, dashboard_id])
  @@index([dashboard_id], map: "dashboard_user_to_dashboard")
}

model date_calendar_week {
  date        DateTime @id @db.Date
  week_number Int

  @@unique([date, week_number], map: "date")
}

model date_format {
  format                               String                                 @id @default("") @db.VarChar(10)
  settings_system_internationalisation settings_system_internationalisation[]
}

model deviating_statistic_custom_study_field_signature {
  custom_study_field_id                  BigInt
  site_id                                BigInt
  signature                              String?                                @db.VarChar(255)
  statistic_custom_study_field_signature statistic_custom_study_field_signature @relation(fields: [custom_study_field_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_statistic_custom_study_field_signature_custom_study_field_id")

  @@id([custom_study_field_id, site_id])
}

model digital_signature_document {
  id                          BigInt                       @id @default(autoincrement())
  target_profile_id           BigInt?
  study_programm_id           BigInt?
  document_id                 BigInt?
  creation_date               DateTime                     @db.DateTime(0)
  creator_profile_id          BigInt?
  status                      String?                      @db.VarChar(255)
  session_identifier          String?                      @db.VarChar(255)
  text_draft_id               BigInt?
  source_path                 String?                      @db.VarChar(255)
  community_hidden            Boolean                      @default(false)
  archived                    Boolean                      @default(false)
  profil                      profil?                      @relation(fields: [creator_profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "digital_signature_document_creator_profile_id")
  document_generator_document document_generator_document? @relation(fields: [document_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "digital_signature_document_document_id")
  studium                     studium?                     @relation(fields: [study_programm_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "digital_signature_document_study_programm_id")
  nl_text                     nl_text?                     @relation(fields: [text_draft_id], references: [id], onUpdate: NoAction, map: "digital_signature_document_text_draft_id")

  @@index([creator_profile_id], map: "digital_signature_document_creator_profile_id")
  @@index([document_id], map: "digital_signature_document_document_id")
  @@index([study_programm_id], map: "digital_signature_document_study_programm_id")
  @@index([target_profile_id], map: "digital_signature_document_target_profile_id")
  @@index([text_draft_id], map: "digital_signature_document_text_draft_id")
}

model digital_signature_provider {
  id    BigInt  @id @default(autoincrement())
  label String? @db.VarChar(255)
  type  Int
}

model digital_signature_provider_hpc_dual {
  id                BigInt  @id @default(0)
  bku_type          Int
  signature_profile BigInt?
  height            Int
  width             Int
  url               String? @db.Text
  cert_passphrase   String? @db.VarChar(255)
  specific_profile  String? @db.VarChar(255)
}

model diploma_supplement {
  id           BigInt   @id @default(autoincrement())
  name         String?  @db.VarChar(255)
  description  String?  @db.VarChar(255)
  date_created DateTime @db.Date
}

model diploma_supplement_cohort {
  diploma_supplement_id BigInt
  cohort_id             BigInt

  @@id([diploma_supplement_id, cohort_id])
}

model diploma_supplement_property {
  id                    BigInt  @id @default(autoincrement())
  property              String? @db.VarChar(255)
  diploma_supplement_id BigInt
}

model diploma_supplement_property_translation {
  diploma_supplement_property_id BigInt
  language_key                   String  @default("") @db.VarChar(255)
  value                          String? @db.Text

  @@id([diploma_supplement_property_id, language_key])
}

model docs_verify {
  id          BigInt   @id @default(autoincrement())
  hash        String?  @unique(map: "hash") @db.VarChar(10)
  profil      BigInt
  doc_type    Int
  doc_created DateTime @db.Date
  doc_date    DateTime @db.Date
  year        Int
  term        Boolean
}

model document {
  id         BigInt @id @default(autoincrement())
  label      String @db.VarChar(255)
  class_name String @db.VarChar(255)
  type       Int
}

model document_generator_academy_verification {
  id                BigInt  @id @default(autoincrement())
  verification_code String? @db.VarChar(255)
  profile_id        Int
  pdf_file          Int?
}

model document_generator_custom_property {
  id                  BigInt  @id @default(autoincrement())
  default_value       String? @db.Text
  default_value_type  BigInt
  label_de            String? @db.VarChar(255)
  label_en            String? @db.VarChar(255)
  type                BigInt
  in_community        Boolean
  document_id         BigInt
  name                String? @db.VarChar(255)
  document_version_id BigInt
}

model document_generator_document {
  id                                        BigInt                                      @id @default(autoincrement())
  label                                     String?                                     @db.VarChar(255)
  has_community                             Boolean
  deleted                                   Boolean
  last_change                               DateTime                                    @db.DateTime(0)
  type                                      BigInt
  language                                  String?                                     @db.VarChar(255)
  active                                    Boolean                                     @default(false)
  contact_history_status                    BigInt?
  relevant_for_contact_history              Boolean                                     @default(false)
  format_width                              BigInt?
  format_height                             BigInt?
  digital_signature_provider_id             BigInt?
  digital_signature_academy                 Int                                         @default(0) @db.TinyInt
  digital_signature_community               Boolean                                     @default(false)
  is_application_enabled                    Boolean?
  academy_verification_enabled              Boolean                                     @default(false)
  digital_signature_document                digital_signature_document[]
  document_generator_document_access_groups document_generator_document_access_groups[]
  document_generator_document_site          document_generator_document_site[]
  document_generator_document_study_program document_generator_document_study_program[]
  document_generator_sql_statement          document_generator_sql_statement[]
}

model document_generator_document_access_groups {
  document_generator_document_id BigInt
  access_group_id                BigInt
  access_groups                  access_groups               @relation(fields: [access_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "document_access_group_access_group_id")
  document_generator_document    document_generator_document @relation(fields: [document_generator_document_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "document_access_group_document_generator_document_id")

  @@id([document_generator_document_id, access_group_id])
  @@index([access_group_id], map: "document_access_group_access_group_id")
}

model document_generator_document_site {
  site_id                        BigInt
  document_generator_document_id BigInt
  document_generator_document    document_generator_document @relation(fields: [document_generator_document_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "document_generator_document_site_document_generator_document_id")
  pm_standorte                   pm_standorte                @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "document_generator_document_site_site_id")

  @@id([site_id, document_generator_document_id])
  @@index([document_generator_document_id], map: "document_generator_document_site_document_generator_document_id")
}

model document_generator_document_status_student {
  document_generator_document_id BigInt
  status_student_id              BigInt

  @@id([document_generator_document_id, status_student_id])
}

model document_generator_document_study_program {
  document_id                 BigInt
  study_program_id            BigInt
  study_start_date_from       DateTime?                   @db.Date
  study_start_date_to         DateTime?                   @db.Date
  document_generator_document document_generator_document @relation(fields: [document_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "document_generator_document_document_id")
  studium                     studium                     @relation(fields: [study_program_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "document_generator_document_study_program_id")

  @@id([document_id, study_program_id])
  @@index([study_program_id], map: "document_generator_document_study_program_id")
}

model document_generator_document_version {
  id              BigInt    @id @default(autoincrement())
  document_id     BigInt
  version_number  BigInt
  creator_user_id BigInt
  create_date     DateTime? @db.DateTime(0)
  publish_user_id BigInt?
  publish_date    DateTime? @db.DateTime(0)
}

model document_generator_file {
  name                String @default("") @db.VarChar(255)
  extension           String @default("") @db.VarChar(255)
  documentId          BigInt
  type                BigInt
  document_version_id BigInt

  @@id([name, extension, documentId, document_version_id])
}

model document_generator_pdf_file {
  id              BigInt    @id @default(autoincrement())
  document_id     Int
  file_name       String?   @db.VarChar(255)
  verification_id Int?
  creation_date   DateTime? @db.Date
}

model document_generator_sql_statement {
  id                          BigInt                      @id @default(autoincrement())
  document_id                 BigInt
  name                        String?                     @db.VarChar(255)
  statement                   String?                     @db.Text
  document_version_id         BigInt
  document_generator_document document_generator_document @relation(fields: [document_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_document_generator_sql_statement_document_id")

  @@index([document_id], map: "fk_document_generator_sql_statement_document_id")
}

model document_preview {
  id             String    @id @default("") @db.VarChar(40)
  previewCreated DateTime? @db.DateTime(0)
  pages          Int?
}

model document_type {
  id   BigInt @id @default(autoincrement())
  name String @db.VarChar(255)
}

model document_verify_code {
  id            BigInt  @id @default(autoincrement())
  verify_code   String? @db.VarChar(32)
  profile_id    BigInt?
  document_name String? @db.VarChar(50)
}

model email_textdraft_assignement {
  languageKey   String @db.Char(2)
  textDraftId   BigInt
  textDraftType String @default("") @db.VarChar(255)

  @@id([languageKey, textDraftType])
}

model email_tracking {
  id              BigInt   @id @default(autoincrement())
  nl_task_id      BigInt
  profile_id      BigInt?
  email_address   String   @db.VarChar(255)
  dispatch_status Int
  dispatch_count  Int
  last_try        DateTime @db.DateTime(0)
  nl_task         nl_task  @relation(fields: [nl_task_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "email_tracking_nl_task_id")
  profil          profil?  @relation(fields: [profile_id], references: [id], onUpdate: NoAction, map: "email_tracking_profile_id")

  @@index([nl_task_id], map: "email_tracking_nl_task_id")
  @@index([profile_id], map: "email_tracking_profile_id")
}

model enrolment_period_course_draw {
  enrolment_period_id      BigInt
  course_id                BigInt
  draw_date                DateTime                 @db.DateTime(0)
  kb_kursangebot           kb_kursangebot           @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_enrolment_period_course_draw_kb_kursangebot")
  course_enrolment_periods course_enrolment_periods @relation(fields: [enrolment_period_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_enrolment_period_course_draw_enrolment_period")

  @@id([enrolment_period_id, course_id])
  @@index([course_id], map: "fk_enrolment_period_course_draw_kb_kursangebot")
}

model enrolment_period_log {
  id                       BigInt                    @id @default(autoincrement())
  type                     String?                   @db.VarChar(255)
  time                     DateTime?                 @db.DateTime(0)
  user_id                  BigInt?
  values                   String?                   @db.Text
  entity_id                BigInt?
  course_enrolment_periods course_enrolment_periods? @relation(fields: [entity_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_enrolment_period_log_entity_id")

  @@index([entity_id], map: "fk_enrolment_period_log_entity_id")
}

model enrolment_period_prioritisation {
  enrolment_period_id                    BigInt                                   @id
  prioritisation_draw_status             Boolean
  profile_id                             BigInt?
  course_enrolment_periods               course_enrolment_periods                 @relation(fields: [enrolment_period_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_enrolment_period_prioritisation_enrolment_period_id")
  profil                                 profil?                                  @relation(fields: [profile_id], references: [id], onUpdate: NoAction, map: "fk_enrolment_period_prioritisation_profile_id")
  enrolment_period_prioritisation_course enrolment_period_prioritisation_course[]

  @@index([profile_id], map: "fk_enrolment_period_prioritisation_profile_id")
}

model enrolment_period_prioritisation_course {
  enrolment_period_id             BigInt
  course_id                       BigInt
  kb_kursangebot                  kb_kursangebot                  @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_enrolment_period_prioritisation_courses_kb_kursangebot")
  enrolment_period_prioritisation enrolment_period_prioritisation @relation(fields: [enrolment_period_id], references: [enrolment_period_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_enrolment_period_prioritisation_courses_prioritisation")

  @@id([enrolment_period_id, course_id])
  @@index([course_id], map: "fk_enrolment_period_prioritisation_courses_kb_kursangebot")
}

model enrolment_period_profile_score {
  enrolment_period_id      BigInt
  profile_id               BigInt
  score                    Int                      @default(0) @db.SmallInt
  course_enrolment_periods course_enrolment_periods @relation(fields: [enrolment_period_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_enrolment_period_profile_score_enrolment_period")
  profil                   profil                   @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_enrolment_period_profile_score_profile")

  @@id([enrolment_period_id, profile_id])
  @@index([profile_id], map: "fk_enrolment_period_profile_score_profile")
}

model enrolment_period_status {
  enrolment_period_id      BigInt
  status_id                BigInt
  course_enrolment_periods course_enrolment_periods @relation(fields: [enrolment_period_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "enrolment_period_status_enrolment_period_id")
  pm_grad                  pm_grad                  @relation(fields: [status_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "enrolment_period_status_status_id")

  @@id([enrolment_period_id, status_id])
  @@index([status_id], map: "enrolment_period_status_status_id")
}

model entity_log {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @db.DateTime(0)
  creator_id BigInt
  log_type   BigInt
  entity_id  BigInt?
  log_name   String?  @db.VarChar(255)
}

model entity_log_value {
  id                BigInt  @id @default(autoincrement())
  entity_log_id     BigInt
  property_name     String? @db.VarChar(255)
  old_value         String? @db.VarChar(255)
  new_value         String? @db.VarChar(255)
  association_group BigInt?
}

model erfahrungen {
  id                             BigInt       @id @unique(map: "id") @default(autoincrement())
  dat_beruf_id                   BigInt       @default(0)
  pid                            BigInt       @default(0)
  typ                            Int          @default(0)
  erfahrungstyp                  Int?         @db.TinyInt
  affiliate                      Boolean      @default(false)
  von                            DateTime?    @db.Date
  von_datum                      DateTime     @default(dbgenerated("'0000-00-00'")) @db.Date
  bis                            DateTime?    @db.Date
  bis_datum                      DateTime     @default(dbgenerated("'0000-00-00'")) @db.Date
  firmenid                       BigInt       @default(0)
  firma_alt                      String?      @db.VarChar(50)
  sector                         String?      @db.VarChar(255)
  anstellung                     String?      @db.VarChar(255)
  bereich                        Int          @default(0)
  firma                          String?      @db.VarChar(255)
  kommentar                      String?      @db.Text
  leitend                        Boolean      @default(false)
  status                         Int          @default(0)
  pm_fieldsid                    BigInt       @default(0)
  company_address_id             BigInt?
  abteilung                      String?      @db.VarChar(255)
  position                       String?      @db.VarChar(255)
  raum                           String?      @db.VarChar(255)
  status_position                Int?         @default(0)
  company_advisor                String?      @db.VarChar(100)
  supervisor                     String?      @db.VarChar(100)
  link_to_internship             String?      @db.VarChar(255)
  contact_person_internship      String?      @db.VarChar(255)
  contact_person_career_day      String?      @db.VarChar(255)
  contact_person_career_day_year String?      @db.VarChar(100)
  ansprechpartner                Boolean      @default(false)
  pm_fieldsid_old                BigInt       @default(0)
  companyname                    String?      @db.VarChar(255)
  stellenid                      BigInt?
  cv_type                        BigInt?
  profil                         profil       @relation(fields: [pid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_experience_profile")
  internship                     internship[]
  submission                     submission[]

  @@index([firmenid, pid, bis], map: "active_experience")
  @@index([bereich], map: "bereich")
  @@index([firmenid], map: "firmenid")
  @@index([id], map: "id_2")
  @@index([pid], map: "pid")
  @@index([pid, firmenid], map: "pid_2")
  @@index([pm_fieldsid], map: "pm_fieldsid")
}

model event_attendance_class_book_entries {
  event_date_id BigInt     @id @default(0)
  comment       String?    @db.Text
  event_date    event_date @relation(fields: [event_date_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_attendance_class_book_entries_ibfk_1")
}

model event_attendance_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model event_conflict_job_queue {
  id                  BigInt    @id @default(autoincrement())
  run_status          Int       @default(0) @db.TinyInt
  event_conflict_date DateTime  @db.DateTime(0)
  rollback_count      Int       @default(0) @db.TinyInt
  create_date_time    DateTime  @db.DateTime(0)
  start_date_time     DateTime? @db.DateTime(0)
  done_date_time      DateTime? @db.DateTime(0)
}

model event_custom_event_type {
  id                      BigInt                    @id @default(autoincrement())
  color_id                BigInt
  label_de                String                    @db.VarChar(255)
  label_en                String                    @db.VarChar(255)
  visibility              BigInt
  based_on_type           BigInt
  position                BigInt?
  system_type             Int                       @default(0) @db.SmallInt
  assessment_day_settings assessment_day_settings[]
}

model event_date {
  id                                  BigInt                               @id @default(autoincrement())
  event_series_id                     BigInt
  start_time                          DateTime                             @db.Time(0)
  end_time                            DateTime                             @db.Time(0)
  date                                DateTime                             @db.Date
  planning_status_id                  BigInt
  all_day                             Boolean                              @default(false)
  comment                             String?                              @db.Text
  title                               String?                              @db.VarChar(255)
  lecture_series_part_id              BigInt?
  teaching_units                      Float?                               @db.Float
  exam_series_id                      BigInt?
  office_365_event_id                 String?                              @db.VarChar(255)
  office_365_create_date              DateTime?                            @db.DateTime(0)
  office_365_update_date              DateTime?                            @db.DateTime(0)
  office_365_create_count             BigInt                               @default(0)
  office_365_update_count             BigInt                               @default(0)
  custom_event_type_id                BigInt
  office365_setting_id                BigInt?
  created_at                          DateTime                             @default(dbgenerated("'2020-01-01 00:00:00'")) @db.DateTime(0)
  edited_at                           DateTime?                            @default(now()) @db.Timestamp(0)
  is_read_only                        Int                                  @default(0) @db.TinyInt
  read_only_type                      String?                              @db.VarChar(255)
  participant_cache_valide_until      DateTime?                            @db.Timestamp(0)
  last_conflict_check_timestamp       DateTime?                            @db.Timestamp(0)
  custom_id                           String?                              @db.VarChar(255)
  link                                String?                              @db.Text
  event_attendance_class_book_entries event_attendance_class_book_entries?
  event_date_conflict_time_slot       event_date_conflict_time_slot[]
  event_date_participant_cache        event_date_participant_cache[]

  @@index([event_series_id], map: "idx_event_series_id")
}

model event_date_absence {
  event_date_id      BigInt
  profile_id         BigInt   @default(0)
  excused            Boolean  @default(false)
  absence_start_time DateTime @db.Time(0)
  absence_end_time   DateTime @db.Time(0)
  is_partial_absent  Int      @default(0) @db.TinyInt

  @@id([event_date_id, profile_id])
}

model event_date_absence_capture {
  event_date_id BigInt    @id
  status        Int?
  created_at    DateTime? @db.DateTime(0)
  updated_at    DateTime? @db.DateTime(0)
}

model event_date_absence_comment {
  event_date_id BigInt
  profile_id    BigInt
  comment       String? @db.VarChar(255)

  @@id([event_date_id, profile_id])
}

model event_date_conflict_index {
  event_date_id                        BigInt
  event_date_conflict_index_version_id BigInt
  date                                 DateTime @db.Date
  conflict_type                        Int      @default(0) @db.TinyInt
  authorized                           Int?     @db.TinyInt

  @@id([conflict_type, event_date_id, event_date_conflict_index_version_id])
  @@index([event_date_id], map: "idx_event_date_id")
}

model event_date_conflict_index_version {
  id          BigInt   @id @default(autoincrement())
  create_date DateTime @db.DateTime(0)
  is_active   Boolean  @default(true)
}

model event_date_conflict_time_slot {
  event_date_id            BigInt
  conflicted_event_date_id BigInt
  authorized               Boolean    @default(false)
  event_date               event_date @relation(fields: [event_date_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_date_conflict_time_slot_conflicted_event_date")

  @@id([event_date_id, conflicted_event_date_id])
}

model event_date_lecturer {
  event_date_id BigInt
  profile_id    BigInt
  profil        profil @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_date_lecturer_profil_profile_id")

  @@id([event_date_id, profile_id])
  @@index([profile_id], map: "event_date_lecturer_profil_profile_id")
}

model event_date_participant {
  event_date_id BigInt
  profile_id    BigInt
  profil        profil @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_date_participant_profile_id")

  @@id([event_date_id, profile_id])
  @@index([profile_id], map: "event_date_participant_profile_id")
}

model event_date_participant_cache {
  profile_id    BigInt
  event_date_id BigInt
  first_name    String     @db.VarChar(255)
  last_name     String     @db.VarChar(255)
  booking_id    BigInt?
  timestamp     DateTime   @default(now()) @db.Timestamp(0)
  event_date    event_date @relation(fields: [event_date_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_event_date_cache_event_date_id")

  @@id([profile_id, event_date_id, timestamp])
  @@index([event_date_id], map: "idx_participant_cache_event_date_id")
  @@index([timestamp], map: "idx_participant_cache_timestamp")
}

model event_date_planning_group {
  event_date_id     BigInt
  planning_group_id BigInt
  planning_group    planning_group @relation(fields: [planning_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_date_planning_group_planning_group_id")

  @@id([event_date_id, planning_group_id])
  @@index([planning_group_id], map: "event_date_planning_group_planning_group_id")
}

model event_date_room {
  event_date_id BigInt
  room_id       BigInt
  pm_raeume     pm_raeume @relation(fields: [room_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_date_room_room_id")

  @@id([event_date_id, room_id])
  @@index([room_id], map: "event_date_room_room_id")
}

model event_date_timetable {
  id                         BigInt   @id @default(autoincrement())
  name                       String?  @db.VarChar(255)
  is_default                 Boolean
  create_date                DateTime @db.Date
  lecture_unit_minutes       Int      @default(45)
  default_lecture_unit_count Float    @default(2.000) @db.Float
}

model event_date_timetable_site {
  event_date_timetable_id BigInt
  site_id                 BigInt

  @@id([event_date_timetable_id, site_id])
}

model event_date_timetable_time_span {
  id                      BigInt   @id @default(autoincrement())
  event_date_timetable_id BigInt
  from                    DateTime @db.Time(0)
  to                      DateTime @db.Time(0)
  teaching_units          Float    @default(1) @db.Float
}

model event_ical_token {
  profile_id        BigInt    @id
  token             String    @db.VarChar(255)
  cache             String?   @db.LongText
  cache_last_update DateTime? @db.DateTime(0)
}

model event_participant_conflict_index {
  event_date_id                               BigInt
  profile_id                                  BigInt
  event_participant_conflict_index_version_id BigInt
  date                                        DateTime @db.Date

  @@id([event_date_id, profile_id, event_participant_conflict_index_version_id])
}

model event_participant_conflict_index_version {
  id          BigInt   @id @default(autoincrement())
  create_date DateTime @db.DateTime(0)
  is_active   Boolean  @default(true)
}

model event_planer_assessment_day_setting {
  id                   BigInt  @id @default(autoincrement())
  planning_status_id   BigInt?
  custom_event_type_id BigInt?
}

model event_planer_setting {
  id                                  BigInt                      @id @default(autoincrement())
  name                                String?                     @db.VarChar(255)
  range_begin                         Int                         @db.SmallInt
  range_end                           Int                         @db.SmallInt
  first_week_day                      Int                         @db.SmallInt
  event_template                      String?                     @db.VarChar(255)
  is_default                          Boolean                     @default(false)
  event_tooltip_template              String?                     @db.Text
  capacity_conflict                   Int?                        @default(0) @db.SmallInt
  is_calculation_choice_until_default Boolean                     @default(false)
  i_call_event_template               String?                     @db.Text
  default_view_mode                   String?                     @db.VarChar(50)
  period_days                         Int                         @default(90)
  i_cal_event_title_template          String?                     @db.Text
  event_planer_setting_site           event_planer_setting_site[]
}

model event_planer_setting_site {
  event_planer_setting_id BigInt
  site_id                 BigInt
  event_planer_setting    event_planer_setting @relation(fields: [event_planer_setting_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_event_planer_setting_setting_id")
  pm_standorte            pm_standorte         @relation(fields: [site_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_event_planer_setting_site_id")

  @@id([event_planer_setting_id, site_id])
  @@index([site_id], map: "fk_event_planer_setting_site_id")
}

model event_planer_user_setting {
  user_id   BigInt  @id @default(0)
  view_mode String? @db.VarChar(50)
  profil    profil  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_event_planer_user_setting_profile_id")
}

model event_series {
  id                            BigInt                          @id @default(autoincrement())
  planning_status_id            BigInt
  start_time                    DateTime                        @db.Time(0)
  end_time                      DateTime                        @db.Time(0)
  recurrence_type               Int
  event_type_id                 BigInt
  site_id                       BigInt
  event_custom_event_type_id    BigInt?
  all_day                       Boolean                         @default(false)
  planning_year                 Int                             @default(0)
  planning_term                 Int?
  created_profile_id            BigInt?
  custom_id                     String?                         @db.VarChar(255)
  absence                       absence[]
  event_series_custom           event_series_custom?
  event_series_single           event_series_single?
  event_series_weekly           event_series_weekly?
  exam                          exam[]
  noten_pruefungen              noten_pruefungen[]
  noten_pruefungen_acfive_19711 noten_pruefungen_acfive_19711[]
  noten_pruefungen_sub          noten_pruefungen_sub[]
}

model event_series_custom {
  id           BigInt       @id
  event_series event_series @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_series_custom_id")
}

model event_series_lecturer {
  event_series_id BigInt
  profile_id      BigInt
  profil          profil @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_series_lecturer_profil_profile_id")

  @@id([event_series_id, profile_id])
  @@index([profile_id], map: "event_series_lecturer_profil_profile_id")
}

model event_series_log {
  id              BigInt   @id @default(autoincrement())
  event_series_id BigInt?
  date            DateTime @db.DateTime(0)
  ip              String?  @db.VarChar(255)
  author_id       BigInt
  property_name   String?  @db.VarChar(255)
  old_value       String?  @db.Text
  new_value       String?  @db.Text
  type            Int      @db.SmallInt

  @@index([author_id], map: "idx__event_series_log__author_id")
}

model event_series_participant {
  event_series_id BigInt
  profile_id      BigInt
  profil          profil @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_series_participant_profile_id")

  @@id([event_series_id, profile_id])
  @@index([profile_id], map: "event_series_participant_profile_id")
}

model event_series_planning_group {
  event_series_id   BigInt
  planning_group_id BigInt
  planning_group    planning_group @relation(fields: [planning_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_series_planning_group_planning_group_id")

  @@id([event_series_id, planning_group_id])
  @@index([planning_group_id], map: "event_series_planning_group_planning_group_id")
}

model event_series_room {
  event_series_id BigInt
  room_id         BigInt
  pm_raeume       pm_raeume @relation(fields: [room_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_series_room_room_id")

  @@id([event_series_id, room_id])
  @@index([room_id], map: "event_series_room_room_id")
}

model event_series_single {
  id           BigInt       @id
  event_date   DateTime     @db.Date
  event_series event_series @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_series_single_id")
}

model event_series_weekly {
  id                      BigInt       @id
  start_date              DateTime     @db.Date
  end_date                DateTime?    @db.Date
  recurrence_count        Int?         @db.TinyInt
  include_holidays        Boolean      @default(false)
  include_vacation        Boolean      @default(false)
  week_days               String?      @db.VarChar(255)
  include_working_periods Boolean      @default(false)
  weekly_recurrence_type  Int?
  event_series            event_series @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_series_weekly_id")
}

model event_type {
  id                  BigInt               @id @default(autoincrement())
  event_type          Int
  event_type_exam     event_type_exam?
  event_type_lecture  event_type_lecture?
  event_type_singular event_type_singular?
}

model event_type_exam {
  id           BigInt     @id
  exam_id      BigInt
  exam_part_id BigInt?
  event_type   event_type @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_type_exam_id")

  @@index([exam_id], map: "idx_event_type_exam_id")
}

model event_type_lecture {
  id                     BigInt          @id
  course_id              BigInt
  lecture_series_id      BigInt?
  lecture_series_part_id BigInt?
  title                  String?         @db.VarChar(255)
  teaching_units         Float?          @db.Float
  event_type             event_type      @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_type_lecture_id")
  kb_vorlesungen         kb_vorlesungen? @relation(fields: [lecture_series_id], references: [referenzid], onUpdate: NoAction, map: "event_type_lecture_lecture_series_id_kb_vorlesungen_referenzid")

  @@index([lecture_series_id], map: "event_type_lecture_lecture_series_id_kb_vorlesungen_referenzid")
  @@index([course_id], map: "idx_event_type_lecture_course_id")
}

model event_type_singular {
  id         BigInt     @id
  title      String?    @db.VarChar(255)
  event_type event_type @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "event_type_singular_id")
}

model exam {
  id                            BigInt                        @id @default(autoincrement())
  site_id                       BigInt
  participant_presentation_id   BigInt
  exam_type_id                  BigInt
  grading_key_id                BigInt
  status_id                     BigInt
  parent_id                     BigInt?
  commissional                  Int?                          @db.TinyInt
  resit                         Int?                          @db.TinyInt
  module_version_id             BigInt?
  subject_version_id            BigInt?
  year                          Int?
  term                          Int?
  time_table_semester           Int?
  date                          DateTime?                     @db.Date
  created_date                  DateTime?                     @db.Date
  start_time                    DateTime?                     @db.Time(0)
  end_time                      DateTime?                     @db.Time(0)
  duration                      Int?
  max_points                    Float?                        @db.Float
  weighting                     Float?                        @db.Float
  online_enrolment              Int?                          @db.TinyInt
  moodle_transfer               Int?                          @db.TinyInt
  label_de                      String?                       @db.VarChar(255)
  appendix                      String?                       @db.VarChar(255)
  comment                       String?                       @db.Text
  combination_exam              Int?                          @db.TinyInt
  combination_exam_parent_id    BigInt?
  event_series_id               BigInt?
  event_series                  event_series?                 @relation(fields: [event_series_id], references: [id], onUpdate: NoAction, map: "fk_exam_event_series_id")
  noten_pruefungen_typ          noten_pruefungen_typ          @relation(fields: [exam_type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_exam_type_id")
  noten_nkey                    noten_nkey                    @relation(fields: [grading_key_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_grading_key_id")
  exam_participant_presentation exam_participant_presentation @relation(fields: [participant_presentation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_participant_presentation_id")
  pm_standorte                  pm_standorte                  @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_site_id")
  exam_status                   exam_status                   @relation(fields: [status_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_status_id")

  @@index([event_series_id], map: "fk_exam_event_series_id")
  @@index([exam_type_id], map: "fk_exam_exam_type_id")
  @@index([grading_key_id], map: "fk_exam_grading_key_id")
  @@index([participant_presentation_id], map: "fk_exam_participant_presentation_id")
  @@index([site_id], map: "fk_exam_site_id")
  @@index([status_id], map: "fk_exam_status_id")
}

model exam_approval {
  id                       BigInt                     @id @default(autoincrement())
  label_de                 String?                    @db.VarChar(255)
  label_en                 String?                    @db.VarChar(255)
  exam_relevant            Boolean?                   @default(false)
  exam_partial_performance exam_partial_performance[]
  noten_faecher_desc_parts noten_faecher_desc_parts[]
  noten_select             noten_select[]
}

model exam_assessor {
  exam_id          BigInt
  profile_id       BigInt
  position         Int?             @db.TinyInt
  noten_pruefungen noten_pruefungen @relation(fields: [exam_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_assessor_exam_id")
  profil           profil           @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_assessor_profile_id")

  @@id([exam_id, profile_id])
  @@index([profile_id], map: "fk_exam_assessor_profile_id")
}

model exam_dates {
  id                           BigInt                         @id @default(autoincrement())
  date                         DateTime                       @unique(map: "exam_dates_unique_date") @db.Date
  study_center_exam_dates      study_center_exam_dates[]      @ignore
  study_center_exam_enrolments study_center_exam_enrolments[]
}

model exam_equipment {
  id                           BigInt                         @id @default(autoincrement())
  label_de                     String?                        @db.VarChar(255)
  label_en                     String?                        @db.VarChar(255)
  noten_faecher_desc_equipment noten_faecher_desc_equipment[]
  noten_modul_desc_equipment   noten_modul_desc_equipment[]
}

model exam_lecturer {
  exam_id          BigInt
  profile_id       BigInt
  position         Int?             @db.TinyInt
  noten_pruefungen noten_pruefungen @relation(fields: [exam_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_lecturer_exam_id")
  profil           profil           @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_lecturer_profile_id")

  @@id([exam_id, profile_id])
  @@index([profile_id], map: "fk_exam_lecturer_profile_id")
}

model exam_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model exam_moodle_enrolment {
  exam_id          BigInt
  moodle_exam_id   String           @default("") @db.VarChar(255)
  noten_pruefungen noten_pruefungen @relation(fields: [exam_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_moodle_enrolment_exam_id")

  @@id([exam_id, moodle_exam_id])
}

model exam_part_assessor {
  exam_part_id         BigInt
  profile_id           BigInt
  position             Int                  @db.TinyInt
  noten_pruefungen_sub noten_pruefungen_sub @relation(fields: [exam_part_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_part_assessor_exam_id")
  profil               profil               @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_part_assessor_profile_id")

  @@id([exam_part_id, profile_id])
  @@index([profile_id], map: "fk_exam_part_assessor_profile_id")
}

model exam_partial_performance {
  id                               BigInt                        @id @default(autoincrement())
  exam_type_id                     BigInt
  exam_approval_id                 BigInt
  comment                          String?                       @db.Text
  weighting                        Float?                        @db.Float
  exam_participant_presentation_id BigInt
  exam_valuation_type_id           BigInt
  necessary                        Int?                          @db.TinyInt
  exam_name                        String?                       @db.VarChar(255)
  exam_approval                    exam_approval                 @relation(fields: [exam_approval_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_partial_performance_exam_approval_id")
  exam_participant_presentation    exam_participant_presentation @relation(fields: [exam_participant_presentation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_exam_partial_performance_exam_participant_presentation_id")
  noten_select                     noten_select                  @relation(fields: [exam_type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_partial_performance_exam_type_id")
  exam_valuation_type              exam_valuation_type           @relation(fields: [exam_valuation_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_exam_partial_performance_exam_valuation_type_id")

  @@index([exam_approval_id], map: "fk_exam_partial_performance_exam_approval_id")
  @@index([exam_participant_presentation_id], map: "fk_exam_partial_performance_exam_participant_presentation_id")
  @@index([exam_type_id], map: "fk_exam_partial_performance_exam_type_id")
  @@index([exam_valuation_type_id], map: "fk_exam_partial_performance_exam_valuation_type_id")
}

model exam_participant_presentation {
  id                       BigInt                     @id
  language_key             String                     @db.VarChar(255)
  exam                     exam[]
  exam_partial_performance exam_partial_performance[]
}

model exam_registration_period {
  id                                                                             BigInt                                    @id @default(autoincrement())
  active                                                                         Int                                       @default(1) @db.TinyInt
  semester_id                                                                    BigInt?
  name                                                                           String?                                   @db.VarChar(255)
  type                                                                           Int?                                      @db.TinyInt
  exam_license                                                                   Int?                                      @db.TinyInt
  permanent_registration                                                         Int?                                      @db.TinyInt
  center_selection                                                               Int?                                      @db.TinyInt
  day_end_registration                                                           Int?                                      @db.SmallInt
  day_end_cancellation                                                           Int?                                      @db.SmallInt
  day_end_time                                                                   DateTime?                                 @db.Time(0)
  date_end_cancellation                                                          DateTime?                                 @db.Date
  date_end_registration                                                          DateTime?                                 @db.Date
  date_start_registration                                                        DateTime?                                 @db.Date
  date_end_last_registration                                                     DateTime?                                 @db.Date
  date_start_re_registration                                                     DateTime?                                 @db.Date
  date_end_re_registration                                                       DateTime?                                 @db.Date
  date_exam                                                                      DateTime?                                 @db.Date
  date_release                                                                   DateTime?                                 @db.Date
  date_publish                                                                   DateTime?                                 @db.Date
  text_draft_id_confirmation_de                                                  BigInt?
  text_draft_id_confirmation_en                                                  BigInt?
  text_draft_id_cancellation_de                                                  BigInt?
  text_draft_id_cancellation_en                                                  BigInt?
  info_text_de                                                                   String?                                   @db.Text
  info_text_en                                                                   String?                                   @db.Text
  info_text_last_registration_de                                                 String?                                   @db.Text
  info_text_last_registration_en                                                 String?                                   @db.Text
  text_draft_id_online_confirmation_de                                           BigInt?
  text_draft_id_online_confirmation_en                                           BigInt?
  text_draft_id_online_cancellation_de                                           BigInt?
  text_draft_id_online_cancellation_en                                           BigInt?
  bcc_email                                                                      String?                                   @db.VarChar(255)
  exam_block_de                                                                  String?                                   @db.Text
  exam_block_en                                                                  String?                                   @db.Text
  semester_count_for_same_lecturer                                               Int                                       @default(1) @db.SmallInt
  student_exam_selection                                                         Boolean                                   @default(false)
  nl_text_exam_registration_period_text_draft_id_cancellation_deTonl_text        nl_text?                                  @relation("exam_registration_period_text_draft_id_cancellation_deTonl_text", fields: [text_draft_id_cancellation_de], references: [id], map: "text_draft_id_cancellation_de_foreign_key")
  nl_text_exam_registration_period_text_draft_id_cancellation_enTonl_text        nl_text?                                  @relation("exam_registration_period_text_draft_id_cancellation_enTonl_text", fields: [text_draft_id_cancellation_en], references: [id], map: "text_draft_id_cancellation_en_foreign_key")
  nl_text_exam_registration_period_text_draft_id_confirmation_deTonl_text        nl_text?                                  @relation("exam_registration_period_text_draft_id_confirmation_deTonl_text", fields: [text_draft_id_confirmation_de], references: [id], map: "text_draft_id_confirmation_de_foreign_key")
  nl_text_exam_registration_period_text_draft_id_confirmation_enTonl_text        nl_text?                                  @relation("exam_registration_period_text_draft_id_confirmation_enTonl_text", fields: [text_draft_id_confirmation_en], references: [id], map: "text_draft_id_confirmation_en_foreign_key")
  nl_text_exam_registration_period_text_draft_id_online_cancellation_deTonl_text nl_text?                                  @relation("exam_registration_period_text_draft_id_online_cancellation_deTonl_text", fields: [text_draft_id_online_cancellation_de], references: [id], map: "text_draft_id_online_cancellation_de_foreign_key")
  nl_text_exam_registration_period_text_draft_id_online_cancellation_enTonl_text nl_text?                                  @relation("exam_registration_period_text_draft_id_online_cancellation_enTonl_text", fields: [text_draft_id_online_cancellation_en], references: [id], map: "text_draft_id_online_cancellation_en_foreign_key")
  nl_text_exam_registration_period_text_draft_id_online_confirmation_deTonl_text nl_text?                                  @relation("exam_registration_period_text_draft_id_online_confirmation_deTonl_text", fields: [text_draft_id_online_confirmation_de], references: [id], map: "text_draft_id_online_confirmation_de_foreign_key")
  nl_text_exam_registration_period_text_draft_id_online_confirmation_enTonl_text nl_text?                                  @relation("exam_registration_period_text_draft_id_online_confirmation_enTonl_text", fields: [text_draft_id_online_confirmation_en], references: [id], map: "text_draft_id_online_confirmation_en_foreign_key")
  exam_registration_period_booking_status                                        exam_registration_period_booking_status[]
  exam_registration_period_sites                                                 exam_registration_period_sites[]          @ignore
  exam_special_period                                                            exam_special_period[]

  @@index([text_draft_id_cancellation_de], map: "text_draft_id_cancellation_de_foreign_key")
  @@index([text_draft_id_cancellation_en], map: "text_draft_id_cancellation_en_foreign_key")
  @@index([text_draft_id_confirmation_de], map: "text_draft_id_confirmation_de_foreign_key")
  @@index([text_draft_id_confirmation_en], map: "text_draft_id_confirmation_en_foreign_key")
  @@index([text_draft_id_online_cancellation_de], map: "text_draft_id_online_cancellation_de_foreign_key")
  @@index([text_draft_id_online_cancellation_en], map: "text_draft_id_online_cancellation_en_foreign_key")
  @@index([text_draft_id_online_confirmation_de], map: "text_draft_id_online_confirmation_de_foreign_key")
  @@index([text_draft_id_online_confirmation_en], map: "text_draft_id_online_confirmation_en_foreign_key")
}

model exam_registration_period_booking_status {
  exam_registration_period_id BigInt
  booking_status_id           BigInt
  pm_grad                     pm_grad                  @relation(fields: [booking_status_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "exam_registration_period_booking_status_ibfk_2")
  exam_registration_period    exam_registration_period @relation(fields: [exam_registration_period_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "exam_registration_period_booking_status_ibfk_1")

  @@id([exam_registration_period_id, booking_status_id])
  @@index([booking_status_id], map: "mm_erpbs_bs_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model exam_registration_period_sites {
  exam_registration_period_id BigInt
  site_id                     BigInt
  exam_registration_period    exam_registration_period @relation(fields: [exam_registration_period_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "exam_registration_period_sites_ibfk_2")
  pm_standorte                pm_standorte             @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "exam_registration_period_sites_ibfk_1")

  @@index([exam_registration_period_id], map: "exam_registration_period_id")
  @@index([site_id], map: "site_id")
  @@ignore
}

model exam_special_period {
  id                          BigInt                   @id @default(autoincrement())
  exam_registration_period_id BigInt
  name                        String                   @db.VarChar(255)
  date_start_registration     DateTime                 @db.Date
  date_end_registration       DateTime                 @db.Date
  date_end_last_registration  DateTime?                @db.Date
  date_end_cancellation       DateTime?                @db.Date
  exam_registration_period    exam_registration_period @relation(fields: [exam_registration_period_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "exam_special_period_ibfk_1")
  noten_pruefungen            noten_pruefungen[]

  @@index([exam_registration_period_id], map: "exam_registration_period_id")
}

model exam_status {
  id               BigInt             @id @default(autoincrement())
  label_de         String?            @db.VarChar(255)
  label_en         String?            @db.VarChar(255)
  filled           Boolean?           @default(false)
  released         Boolean?           @default(false)
  published        Boolean?           @default(false)
  color_id         BigInt?
  color            color?             @relation(fields: [color_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_status_color_id")
  exam             exam[]
  noten_pruefungen noten_pruefungen[]

  @@index([color_id], map: "fk_exam_status_color_id")
}

model exam_study_program {
  exam_id          BigInt
  study_program_id BigInt
  noten_pruefungen noten_pruefungen @relation(fields: [exam_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_study_program_noten_pruefungen_id")
  studium          studium          @relation(fields: [study_program_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_exam_study_program_studium_id")

  @@id([exam_id, study_program_id])
  @@index([study_program_id], map: "fk_exam_study_program_studium_id")
}

model exam_valuation_type {
  id                       BigInt                     @id
  language_key             String                     @db.VarChar(255)
  exam_partial_performance exam_partial_performance[]
  noten_submission_partial noten_submission_partial[]
}

model failed_login_log {
  id         BigInt   @id @default(autoincrement())
  datetime   DateTime @db.DateTime(0)
  username   String   @db.VarChar(255)
  ip_address String   @db.VarChar(255)

  @@index([datetime], map: "idx_datetime")
}

model filter_configuration {
  id            BigInt   @id @default(autoincrement())
  name          String?  @db.VarChar(255)
  table_id      String?  @db.VarChar(255)
  owner_id      BigInt
  filter_values String?  @db.Text
  columns       String?  @db.Text
  public        Boolean?
  profil        profil   @relation(fields: [owner_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "filter_configuration_ibfk_1")

  @@index([owner_id], map: "owner_id")
}

model filter_manager {
  id                    BigInt                  @id @default(autoincrement())
  profile_id            BigInt
  list_name             String?                 @db.VarChar(255)
  profil                profil                  @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_filter_manager_profile_id")
  filter_manager_filter filter_manager_filter[]

  @@unique([profile_id, list_name], map: "uk_profile_id_list_name")
}

model filter_manager_filter {
  filter_manager_id BigInt
  filter_name       String         @default("") @db.VarChar(255)
  filter_manager    filter_manager @relation(fields: [filter_manager_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_filter_manager_filter_configuration_id")

  @@id([filter_manager_id, filter_name])
}

model finance_basic_payment_model {
  id                           BigInt    @id @default(autoincrement())
  name                         String?   @db.VarChar(255)
  description                  String?   @db.Text
  application_fee              Decimal?  @db.Decimal(10, 2)
  price                        Decimal?  @db.Decimal(10, 2)
  deposit                      Decimal?  @db.Decimal(10, 2)
  installment_number           Int?
  installment_amount           Decimal?  @db.Decimal(10, 2)
  total_amount                 Decimal?  @db.Decimal(10, 2)
  swap_percent                 Decimal?  @db.Decimal(10, 2)
  swap_amount                  Decimal?  @db.Decimal(10, 2)
  bank_guaranty                Decimal?  @db.Decimal(10, 2)
  examination_fee              Decimal?  @db.Decimal(10, 2)
  early_booking_discount       Decimal?  @db.Decimal(10, 2)
  valid_from                   DateTime? @db.Date
  valid_until                  DateTime? @db.Date
  active                       Boolean?
  notice                       String?   @db.Text
  editable                     Boolean?
  payment_objective_id         BigInt?
  examination_fee_external_tax Decimal?  @db.Decimal(10, 2)
  early_booking_percent        Decimal?  @db.Decimal(10, 2)
  tax                          Decimal?  @db.Decimal(10, 2)
  discount_per_installment     Decimal?  @db.Decimal(10, 2)
  total_discount               Decimal?  @db.Decimal(10, 2)
}

model finance_basic_payment_model_cohort {
  cohort_id        BigInt
  payment_model_id BigInt

  @@id([cohort_id, payment_model_id])
}

model finance_basic_payment_model_tag {
  tag_id           BigInt
  payment_model_id BigInt

  @@id([tag_id, payment_model_id])
}

model finance_basic_payment_objective {
  id       BigInt  @id @default(autoincrement())
  label_de String? @db.Text
  label_en String? @db.Text
}

model finance_basic_payment_profile_booking {
  profile_booking_id           BigInt    @id
  payment_model_id             BigInt
  name                         String?   @db.VarChar(255)
  description                  String?   @db.Text
  application_fee              Decimal?  @db.Decimal(10, 2)
  price                        Decimal?  @db.Decimal(10, 2)
  deposit                      Decimal?  @db.Decimal(10, 2)
  installment_number           Int?
  installment_amount           Decimal?  @db.Decimal(10, 2)
  total_amount                 Decimal?  @db.Decimal(10, 2)
  swap_percent                 Decimal?  @db.Decimal(10, 2)
  swap_amount                  Decimal?  @db.Decimal(10, 2)
  bank_guaranty                Decimal?  @db.Decimal(10, 2)
  examination_fee              Decimal?  @db.Decimal(10, 2)
  early_booking_discount       Decimal?  @db.Decimal(10, 2)
  valid_from                   DateTime? @db.Date
  valid_until                  DateTime? @db.Date
  notice                       String?   @db.Text
  payment_objective_id         BigInt?
  examination_fee_external_tax Decimal?  @db.Decimal(10, 2)
  early_booking_percent        Decimal?  @db.Decimal(10, 2)
  tax                          Decimal?  @db.Decimal(10, 2)
  discount_per_installment     Decimal?  @db.Decimal(10, 2)
  total_discount               Decimal?  @db.Decimal(10, 2)
}

model finance_basic_payment_tag {
  id    BigInt @id @default(autoincrement())
  label String @db.VarChar(255)
}

model finance_currency {
  id       BigInt  @id @default(autoincrement())
  code     String? @db.VarChar(255)
  label_de String? @db.VarChar(255)
  label_en String? @db.VarChar(255)
  symbol   String? @db.VarChar(255)
}

model finance_discount {
  id               BigInt   @id @default(autoincrement())
  label_de         String?  @db.VarChar(255)
  label_en         String?  @db.VarChar(255)
  description      String?  @db.Text
  type             String?  @db.Char(1)
  discount_percent Decimal? @db.Decimal(10, 2)
  discount_fix     Decimal? @db.Decimal(10, 2)
}

model financial_bank_account {
  id             BigInt  @id @default(autoincrement())
  iban           String? @db.VarChar(255)
  bic            String? @db.VarChar(255)
  bank_name      String? @db.VarChar(255)
  account_holder String? @db.VarChar(255)
  site_id        BigInt?
  label          String? @db.VarChar(255)
}

model financial_cohort_invoice_data_company {
  id               BigInt         @id @default(autoincrement())
  booking_id       BigInt
  percentage_share Float          @db.Float
  company_id       BigInt
  address_id       BigInt?
  pm_fields        pm_fields?     @relation(fields: [address_id], references: [id], onUpdate: NoAction, map: "fk_cohort_invoice_data_company_address_id")
  profil_studium   profil_studium @relation(fields: [booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cohort_invoice_data_company_booking_id")
  firma            firma          @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cohort_invoice_data_company_company_id")

  @@index([address_id], map: "fk_cohort_invoice_data_company_address_id")
  @@index([booking_id], map: "fk_cohort_invoice_data_company_booking_id")
  @@index([company_id], map: "fk_cohort_invoice_data_company_company_id")
}

model financial_cohort_invoice_data_profile {
  id               BigInt         @id @default(autoincrement())
  booking_id       BigInt
  percentage_share Float          @db.Float
  profile_id       BigInt
  address_id       BigInt?
  pm_fields        pm_fields?     @relation(fields: [address_id], references: [id], onUpdate: NoAction, map: "fk_cohort_invoice_data_profile_address_id")
  profil_studium   profil_studium @relation(fields: [booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cohort_invoice_data_profile_booking_id")
  profil           profil         @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cohort_invoice_data_profile_profile_id")

  @@index([address_id], map: "fk_cohort_invoice_data_profile_address_id")
  @@index([booking_id], map: "fk_cohort_invoice_data_profile_booking_id")
  @@index([profile_id], map: "fk_cohort_invoice_data_profile_profile_id")
}

model financial_collective_invoice {
  id           BigInt   @id @default(autoincrement())
  profile_id   BigInt
  created_date DateTime @db.Date
  site_id      BigInt
}

model financial_course_invoice_data_company {
  ticket_id              BigInt
  amount                 Float                  @db.Float
  address_id             BigInt?
  company_id             BigInt
  invoice_id             BigInt?
  id                     BigInt                 @id @default(autoincrement())
  pm_fields              pm_fields?             @relation(fields: [address_id], references: [id], onUpdate: NoAction, map: "financial_course_invoice_data_company_address")
  firma                  firma                  @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "financial_course_invoice_data_company_company")
  financial_invoice      financial_invoice?     @relation(fields: [invoice_id], references: [id], onUpdate: NoAction, map: "financial_course_invoice_data_company_invoice")
  kb_kursangebot_tickets kb_kursangebot_tickets @relation(fields: [ticket_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "financial_course_invoice_data_company_ticket")

  @@unique([ticket_id, company_id], map: "unique_ticket_id_company_id")
  @@index([address_id], map: "financial_course_invoice_data_company_address")
  @@index([company_id], map: "financial_course_invoice_data_company_company")
  @@index([invoice_id], map: "financial_course_invoice_data_company_invoice")
}

model financial_course_invoice_data_profile {
  ticket_id              BigInt
  amount                 Float                  @db.Float
  address_id             BigInt?
  profile_id             BigInt
  invoice_id             BigInt?
  id                     BigInt                 @id @default(autoincrement())
  pm_fields              pm_fields?             @relation(fields: [address_id], references: [id], onUpdate: NoAction, map: "financial_course_invoice_data_profile_address")
  financial_invoice      financial_invoice?     @relation(fields: [invoice_id], references: [id], onUpdate: NoAction, map: "financial_course_invoice_data_profile_invoice")
  profil                 profil                 @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "financial_course_invoice_data_profile_profile")
  kb_kursangebot_tickets kb_kursangebot_tickets @relation(fields: [ticket_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "financial_course_invoice_data_profile_ticket")

  @@unique([ticket_id, profile_id], map: "unique_ticket_id_profile_id")
  @@index([address_id], map: "financial_course_invoice_data_profile_address")
  @@index([invoice_id], map: "financial_course_invoice_data_profile_invoice")
  @@index([profile_id], map: "financial_course_invoice_data_profile_profile")
}

model financial_currency {
  id                        BigInt                      @id @default(autoincrement())
  code                      String?                     @db.VarChar(255)
  label_de                  String?                     @db.VarChar(255)
  label_en                  String?                     @db.VarChar(255)
  symbol                    String?                     @db.VarChar(255)
  color                     String?                     @db.VarChar(20)
  kb_kursangebot            kb_kursangebot[]
  research_project_partners research_project_partners[]
  seminar                   seminar[]
}

model financial_document_template {
  status_id   BigInt
  document_id BigInt

  @@id([status_id, document_id])
}

model financial_installment {
  id                                  BigInt    @id @default(autoincrement())
  profile_id                          BigInt
  booking_id                          BigInt
  amount                              Decimal   @db.Decimal(10, 2)
  due_date                            DateTime? @db.Date
  address_id                          BigInt?
  currency_id                         BigInt?
  deleted                             Boolean?
  bank_account_id                     BigInt?
  profit_center_id                    BigInt?
  site_id                             BigInt?
  show_recipient                      Boolean   @default(true)
  confirmation_of_payment_document_id BigInt?
  year                                Int?      @db.SmallInt
  term                                Int?      @db.SmallInt
  trigger_re_registration             Boolean   @default(false)
  financial_payment_model_id          BigInt?
  is_split_invoice                    Boolean   @default(false)
}

model financial_installment_copy06032020 {
  id                                  BigInt             @id @default(autoincrement())
  profile_id                          BigInt
  booking_id                          BigInt
  invoice_id                          BigInt?
  amount                              Decimal            @db.Decimal(10, 2)
  due_date                            DateTime?          @db.Date
  address_id                          BigInt?
  currency_id                         BigInt?
  deleted                             Boolean?
  bank_account_id                     BigInt?
  profit_center_id                    BigInt?
  site_id                             BigInt?
  show_recipient                      Boolean            @default(true)
  confirmation_of_payment_document_id BigInt?
  year                                Int?               @db.SmallInt
  term                                Int?               @db.SmallInt
  trigger_re_registration             Boolean            @default(false)
  financial_payment_model_id          BigInt?
  financial_invoice                   financial_invoice? @relation(fields: [invoice_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "financial_installment_copy06032020_ibfk_1")

  @@index([invoice_id], map: "xx")
}

model financial_installment_position {
  id             BigInt   @id @default(autoincrement())
  installment_id BigInt
  amount         Decimal? @db.Decimal(10, 2)
  tax_id         BigInt?
  comment        String?  @db.Text
  quantity       Int?
}

model financial_invoice {
  id                                    BigInt                                  @id @default(autoincrement())
  profile_id                            BigInt?
  amount                                Float
  status_id                             Int                                     @db.SmallInt
  invoice_number                        String?                                 @unique(map: "idx_unique_invoice_number") @db.VarChar(255)
  invoice_date                          DateTime?                               @db.Date
  due_date                              DateTime?                               @db.Date
  address_id                            BigInt?
  currency_id                           BigInt?
  bank_account_id                       BigInt?
  created_user_id                       BigInt?
  profit_center_id                      BigInt?
  mail_date                             DateTime?                               @db.Date
  site_id                               BigInt?
  show_recipient                        Boolean                                 @default(true)
  year                                  Int?                                    @db.SmallInt
  term                                  Int?                                    @db.SmallInt
  letter_paper_id                       BigInt?
  trigger_re_registration               Boolean                                 @default(false)
  document_language                     String?                                 @db.VarChar(255)
  invoice_text                          String?                                 @db.Text
  booking_id                            BigInt?
  unpaid_amount                         Float                                   @default(0.00)
  comment                               String?                                 @db.Text
  invoice_document_id                   BigInt?
  confirmation_of_payment_document_id   BigInt?
  invoice_type                          Int                                     @default(1) @db.TinyInt
  is_payment_plan                       Int                                     @default(0) @db.TinyInt
  payment_plan_due_date                 DateTime?                               @db.Date
  payment_plan_count                    Int?                                    @db.TinyInt
  pm_fields                             pm_fields?                              @relation(fields: [address_id], references: [id], onUpdate: NoAction, map: "financial_invoice_profile_address_id")
  profil                                profil?                                 @relation(fields: [profile_id], references: [id], onUpdate: NoAction, map: "financial_invoice_profil_profile_id")
  financial_course_invoice_data_company financial_course_invoice_data_company[]
  financial_course_invoice_data_profile financial_course_invoice_data_profile[]
  financial_installment_copy06032020    financial_installment_copy06032020[]
  financial_invoice_company             financial_invoice_company?

  @@index([profile_id], map: "financial_invoice_profil_profile_id")
  @@index([address_id], map: "financial_invoice_profile_address_id")
}

model financial_invoice_company {
  invoice_id        BigInt            @id
  company_id        BigInt?
  firma             firma?            @relation(fields: [company_id], references: [id], onUpdate: NoAction, map: "fk_financial_invoice_company_company_id")
  financial_invoice financial_invoice @relation(fields: [invoice_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_financial_invoice_company_invoice_id")

  @@index([company_id], map: "fk_financial_invoice_company_company_id")
}

model financial_invoice_copy06032020 {
  id                                  BigInt     @id @default(autoincrement())
  profile_id                          BigInt?
  amount                              Float
  status_id                           Int        @db.SmallInt
  invoice_number                      String?    @db.VarChar(20)
  invoice_date                        DateTime?  @db.Date
  due_date                            DateTime?  @db.Date
  address_id                          BigInt?
  currency_id                         BigInt?
  bank_account_id                     BigInt?
  created_user_id                     BigInt?
  profit_center_id                    BigInt?
  mail_date                           DateTime?  @db.Date
  site_id                             BigInt?
  show_recipient                      Boolean    @default(true)
  year                                Int?       @db.SmallInt
  term                                Int?       @db.SmallInt
  letter_paper_id                     BigInt?
  trigger_re_registration             Boolean    @default(false)
  document_language                   String?    @db.VarChar(255)
  invoice_text                        String?    @db.MediumText
  booking_id                          BigInt?
  unpaid_amount                       Float      @default(0.00)
  comment                             String?    @db.MediumText
  invoice_document_id                 BigInt?
  confirmation_of_payment_document_id BigInt?
  pm_fields                           pm_fields? @relation(fields: [address_id], references: [id], onUpdate: NoAction, map: "financial_invoice_copy06032020_ibfk_1")
  profil                              profil?    @relation(fields: [profile_id], references: [id], onUpdate: NoAction, map: "financial_invoice_copy06032020_ibfk_2")

  @@index([profile_id], map: "financial_invoice_profil_profile_id")
  @@index([address_id], map: "financial_invoice_profile_address_id")
}

model financial_invoice_installment {
  financial_invoice_id     BigInt
  financial_installment_id BigInt

  @@id([financial_invoice_id, financial_installment_id])
}

model financial_invoice_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model financial_invoice_number_setting {
  id                BigInt  @id @default(autoincrement())
  template          String? @db.VarChar(255)
  site_id           BigInt?
  default           Boolean
  position_template String? @db.VarChar(255)
}

model financial_invoice_payment {
  id           BigInt   @id @default(autoincrement())
  amount       Decimal  @db.Decimal(10, 2)
  invoice_id   BigInt
  payment_date DateTime @db.Date
}

model financial_invoice_payment_import {
  id                  BigInt    @id @default(autoincrement())
  created_date        DateTime? @db.Date
  created_profile_id  BigInt?
  reverted_date       DateTime? @db.Date
  reverted_profile_id BigInt?
  site_id             BigInt?
}

model financial_invoice_payment_import_match {
  id                    BigInt  @id @default(autoincrement())
  payment_import_row_id BigInt
  invoice_id            BigInt
  invoice_payment_id    BigInt?
  cancelled             Boolean
}

model financial_invoice_payment_import_row {
  id                        BigInt    @id @default(autoincrement())
  invoice_payment_import_id BigInt
  currency_id               BigInt?
  date                      DateTime? @db.Date
  text                      String?   @db.Text
  amount                    Decimal?  @db.Decimal(10, 2)
  canceled_date             DateTime? @db.Date
}

model financial_invoice_position {
  id          BigInt   @id @default(autoincrement())
  invoice_id  BigInt
  amount      Decimal? @db.Decimal(10, 2)
  tax_id      BigInt?
  comment     String?  @db.Text
  quantity    Int?
  delete_able Boolean  @default(true)
}

model financial_invoice_status {
  id       Int     @id @default(autoincrement())
  labelKey String? @db.VarChar(50)
  color    String? @db.VarChar(20)
  position Int?
}

model financial_payment_model {
  id                      BigInt    @id @default(autoincrement())
  study_program_id        BigInt?
  label                   String?   @db.VarChar(150)
  valid_until             DateTime? @db.Date
  currency_id             BigInt?
  bank_account_id         BigInt?
  profit_center_id        BigInt?
  site_id                 BigInt
  trigger_re_registration Boolean   @default(false)
  booking_type            String?   @db.VarChar(255)
  booking_status_id       BigInt?
  studium                 studium?  @relation(fields: [study_program_id], references: [id], onUpdate: NoAction, map: "financial_payment_model_studium_id")

  @@index([study_program_id], map: "financial_payment_model_studium_id")
}

model financial_payment_model_installment {
  id                                           BigInt                                         @id @default(autoincrement())
  payment_model_id                             BigInt
  entity_type                                  String?                                        @db.VarChar(255)
  confirmation_of_payment_document_id          BigInt?
  financial_payment_model_installment_day      financial_payment_model_installment_day?
  financial_payment_model_installment_month    financial_payment_model_installment_month?
  financial_payment_model_installment_position financial_payment_model_installment_position[]
  financial_payment_model_installment_semester financial_payment_model_installment_semester?
}

model financial_payment_model_installment_day {
  id                                  BigInt                              @id
  days                                Int
  start_date_type                     Int
  financial_payment_model_installment financial_payment_model_installment @relation(fields: [id], references: [id], onDelete: Cascade, map: "financial_payment_model_installment_day_ibfk_1")
}

model financial_payment_model_installment_month {
  id                                  BigInt                              @id
  month_delay                         Int
  executions                          Int
  start_date_type                     Int
  day_of_month                        Int
  last_day_of_month                   Boolean
  financial_payment_model_installment financial_payment_model_installment @relation(fields: [id], references: [id], onDelete: Cascade, map: "financial_payment_model_installment_month_ibfk_1")
}

model financial_payment_model_installment_position {
  id                                  BigInt                              @id @default(autoincrement())
  amount                              Decimal?                            @db.Decimal(10, 2)
  quantity                            Int?
  tax_id                              BigInt?
  comment                             String?                             @db.Text
  payment_model_installment_id        BigInt
  financial_payment_model_installment financial_payment_model_installment @relation(fields: [payment_model_installment_id], references: [id], onDelete: Cascade, map: "financial_payment_model_installment_position_ibfk_1")

  @@index([payment_model_installment_id], map: "payment_model_installment_id")
}

model financial_payment_model_installment_semester {
  id                                  BigInt                              @id
  semester_delay                      Int
  executions                          Int
  due_date_type                       Int
  absolute_start_year                 BigInt?
  absolute_start_term                 BigInt?
  due_date_day                        Int
  financial_payment_model_installment financial_payment_model_installment @relation(fields: [id], references: [id], onDelete: Cascade, map: "financial_payment_model_installment_semester_ibfk_1")
}

model financial_payment_model_installment_semester_applicant {
  id                   BigInt @id
  start_from           Int
  start_term           Int?
  start_year           Int?
  days_before_semester Int
}

model financial_payment_model_study_program {
  payment_model_id BigInt
  study_program_id BigInt

  @@id([payment_model_id, study_program_id])
}

model financial_profit_center {
  id                  BigInt           @id @default(autoincrement())
  name                String?          @db.VarChar(255)
  invoice_number_part String?          @db.VarChar(50)
  kb_kursangebot      kb_kursangebot[]
}

model financial_profit_center_site {
  profit_center_id BigInt
  site_id          BigInt

  @@id([profit_center_id, site_id])
}

model financial_profit_center_study_program {
  profit_center_id BigInt
  study_program_id BigInt

  @@id([profit_center_id, study_program_id])
}

model financial_settings {
  id                    BigInt  @id @default(autoincrement())
  invoice_number        BigInt
  invoice_number_prefix String? @db.VarChar(20)
}

model financial_settings_letter_paper {
  id          BigInt  @id @default(autoincrement())
  site_id     BigInt?
  label       String? @db.VarChar(100)
  filename_en String? @db.VarChar(50)
  filename_de String? @db.VarChar(50)
}

model financial_tax {
  id        BigInt   @id @default(autoincrement())
  label     String?  @db.VarChar(255)
  value     Decimal? @db.Decimal(10, 2)
  is_active Boolean  @default(true)
}

model firma {
  id                                    BigInt                                  @id @default(autoincrement())
  parent                                BigInt                                  @default(0)
  name                                  String?                                 @db.VarChar(255)
  name2                                 String?                                 @db.VarChar(255)
  name3                                 String?                                 @db.VarChar(255)
  abkuerzung                            String?                                 @db.VarChar(24)
  uebersetzung                          String?                                 @db.VarChar(255)
  keyaccount                            BigInt                                  @default(0)
  logo_job_center                       BigInt?
  telefon                               String?                                 @db.VarChar(32)
  telefax                               String?                                 @db.VarChar(32)
  email                                 String?                                 @db.VarChar(64)
  land                                  BigInt?
  land_alt                              Int                                     @default(0)
  internet                              String?                                 @db.VarChar(255)
  branche                               Int                                     @default(0)
  kategorie                             Int                                     @default(0)
  berater                               BigInt                                  @default(0)
  bearbeiter                            BigInt?
  key_institute                         BigInt?
  bemerkung                             String?                                 @db.Text
  aktiv                                 Boolean?
  strasse                               String?                                 @db.VarChar(255)
  plz                                   String?                                 @db.VarChar(20)
  ort                                   String?                                 @db.VarChar(255)
  ortszusatz                            String?                                 @db.VarChar(255)
  strasse2                              String?                                 @db.VarChar(255)
  freigegeben                           Int                                     @default(0) @db.TinyInt
  sonstiges                             String?                                 @db.Text
  customer_identity                     String?                                 @db.VarChar(50)
  financial_cohort_invoice_data_company financial_cohort_invoice_data_company[]
  financial_course_invoice_data_company financial_course_invoice_data_company[]
  financial_invoice_company             financial_invoice_company[]
  research_project_partners             research_project_partners[]
  seminar_partner                       seminar_partner[]

  @@index([branche], map: "branche")
  @@index([abkuerzung], map: "idx_abbreviation")
  @@index([uebersetzung], map: "idx_translation")
  @@index([kategorie], map: "kategorie")
  @@index([keyaccount], map: "keyaccount")
  @@index([land], map: "land")
  @@index([name], map: "name")
  @@index([name2], map: "name2")
  @@index([name3], map: "name3")
  @@index([name], map: "name_2")
  @@index([parent], map: "parent")
}

model firma_ansprechpartner {
  pid      BigInt @default(0)
  firmenid BigInt @default(0)

  @@id([pid, firmenid])
}

model firma_datasrc {
  id        Int  @id @default(autoincrement())
  firma     Int?
  datasrc   Int?
  datasrcid Int?

  @@unique([firma, datasrc, datasrcid], map: "firma")
}

model firma_fundraising_projekte {
  id                 BigInt   @id @default(autoincrement())
  firma              BigInt
  art                Int      @db.SmallInt
  foerdersumme       Decimal  @db.Decimal(10, 0)
  ansprechpartner_1  BigInt?
  ansprechpartner_2  BigInt?
  ansprechpartner_3  BigInt?
  ansprechpartner_4  BigInt?
  partner_seit       DateTime @db.Date
  cashflow_datum_1   DateTime @db.Date
  cashflow_summe_1   Decimal  @db.Decimal(10, 0)
  cashflow_datum_2   DateTime @db.Date
  cashflow_summe_2   Decimal  @db.Decimal(10, 0)
  cashflow_datum_3   DateTime @db.Date
  cashflow_summe_3   Decimal  @db.Decimal(10, 0)
  cashflow_datum_4   DateTime @db.Date
  cashflow_summe_4   Decimal  @db.Decimal(10, 0)
  cashflow_datum_5   DateTime @db.Date
  cashflow_summe_5   Decimal  @db.Decimal(10, 0)
  ertragswirksamkeit String?  @db.VarChar(32)
  kommentar          String?  @db.Text

  @@index([firma, ansprechpartner_1, ansprechpartner_2, ansprechpartner_3, ansprechpartner_4], map: "firma")
}

model firma_kategorie {
  firmenid    BigInt
  kategorieid BigInt

  @@unique([firmenid, kategorieid], map: "firmenid")
}

model firma_stellen {
  id                BigInt    @id @default(autoincrement())
  sid               String?   @db.VarChar(64)
  firma             BigInt    @default(0)
  ansprechpartner   BigInt    @default(0)
  position          String?   @db.VarChar(255)
  kategorie         Int?
  datum             DateTime? @db.Date
  beschreibung      String?   @db.Text
  von               DateTime? @db.Date
  bis               DateTime? @db.Date
  deadline          DateTime? @db.Date
  stellen_kategorie Int       @default(1)
  status            Int       @default(0) @db.UnsignedTinyInt
  freigabe          Int       @db.TinyInt
  fakultaet         Int
  studium           Int
  dsrc_kat_1        Int
  dsrc_kat_2        Int

  @@index([firma], map: "firma")
}

model firma_student {
  id       Int     @id @default(autoincrement())
  firmenid Int?
  pid      BigInt?

  @@index([firmenid], map: "firmenid")
  @@index([pid], map: "pid")
}

model firma_student_ansprechpartner {
  id               Int     @id @default(autoincrement())
  firma_student_id Int?
  apid             BigInt?
}

model form {
  id              BigInt         @id @default(autoincrement())
  label           String?        @db.VarChar(255)
  category_id     BigInt?
  description     String?        @db.Text
  current_version Int
  deleted         Boolean
  in_use          Boolean?       @default(false)
  form_version    form_version[]
}

model form_category {
  id    BigInt  @id @default(autoincrement())
  label String? @db.VarChar(255)
}

model form_field {
  id              BigInt   @id @default(autoincrement())
  form_version_id BigInt
  type            Int      @db.SmallInt
  description     String?  @db.Text
  label           String?  @db.VarChar(255)
  position        Int?     @db.SmallInt
  value           String?  @db.Text
  mandatory       Boolean?
  internal        Boolean  @default(false)
  accepting_zero  Boolean  @default(false)
}

model form_field_value {
  form_field_id BigInt
  process_id    BigInt
  value         String? @db.Text

  @@id([form_field_id, process_id])
  @@index([process_id], map: "idx_process_id")
}

model form_process {
  id                      BigInt                    @id @default(autoincrement())
  form_version_id         BigInt
  date                    DateTime?                 @db.DateTime(0)
  form_version            form_version              @relation(fields: [form_version_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_form_process_version")
  internship_form_profile internship_form_profile[]

  @@index([form_version_id], map: "fk_form_process_version")
}

model form_version {
  id              BigInt            @id @default(autoincrement())
  form_id         BigInt
  version_number  BigInt
  form            form              @relation(fields: [form_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_form_form_version")
  form_process    form_process[]
  internship_form internship_form[]

  @@index([form_id], map: "fk_form_form_version")
}

model gadget {
  id               BigInt             @id @default(autoincrement())
  route            String             @db.VarChar(255)
  label            String             @db.VarChar(255)
  description      String             @db.Text
  type             Int                @default(0)
  dashboard_gadget dashboard_gadget[]
}

model grade_annotation {
  id                     BigInt            @id @default(autoincrement())
  abbreviation           String            @db.VarChar(255)
  label_de               String            @db.VarChar(255)
  label_en               String            @db.VarChar(255)
  evaluation_selection   Int               @db.SmallInt
  examination_attempt    Int               @db.SmallInt
  medical_certificate    Int               @db.TinyInt
  selectable_by_lecturer Int               @db.TinyInt
  visible_for_lecturer   Int               @db.TinyInt
  active                 Int               @default(1) @db.TinyInt
  noten                  noten[]
  noten_teilnoten        noten_teilnoten[]
}

model grade_annotation_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model grade_partial_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model grade_partial_request_form_profile {
  grade_partial_id        BigInt
  request_form_profile_id BigInt
  noten_teilnoten         noten_teilnoten      @relation(fields: [grade_partial_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_grade_partial_request_form_profile_grade_id")
  request_form_profile    request_form_profile @relation(fields: [request_form_profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_grade_partial_request_form_profile_request_form_profile_id")

  @@id([grade_partial_id, request_form_profile_id])
  @@index([request_form_profile_id], map: "fk_grade_partial_request_form_profile_request_form_profile_id")
}

model grade_request_form_profile {
  grade_id                BigInt
  request_form_profile_id BigInt
  noten                   noten                @relation(fields: [grade_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_grade_request_form_profile_grade_id")
  request_form_profile    request_form_profile @relation(fields: [request_form_profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_grade_request_form_profile_request_form_profile_id")

  @@id([grade_id, request_form_profile_id])
  @@index([request_form_profile_id], map: "fk_grade_request_form_profile_request_form_profile_id")
}

model grade_sheet_module_log {
  id             BigInt         @id @default(autoincrement())
  type           String?        @db.VarChar(255)
  time           DateTime?      @db.DateTime(0)
  user_id        BigInt?
  values         String?        @db.Text
  booking_id     BigInt
  module_id      BigInt
  entity_id      BigInt?
  profil_studium profil_studium @relation(fields: [booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_grade_sheet_module_log_booking_id")

  @@index([booking_id, module_id], map: "idx_booking_id_module_id")
  @@index([entity_id], map: "idx_entity_id")
}

model grade_sheet_subject_log {
  id             BigInt         @id @default(autoincrement())
  type           String?        @db.VarChar(255)
  time           DateTime?      @db.DateTime(0)
  user_id        BigInt?
  values         String?        @db.Text
  booking_id     BigInt
  subject_id     BigInt
  entity_id      BigInt?
  profil_studium profil_studium @relation(fields: [booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_grade_sheet_subject_log_booking_id")

  @@index([booking_id, subject_id], map: "idx_booking_id_subject_id")
  @@index([entity_id], map: "idx_entity_id")
}

model health_insurance_institute {
  identification  String @id @db.VarChar(255)
  cost_unit_short String @db.VarChar(255)
  cost_unit       String @db.VarChar(255)
  cost_unit_name  String @db.VarChar(255)
}

model health_insurance_profile {
  profile_id               BigInt   @id
  institute_identification String   @default("") @db.VarChar(255)
  health_insurance_number  String   @default("") @db.VarChar(255)
  attestation              String   @default("") @db.VarChar(255)
  status                   Int      @default(0)
  last_updated             DateTime @default(now()) @db.Timestamp(0)
}

model health_insurance_profile_communication_log {
  id          BigInt   @id @default(autoincrement())
  date        DateTime @db.DateTime(0)
  status_id   Int      @db.TinyInt
  profile_id  BigInt?
  comment     String?  @db.Text
  request_id  String?  @db.VarChar(255)
  response_id String?  @db.VarChar(255)
  profil      profil?  @relation(fields: [profile_id], references: [id], onUpdate: NoAction, map: "fk_profil_health_insurance_profile_communication_log")

  @@index([profile_id], map: "fk_profil_health_insurance_profile_communication_log")
}

model health_insurance_reporting_institute {
  id                                        BigInt                                      @id @default(autoincrement())
  sender_university                         String                                      @db.VarChar(255)
  sender_number                             String?                                     @db.VarChar(255)
  address_type                              BigInt?
  university_name                           String                                      @db.VarChar(255)
  contact_name                              String                                      @db.VarChar(255)
  health_insurance_reporting_institute_site health_insurance_reporting_institute_site[]
}

model health_insurance_reporting_institute_site {
  health_insurance_reporting_institute_id BigInt
  site_id                                 BigInt
  health_insurance_reporting_institute    health_insurance_reporting_institute @relation(fields: [health_insurance_reporting_institute_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_health_insurance_reporting_institute")
  pm_standorte                            pm_standorte                         @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_health_insurance_reporting_institute_site")

  @@id([health_insurance_reporting_institute_id, site_id])
  @@index([site_id], map: "fk_health_insurance_reporting_institute_site")
}

model infopool_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model instrument {
  id                             BigInt                           @id @default(autoincrement())
  code_letter                    String?                          @db.VarChar(255)
  category_id                    BigInt
  grade_subject_id               BigInt
  name_de                        String?                          @db.VarChar(255)
  name_en                        String?                          @db.VarChar(255)
  show_in_application            Boolean
  active                         Boolean                          @default(true)
  instrument_category            instrument_category              @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "instrument_ibfk_1")
  noten_faecher                  noten_faecher                    @relation(fields: [grade_subject_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "instrument_grade_subject_id")
  instrument_lecturer            instrument_lecturer[]
  instrument_study_program_field instrument_study_program_field[]
  profil_studium                 profil_studium[]

  @@index([category_id], map: "category_id")
  @@index([grade_subject_id], map: "instrument_grade_subject_id")
}

model instrument_category {
  id         BigInt       @id @default(autoincrement())
  name_de    String?      @db.VarChar(255)
  name_en    String?      @db.VarChar(255)
  instrument instrument[]
}

model instrument_lecturer {
  instrument_id BigInt
  lecturer_id   BigInt
  instrument    instrument @relation(fields: [instrument_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "il_instrument_id")
  profil        profil     @relation(fields: [lecturer_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "il_lecturer_id")

  @@id([instrument_id, lecturer_id])
  @@index([lecturer_id], map: "il_lecturer_id")
}

model instrument_study_program_field {
  id                      BigInt                   @id @default(autoincrement())
  major_subject           Boolean
  minor_subject           Boolean
  instrument_id           BigInt
  study_program_id        BigInt
  study_program_field_id  BigInt?
  instrument              instrument               @relation(fields: [instrument_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "instrument_id")
  studium_studienrichtung studium_studienrichtung? @relation(fields: [study_program_field_id], references: [id], onUpdate: NoAction, map: "study_program_field_id")
  studium                 studium                  @relation(fields: [study_program_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "study_program_id")

  @@unique([instrument_id, study_program_id, study_program_field_id], map: "unique_instrument_study_program_study_program_field")
  @@index([study_program_field_id], map: "study_program_field_id")
  @@index([study_program_id], map: "study_program_id")
}

model internship {
  id                         BigInt                  @id @default(autoincrement())
  erfahrungen_id             BigInt?
  internship_form_profile_id BigInt
  profile_id                 BigInt
  infopoolfile_id            BigInt
  erfahrungen                erfahrungen?            @relation(fields: [erfahrungen_id], references: [id], onUpdate: NoAction, map: "fk_experience")
  internship_form_profile    internship_form_profile @relation(fields: [internship_form_profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_internship_form_profile")

  @@index([erfahrungen_id], map: "fk_experience")
  @@index([internship_form_profile_id], map: "fk_internship_form_profile")
}

model internship_form {
  id                      BigInt                    @id @default(autoincrement())
  form_version_id         BigInt?
  form_id                 BigInt
  label                   String?                   @db.VarChar(255)
  published               Boolean
  category_id             BigInt?
  published_date          DateTime?                 @db.DateTime(0)
  file_upload             Boolean                   @default(true)
  form_version            form_version?             @relation(fields: [form_version_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_internship_form_form_version")
  internship_form_profile internship_form_profile[]

  @@index([form_version_id], map: "fk_internship_form_form_version")
}

model internship_form_category {
  id    BigInt  @id @default(autoincrement())
  label String? @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model internship_form_category_group {
  category_id BigInt
  group_id    BigInt

  @@ignore
}

model internship_form_profile {
  id                             BigInt                          @id @default(autoincrement())
  form_process_id                BigInt
  profile_id                     BigInt
  status_id                      BigInt?
  internship_form_id             BigInt
  form_process                   form_process                    @relation(fields: [form_process_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_internship_form_profile_form_process")
  internship_form                internship_form                 @relation(fields: [internship_form_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_internship_form_form_profile")
  profil                         profil                          @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_internship_form_profile_profile")
  internship_form_profile_status internship_form_profile_status? @relation(fields: [status_id], references: [id], onUpdate: NoAction, map: "fk_internship_form_profile_profile_status")
  internship                     internship[]

  @@index([internship_form_id], map: "fk_internship_form_form_profile")
  @@index([form_process_id], map: "fk_internship_form_profile_form_process")
  @@index([profile_id], map: "fk_internship_form_profile_profile")
  @@index([status_id], map: "fk_internship_form_profile_profile_status")
}

model internship_form_profile_status {
  id                      BigInt                    @id @default(autoincrement())
  refill                  Boolean
  default                 Boolean
  searchable              Boolean
  label                   String?                   @db.VarChar(255)
  internship_form_profile internship_form_profile[]
}

model ip_access_group {
  groupid BigInt    @default(0)
  dataid  BigInt    @default(0)
  zugriff Int       @default(0) @db.TinyInt
  valid   DateTime? @db.Date

  @@id([groupid, dataid])
  @@index([dataid], map: "dataid")
}

model ip_comments {
  id      BigInt   @id @default(autoincrement())
  dataid  BigInt   @default(0)
  profil  BigInt   @default(0)
  datum   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  comment String?  @db.Text

  @@index([dataid], map: "dataid")
}

model ip_content {
  dataid  BigInt  @id @default(0)
  content String? @db.LongText
}

model ip_data {
  id           BigInt    @id @default(autoincrement())
  name         String?   @db.VarChar(255)
  priority     Int       @default(0)
  beschreibung String?   @db.MediumText
  keywords     String?   @db.Text
  datatyp      String?   @db.VarChar(7)
  datasize     BigInt    @default(0)
  hyperlink    String?   @db.VarChar(255)
  filename     String?   @db.VarChar(12)
  bewertung    Float     @default(0)
  bewertungen  Int       @default(0)
  created      DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  autor        BigInt    @default(0)
  zugriffe     Int       @default(0) @db.MediumInt
  autodelete   DateTime? @db.Date
  passwort     String?   @db.VarChar(12)
  kursid       BigInt    @default(0)
  typ          Int?
  pending      Boolean?  @default(false)

  @@index([name], map: "name")
}

model ip_folders {
  id                            BigInt                          @id @default(autoincrement())
  objectid                      BigInt                          @unique(map: "ip_objects_id") @default(0)
  name                          String?                         @db.VarChar(255)
  created                       DateTime                        @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  autor                         BigInt                          @default(0)
  updated                       DateTime                        @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  parent                        BigInt                          @default(0)
  hidden                        Boolean                         @default(false)
  system                        Boolean                         @default(false)
  position                      Int                             @default(1)
  files                         Int                             @default(0) @db.TinyInt
  links                         Int                             @default(0) @db.TinyInt
  forum                         Int                             @default(0) @db.TinyInt
  bewertung                     Int                             @default(0) @db.TinyInt
  deleted_date                  DateTime?                       @db.Date
  deleted_user                  BigInt?
  semester_site_infopool_folder semester_site_infopool_folder[]

  @@index([deleted_date], map: "deleted_date")
  @@index([hidden], map: "hidden")
  @@index([parent], map: "idx_parent")
  @@index([name], map: "name")
  @@index([objectid], map: "objectid")
  @@index([position], map: "position")
}

model ip_gallery {
  id        BigInt   @id @default(autoincrement())
  gallery   BigInt   @default(0)
  name      String?  @db.VarChar(50)
  img_small String?  @db.VarChar(20)
  img_big   String?  @db.VarChar(20)
  typ       String?  @db.VarChar(5)
  autor     BigInt   @default(0)
  created   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  views     Int      @default(0)
}

model ip_lang {
  id  BigInt  @id @default(autoincrement())
  tag String? @unique(map: "tag") @db.VarChar(64)
  de  String? @db.Text
  en  String? @db.Text
}

model ip_objects {
  id           BigInt    @id @default(autoincrement())
  dataid       BigInt    @default(0)
  folder       BigInt    @default(0)
  datatyp      String?   @db.VarChar(7)
  datasize     Int       @default(0)
  name         String?   @db.VarChar(255)
  updated      DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  deleted_date DateTime? @db.Date
  deleted_user BigInt?

  @@index([deleted_date], map: "deleted_date")
  @@index([folder, dataid], map: "folder")
  @@index([dataid, deleted_date], map: "idx-dataid-deleted_date")
  @@index([datatyp, dataid], map: "idx-datatyp-dataid")
  @@index([folder, deleted_date], map: "idx-folder-deleted_date")
  @@index([name], map: "name")
}

model ip_passwords {
  userid BigInt   @default(0)
  dataid BigInt   @default(0)
  datum  DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)

  @@id([userid, dataid])
}

model ip_tickets {
  id      BigInt   @id @default(autoincrement())
  ticket  String?  @db.VarChar(60)
  dataid  BigInt   @default(0)
  created DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
}

model jasper_reports_user {
  id       Int    @id @default(autoincrement())
  username String @unique(map: "username") @db.VarChar(255)
  password Bytes  @db.Blob
}

model jasper_reports_user_assignment {
  id             Int     @id @default(autoincrement())
  user_id        BigInt?
  ac5_profile_id BigInt  @unique(map: "ac5_profile_id")

  @@index([user_id, ac5_profile_id], map: "user_id")
}

model jobs {
  id           BigInt    @id @default(autoincrement())
  category     BigInt
  profil       BigInt?
  groupid      BigInt?   @default(0)
  name         String?   @db.VarChar(255)
  datum        DateTime? @db.DateTime(0)
  status       Int       @default(0) @db.TinyInt
  notify       DateTime? @db.Date
  priority     Int       @default(0) @db.TinyInt
  object       String?   @db.VarChar(16)
  object_id    BigInt?
  created_date DateTime  @db.DateTime(0)
  created_user BigInt
  updated_date DateTime? @db.DateTime(0)
  updated_user BigInt?
  closed_date  DateTime? @db.DateTime(0)
  closed_user  BigInt?
  deleted_date DateTime? @db.DateTime(0)
  deleted_user BigInt?
  kommentar    String?   @db.Text

  @@index([category, profil], map: "category")
  @@index([deleted_date], map: "deleted_date")
  @@index([groupid], map: "groupid")
}

model jobs_category {
  id       BigInt  @id @default(autoincrement())
  de       String? @db.VarChar(64)
  en       String? @db.VarChar(64)
  position Int     @default(0) @db.TinyInt
  aktiv    Int     @default(1) @db.TinyInt
}

model jobs_observer {
  job_id     BigInt
  profile_id BigInt

  @@id([job_id, profile_id])
}

model jobs_protocol {
  id     BigInt   @id @default(autoincrement())
  job    BigInt
  profil BigInt
  datum  DateTime @db.DateTime(0)
  text   String?  @db.Text

  @@index([job], map: "job")
}

model kb_access_group {
  groupid                             BigInt   @id @default(1)
  off_read                            Int      @default(0) @db.TinyInt
  off_write                           Int      @default(0) @db.TinyInt
  lec_read                            Int      @default(0) @db.TinyInt
  lec_write                           Int      @default(0) @db.TinyInt
  pcp_read                            Int      @db.TinyInt
  pcp_write                           Int      @db.TinyInt
  att_read                            Int      @db.TinyInt
  att_write                           Int      @db.TinyInt
  location_write                      Int      @db.TinyInt
  p_plan_read                         Int
  settings_set                        Int      @db.TinyInt
  course_enrollment_clear_cache       Boolean  @default(false)
  course_enrollment_period            Boolean  @default(false)
  lectureship                         Boolean  @default(false)
  holidays_write                      Boolean?
  timetable_settings                  Boolean?
  evaluation_target_actual            Boolean?
  report_budget                       Boolean?
  report_workload                     Boolean?
  lectureship_invoice_bill            Boolean?
  lectureship_settings                Boolean?
  planning_group                      Boolean?
  planning_group_read                 Int?     @default(0) @db.TinyInt
  course_evaluation_manage            Boolean?
  ticket_curriculum_assignment_manage Boolean  @default(false)
  view_course_log                     Boolean  @default(false)
  draw_lecture_series_and_priorities  Boolean  @default(false)
  manage_course_offer_participants    Boolean  @default(false)
}

model kb_config {
  id                               BigInt  @id @default(autoincrement())
  planungsstatus_werte             String? @db.Text
  planungsstatus_werte_kurz        String? @db.VarChar(32)
  planungsstatus_farben            String? @db.Text
  evaluierung_bewertungstypen      String? @db.Text
  gaststudent_konfliktpruefung     Int     @db.TinyInt
  gaststudent_dozenten_excel_liste Int     @db.TinyInt
}

model kb_dokumente {
  id      BigInt  @id @default(autoincrement())
  name    String? @db.VarChar(100)
  typ     String? @db.VarChar(20)
  gruppe  String? @db.VarChar(10)
  groupid BigInt  @default(0)
  content String? @db.Text
  link    String? @db.Text
}

model kb_doppelbelegungen {
  id    BigInt  @id @default(autoincrement())
  zpid  BigInt  @default(0)
  teil1 String? @db.Text
  teil2 String? @db.Text
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model kb_dozenten_user {
  dozent BigInt
  userid BigInt

  @@index([dozent, userid], map: "dozent")
  @@ignore
}

model kb_evaluierung {
  kursid         BigInt   @default(0)
  datum          DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  user           BigInt   @default(0)
  ip             String?  @db.VarChar(15)
  typ            Int      @default(0) @db.TinyInt
  fid            Int      @default(0)
  bewertung      Int      @default(0)
  bewertungstext String?  @db.Text
  fbid           Int?
  id             BigInt   @id @default(autoincrement())
  referenzid     BigInt?
  pid            BigInt
  dozent         BigInt   @default(0)

  @@index([fbid], map: "fbid")
  @@index([fid], map: "fid")
  @@index([kursid], map: "kursid")
  @@index([user], map: "user")
}

model kb_evaluierung_fb {
  id               BigInt  @id @default(autoincrement())
  kursid           BigInt  @default(0)
  klasse           BigInt  @default(0)
  semester         Int     @default(1)
  fbid_manuell     BigInt  @default(0)
  fbid_online      BigInt  @default(0)
  freigabe         Int     @default(0) @db.TinyInt
  fb_allgemein_bez String? @db.VarChar(255)
}

model kb_evaluierung_multidata {
  evaluierungsid BigInt @unique(map: "evaluierungsid")
  bewertung      String @db.VarChar(32)
}

model kb_fehl_belegungszeiten {
  id          BigInt   @id @default(autoincrement())
  typ         String?  @db.VarChar(20)
  bezeichnung String?  @db.VarChar(255)
  beginn      DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  ende        DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  raum        BigInt   @default(0)
  dozent      BigInt   @default(0)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model kb_fehlquote_export_temp {
  sid          String? @db.VarChar(255)
  teilnehmer   String? @db.VarChar(255)
  mnr          String? @db.VarChar(64)
  studium      String? @db.VarChar(128)
  fehlquote    String? @db.VarChar(8)
  soll_stunden Int     @default(0) @db.UnsignedInt
  ist_stunden  Int     @default(0) @db.UnsignedInt
  kuerzel      String? @db.VarChar(32)
  fach         String? @db.VarChar(255)

  @@ignore
}

model kb_fehlzeiten {
  id       BigInt @id @default(autoincrement())
  sid      BigInt @default(0)
  spid     BigInt @default(0)
  semester Int    @default(0) @db.TinyInt
  fachid   BigInt @default(0)
  klasse   BigInt @default(0)
  attest   Int    @default(0) @db.TinyInt

  @@index([sid, spid], map: "sid")
}

model kb_feiertage {
  id                       BigInt   @id @default(autoincrement())
  name                     String?  @db.VarChar(40)
  typ                      String?  @db.VarChar(20)
  datum                    DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  kw                       Int      @default(0)
  tid                      Int      @default(0) @db.TinyInt
  klasse                   BigInt   @default(0)
  serie                    Int      @default(1) @db.TinyInt
  fid                      BigInt   @default(0)
  buchbar                  Int      @default(0) @db.TinyInt
  not_visible_for_lecturer Boolean  @default(false)
  not_visible_for_students Boolean  @default(false)
}

model kb_feiertage_standorte {
  feiertagid BigInt
  standortid BigInt

  @@id([feiertagid, standortid])
}

model kb_ferien {
  id      BigInt   @id @default(autoincrement())
  name    String?  @db.VarChar(35)
  beginn  DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  ende    DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  klasse  BigInt   @default(0)
  buchbar Int      @db.TinyInt
}

model kb_ferien_standort {
  ferien_id BigInt
  site_id   BigInt

  @@id([ferien_id, site_id])
}

model kb_fields {
  id                  BigInt  @id @default(autoincrement())
  groupid             BigInt  @default(0)
  name                String? @db.VarChar(64)
  feld                String? @db.VarChar(64)
  feldid              BigInt  @default(0)
  typ                 String? @db.VarChar(8)
  show                Int     @default(1) @db.TinyInt
  position            Int     @default(0)
  box                 Int     @default(1) @db.SmallInt
  row                 Int     @default(1) @db.SmallInt
  export              Int     @default(0) @db.TinyInt
  datenquelle         Int     @db.TinyInt
  conjunction         Int     @default(0) @db.TinyInt
  ebenen              Int     @default(1) @db.TinyInt
  suche               Int     @default(0) @db.TinyInt
  profil_suche        Int     @db.TinyInt
  system              Int     @default(1) @db.TinyInt
  duplikat            Int     @db.TinyInt
  sel_table           String? @db.VarChar(50)
  sel_feld            String? @db.VarChar(40)
  gewichtung          Int     @default(1) @db.TinyInt
  ref_table           String? @db.VarChar(32)
  ref_table_as        String? @db.VarChar(50)
  refSelection        Int     @default(1) @db.TinyInt
  ref_field           String? @db.VarChar(32)
  ref_name            String? @db.VarChar(32)
  ref_ref_table       String? @db.VarChar(40)
  ref_ref_table_as    String? @db.VarChar(100)
  ref_refSelection    Int     @default(1) @db.TinyInt
  ref_ref_name        String? @db.VarChar(100)
  ref_ref_field       String? @db.VarChar(100)
  ref_ref_conjunction Int     @default(0) @db.TinyInt
  ref_selection       String? @db.Text
}

model kb_fragebogen {
  id           Int     @id @default(autoincrement())
  name         String? @db.VarChar(255)
  beschreibung String? @db.Text
}

model kb_fragebogen_fragen {
  fbid           Int     @default(0)
  fid            Int     @default(0)
  typ            Int     @db.SmallInt
  position       Int     @default(0)
  erklarungstext String? @db.Text

  @@id([fbid, fid])
}

model kb_fragen {
  id        Int     @id @default(autoincrement())
  kategorie BigInt
  frage_de  String? @db.Text
  frage_en  String? @db.Text
  muss      Int     @default(0) @db.TinyInt
  typ       Int     @default(0) @db.SmallInt
  sonstiges String? @db.Text

  @@index([kategorie], map: "kategorie")
}

model kb_fragen_kategorien {
  id   BigInt  @id @default(autoincrement())
  name String? @db.VarChar(255)
  en   String? @db.VarChar(64)
}

model kb_fristen {
  id                        Int       @id @default(autoincrement())
  jahr                      Int
  term                      Int
  studium                   Int
  einschreibefrist_1_beginn DateTime? @db.Date
  einschreibefrist_1_ende   DateTime? @db.Date
  einschreibefrist_1_von    DateTime? @db.Time(0)
  einschreibefrist_1_bis    DateTime? @db.Time(0)
  einschreibefrist_2_beginn DateTime? @db.Date
  einschreibefrist_2_ende   DateTime? @db.Date
  einschreibefrist_2_von    DateTime? @db.Time(0)
  einschreibefrist_2_bis    DateTime? @db.Time(0)
  lotto_portal_phase1       Int       @db.TinyInt
  lotto_portal_phase2       Int       @db.TinyInt
  publish_for_timetable     Int
  publish                   Int
  lotto                     Int?      @db.TinyInt
}

model kb_geloeschte_termine {
  id                  Int       @id @default(autoincrement())
  delid               BigInt    @default(0)
  dday                DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  referenzid          BigInt    @default(0)
  username            BigInt?
  subject             String?   @db.VarChar(255)
  kw                  Int       @default(0)
  kw_anfang           Int       @default(0)
  kw_ende             Int       @default(0)
  terminart           Int       @default(0) @db.TinyInt
  sjahr               Int       @default(0)
  ejahr               Int       @default(0)
  stundenid           String?   @db.VarChar(4)
  von                 DateTime? @db.Time(0)
  bis                 DateTime? @db.Time(0)
  datum               DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  did                 BigInt    @default(0)
  did2                BigInt    @default(0)
  klasse              BigInt    @default(0)
  klasse2             String?   @db.VarChar(100)
  klasse3             String?   @db.VarChar(100)
  klasse4             String?   @db.VarChar(100)
  raum                String?   @db.VarChar(30)
  raum2               String?   @db.VarChar(100)
  fachid              BigInt    @default(0)
  fachid2             BigInt    @default(0)
  zyklus              Int       @default(0) @db.TinyInt
  mehrstuendig        Int       @default(1) @db.SmallInt
  termin_typ          Int       @default(0) @db.TinyInt
  unterrichtssprache  String?   @db.VarChar(100)
  dozent_anwesenheit  Int       @default(0) @db.TinyInt
  dozent_subject      Int       @default(1) @db.TinyInt
  anwesenheitspflicht Int       @default(1) @db.TinyInt
  anwesenheit         Int       @default(0) @db.TinyInt
  stundenausfall      Int       @default(0) @db.TinyInt
  multi_klasse        Int       @default(0) @db.TinyInt
  multi_raum          Int       @default(0) @db.TinyInt
  multi_dozent        Int       @default(0) @db.TinyInt
  multi_fach          Int       @default(0) @db.TinyInt
}

model kb_geloeschte_zeitplaene {
  id        BigInt   @id @default(autoincrement())
  delid     BigInt   @default(0)
  name      String?  @db.VarChar(10)
  anzahl    Int      @default(0) @db.TinyInt
  samstag   Int      @default(0) @db.TinyInt
  stunde1a  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde1e  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde2a  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde2e  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde3a  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde3e  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde4a  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde4e  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde5a  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde5e  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde6a  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde6e  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde7a  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde7e  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde8a  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde8e  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde9a  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde9e  DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde10a DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde10e DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde11a DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde11e DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde12a DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde12e DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde13a DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde13e DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde14a DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde14e DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde15a DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde15e DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde16a DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde16e DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde17a DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde17e DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde18a DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde18e DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde19a DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde19e DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde20a DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde20e DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
}

model kb_gruppen {
  id             BigInt           @id @default(autoincrement())
  klassenid      BigInt?          @default(0)
  gruppenid      BigInt?          @default(0)
  name           String?          @db.VarChar(255)
  term           Int?             @default(0)
  jahr           Int?             @default(0)
  gruppe_global  Int?             @default(0)
  kb_vorlesungen kb_vorlesungen[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model kb_gruppen_semester {
  gruppenid  BigInt
  semesterid BigInt

  @@index([gruppenid, semesterid], map: "gruppenid")
  @@ignore
}

model kb_gruppen_teilnehmer {
  id        BigInt @id @default(autoincrement())
  gruppenid BigInt
  sid       BigInt

  @@index([gruppenid, sid], map: "gruppenid")
}

model kb_hoererstatus {
  id                            Int                             @id @db.TinyInt
  de                            String?                         @db.VarChar(64)
  en                            String?                         @db.VarChar(64)
  kursbuchung                   Int                             @db.TinyInt
  anwesenheit                   Int                             @db.TinyInt
  listen                        Int                             @db.TinyInt
  konfliktpruefung              Int                             @db.TinyInt
  wiederholungen                Int                             @db.SmallInt
  kb_kursangebot_tickets        kb_kursangebot_tickets[]
  kb_vorlesung_teilnehmer       kb_vorlesung_teilnehmer[]
  mobility_online_configuration mobility_online_configuration[]
}

model kb_konto {
  id       BigInt @id @default(autoincrement())
  soll     Int    @default(0)
  did      BigInt @default(0)
  semester Int    @default(0) @db.TinyInt
  fachid   BigInt @default(0)
  klasse   BigInt @default(0)
}

model kb_konto_klasse {
  id     BigInt @id @default(autoincrement())
  soll   Int    @default(0)
  fachid BigInt @default(0)
  klasse BigInt @default(0)
}

model kb_kursangebot {
  id                                                                       BigInt                                   @id @default(autoincrement())
  angebotstyp                                                              Int?                                     @db.TinyInt
  typ                                                                      Int                                      @default(1) @db.SmallInt
  dozent1                                                                  BigInt?
  dozent2                                                                  BigInt?
  dozent3                                                                  BigInt?
  standort                                                                 BigInt?
  raum                                                                     BigInt?
  nummer                                                                   String?                                  @db.VarChar(255)
  semester                                                                 Int?                                     @db.TinyInt
  jahr                                                                     Int?
  beginn                                                                   DateTime?                                @db.Date
  ende                                                                     DateTime?                                @db.Date
  von                                                                      DateTime?                                @db.Time(0)
  bis                                                                      DateTime?                                @db.Time(0)
  fachid                                                                   BigInt?
  fach_version                                                             BigInt?
  descid                                                                   BigInt                                   @default(0)
  studium                                                                  BigInt?
  Term                                                                     String?                                  @db.VarChar(50)
  Publish                                                                  Boolean?
  publish_for_timetable                                                    Int                                      @default(1) @db.TinyInt
  Important                                                                String?                                  @db.VarChar(50)
  teilnehmerzahl                                                           Int                                      @default(0)
  teilnehmerzahl_min                                                       Int                                      @default(0) @db.SmallInt
  einschreibefrist_von                                                     DateTime?                                @db.Date
  einschreibefrist_bis                                                     DateTime?                                @db.Date
  einschreibefrist_2_von                                                   DateTime?                                @db.Date
  einschreibefrist_2_bis                                                   DateTime?                                @db.Date
  von_2                                                                    DateTime?                                @db.Time(0)
  bis_2                                                                    DateTime?                                @db.Time(0)
  eval_von                                                                 DateTime?                                @db.Date
  eval_bis                                                                 DateTime?                                @db.Date
  enrollment_for_all                                                       Int?                                     @db.TinyInt
  enrollment_possible                                                      Int?                                     @db.TinyInt
  enrolment_blocked_for_visiting_student                                   Boolean                                  @default(false)
  automatic_enrollment                                                     Int                                      @default(1) @db.TinyInt
  ip_folder                                                                BigInt?
  einschreibefrist                                                         DateTime?                                @db.Date
  fbid_online                                                              BigInt?
  fbid_manuell                                                             BigInt
  bemerkung                                                                String?                                  @db.Text
  prep_and_post                                                            Int?                                     @db.TinyInt
  de                                                                       String?                                  @db.VarChar(255)
  en                                                                       String?                                  @db.VarChar(255)
  klasse                                                                   BigInt?
  modul                                                                    BigInt?
  status                                                                   Int?                                     @db.TinyInt
  lotto                                                                    Int?                                     @db.TinyInt
  teilnahmegebuehr                                                         Float?                                   @db.Float
  dozentenhonorar                                                          Float?                                   @db.Float
  released_date                                                            DateTime?                                @db.DateTime(0)
  aborted_date                                                             DateTime?                                @db.DateTime(0)
  stattgefunden_date                                                       DateTime?                                @db.DateTime(0)
  abgerechnet_date                                                         DateTime?                                @db.DateTime(0)
  kursleitung                                                              BigInt?                                  @default(0)
  land                                                                     BigInt?                                  @default(0)
  webanmeldung                                                             Int?                                     @default(0) @db.TinyInt
  conflict                                                                 Int?                                     @default(0) @db.TinyInt
  kurswahl_typ                                                             Int?                                     @db.TinyInt
  organisator                                                              BigInt?
  importid                                                                 BigInt?
  kategorie                                                                String?                                  @db.VarChar(40)
  notice                                                                   String?                                  @db.Text
  category                                                                 String?                                  @db.VarChar(10)
  lotto_portal_phase1                                                      Int?                                     @db.TinyInt
  lotto_portal_phase2                                                      Int                                      @default(0) @db.TinyInt
  interface                                                                Int                                      @default(0) @db.TinyInt
  fach_kategorie                                                           Int                                      @default(0)
  fach_credits                                                             Float                                    @db.Float
  fach_sws                                                                 Int
  status_id                                                                BigInt?
  course_offer_type_id                                                     BigInt?
  paid_offer                                                               Boolean                                  @default(false)
  tuition_amount                                                           Decimal?                                 @db.Decimal(7, 2)
  currency_id                                                              BigInt?
  profit_centre_id                                                         BigInt?
  moodle_transfer                                                          Int                                      @default(0) @db.TinyInt
  subject_version_copied                                                   Boolean?
  course_offer_type                                                        course_offer_type?                       @relation(fields: [course_offer_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "course_course_offer_type")
  financial_currency                                                       financial_currency?                      @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_course_financial_currency")
  noten_faecher_desc                                                       noten_faecher_desc?                      @relation(fields: [fach_version], references: [id], onUpdate: NoAction, map: "kb_kursangebot_fach_version")
  noten_faecher                                                            noten_faecher?                           @relation(fields: [fachid], references: [id], onUpdate: NoAction, map: "kb_kursangebot_fach_id")
  noten_modul_desc                                                         noten_modul_desc?                        @relation(fields: [modul], references: [id], onUpdate: NoAction, map: "kb_kursangebot_modul")
  financial_profit_center                                                  financial_profit_center?                 @relation(fields: [profit_centre_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_course_financial_profit_centre")
  course_status                                                            course_status?                           @relation(fields: [status_id], references: [id], onUpdate: NoAction, map: "status_id_to_course_status")
  booking_draw_removal                                                     booking_draw_removal[]
  course_data_source                                                       course_data_source[]
  course_enrolment_period_courses                                          course_enrolment_period_courses[]
  course_series_draw_priority                                              course_series_draw_priority[]
  course_study_program_focus                                               course_study_program_focus[]
  enrolment_period_course_draw                                             enrolment_period_course_draw[]
  enrolment_period_prioritisation_course                                   enrolment_period_prioritisation_course[]
  kb_kursangebot_modul                                                     kb_kursangebot_modul[]
  kb_kursangebot_zuordnung_kb_kursangebotTokb_kursangebot_zuordnung_child  kb_kursangebot_zuordnung[]               @relation("kb_kursangebotTokb_kursangebot_zuordnung_child")
  kb_kursangebot_zuordnung_kb_kursangebotTokb_kursangebot_zuordnung_parent kb_kursangebot_zuordnung[]               @relation("kb_kursangebotTokb_kursangebot_zuordnung_parent")
  kb_vorlesungen                                                           kb_vorlesungen[]
  lectureship_course                                                       lectureship_course[]
  submission                                                               submission[]

  @@index([course_offer_type_id], map: "course_course_offer_type")
  @@index([de], map: "course_de_index")
  @@index([en], map: "course_en_index")
  @@index([semester, jahr], map: "course_term_year_index")
  @@index([fach_version], map: "fach_version")
  @@index([fachid], map: "fachid")
  @@index([currency_id], map: "fk_course_financial_currency")
  @@index([profit_centre_id], map: "fk_course_financial_profit_centre")
  @@index([jahr], map: "jahr")
  @@index([modul], map: "kb_kursangebot_modul")
  @@index([nummer], map: "nummer")
  @@index([status_id], map: "status_id_to_course_status")
}

model kb_kursangebot_attendance {
  pid                 BigInt
  vorlesung_id        BigInt
  attendance          Int     @default(0) @db.TinyInt
  status              Int     @default(0)
  deferred_lecture_id BigInt?

  @@id([pid, vorlesung_id])
}

model kb_kursangebot_docs {
  id                 BigInt  @id @default(autoincrement())
  name               String? @db.VarChar(64)
  menutext           String? @db.VarChar(64)
  filename           String? @db.VarChar(64)
  no_selection       Int?    @default(0) @db.TinyInt
  filled             Int?    @default(1) @db.TinyInt
  signature          String? @db.VarChar(64)
  signature_position String? @db.VarChar(64)
  doc_type           String? @db.VarChar(20)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model kb_kursangebot_einschreibung {
  studium  Int @default(0)
  semester Int @default(0) @db.TinyInt
  jahr     Int @default(0)
  flag     Int @default(0) @db.TinyInt

  @@ignore
}

model kb_kursangebot_freigaben {
  id                      BigInt    @id @default(autoincrement())
  kid                     BigInt
  studiengang             BigInt?
  semester                Int?
  teilnehmer_max          Int       @default(0)
  einschreibefrist_beginn DateTime? @db.Date
  einschreibefrist_ende   DateTime? @db.Date

  @@index([kid, studiengang, semester], map: "kid")
}

model kb_kursangebot_kategorien {
  id     BigInt  @id @default(autoincrement())
  jahr   Int     @db.SmallInt
  term   Int     @db.TinyInt
  de     String? @db.VarChar(128)
  en     String? @db.VarChar(128)
  status Int     @db.TinyInt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model kb_kursangebot_klassen {
  kursid    BigInt @default(0)
  klassenid BigInt @default(0)

  @@ignore
}

model kb_kursangebot_kurswahl {
  kid        BigInt @default(0)
  referenzid BigInt @default(0)
  sid        BigInt @default(0)
  wert       Int?

  @@id([kid, referenzid, sid])
}

model kb_kursangebot_lottofreigaben {
  id               BigInt  @id @default(autoincrement())
  kid              BigInt
  wert             Int
  studienabschnitt String? @db.VarChar(16)

  @@unique([kid, studienabschnitt], map: "kid")
}

model kb_kursangebot_modul {
  kid                                   BigInt            @default(0)
  studium                               BigInt            @default(0)
  modul                                 BigInt?
  category                              BigInt?
  position                              Int?              @db.SmallInt
  id                                    BigInt            @id @default(autoincrement())
  kb_kursangebot                        kb_kursangebot    @relation(fields: [kid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_kursangebot_modul_course")
  noten_modul_desc                      noten_modul_desc? @relation(fields: [modul], references: [id], onUpdate: NoAction, map: "kb_kursangebot_modul_noten_modul_id")
  studium_kb_kursangebot_modulTostudium studium           @relation(fields: [studium], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_kursangebot_modul_studium")

  @@unique([kid, studium, modul, category], map: "kb_kursangebot_modul_unique")
  @@index([studium], map: "fk_kursangebot_modul_studium")
  @@index([modul], map: "kb_kursangebot_modul_noten_modul_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model kb_kursangebot_semester {
  kursid      BigInt @default(0)
  studium     BigInt @default(0)
  schwerpunkt Int    @default(0)

  @@ignore
}

model kb_kursangebot_seminar_dokumente {
  id            BigInt  @id @default(autoincrement())
  seminar       BigInt  @default(0)
  gruppe        BigInt  @default(0)
  modul         BigInt  @default(0)
  standort      BigInt  @default(0)
  gruppentermin BigInt  @default(0)
  name          String? @db.VarChar(128)
  format        String? @db.VarChar(5)
  size          BigInt  @default(0)
  downloads     BigInt  @default(0)
  autor         BigInt  @default(0)
  trainer       Int     @default(1) @db.TinyInt
  teilnehmer    Int     @default(1) @db.TinyInt

  @@index([modul], map: "modul")
  @@index([seminar], map: "seminar")
  @@index([standort], map: "standort")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model kb_kursangebot_seminar_groups {
  seminar       BigInt @default(0)
  seminargruppe BigInt @default(0)
  groupid       BigInt @default(0)

  @@index([seminargruppe, groupid], map: "seminar")
  @@ignore
}

model kb_kursangebot_seminar_zahlungsmodelle {
  id                 BigInt   @id @default(autoincrement())
  user               BigInt   @default(0)
  erstellt_am        DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  name               String?  @db.VarChar(255)
  anmeldegebuehr     Float    @default(0) @db.Float
  anzahlung          Float    @default(0) @db.Float
  anzahl_raten       Int      @default(0) @db.SmallInt
  ratenhoehe         Float    @default(0) @db.Float
  gesamtgebuehr      Float    @default(0) @db.Float
  rabatt_aufpreis    Float    @default(0) @db.Float
  bildungsfonds      Int      @default(0) @db.TinyInt
  prozent_aufpreis   Float    @default(0) @db.Float
  zahlungsmodalitaet String?  @db.VarChar(100)
  bankbuergschaft    String?  @db.VarChar(100)
  stand              DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  alt                Int      @default(0) @db.TinyInt
  sonstiges          String?  @db.Text
  seminarid          BigInt   @default(0)
}

model kb_kursangebot_seminare_details {
  id                    BigInt   @id @default(autoincrement())
  seminarid             BigInt   @default(0)
  user                  BigInt   @default(0)
  erstellt_am           DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  nummer                String?  @db.VarChar(100)
  kurs                  String?  @db.VarChar(255)
  kurs_zusatz           String?  @db.VarChar(255)
  fruehbuchertermin     DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  fruehbucherbonus      String?  @db.VarChar(20)
  kursgebuehr           Float    @default(0) @db.Float
  anmeldegebuehr        Float    @default(0) @db.Float
  pruefungsgebuehr      Float    @default(0) @db.Float
  kursgebuehr_mwst      Float    @default(0) @db.Float
  anmeldegebuehr_mwst   Float    @default(0) @db.Float
  pruefungsgebuehr_mwst Float    @default(0) @db.Float
  von                   DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  schul_nr              String?  @db.VarChar(50)
  AGB                   String?  @db.Text
  starttermin           DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  grundkonzept          String?  @db.VarChar(255)
  rhytmus               String?  @db.VarChar(255)
  massnahme_nr          String?  @db.VarChar(255)
  akquise_status        String?  @db.VarChar(255)
}

model kb_kursangebot_serienzuordnung {
  kursid     BigInt
  referenzid BigInt

  @@id([kursid, referenzid])
}

model kb_kursangebot_standort {
  kid      BigInt @default(0)
  standort BigInt @default(0)

  @@id([kid, standort])
}

model kb_kursangebot_status {
  id BigInt  @id @default(autoincrement())
  de String? @db.VarChar(255)
  en String? @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model kb_kursangebot_studium {
  kursid        BigInt @default(0)
  studium       BigInt @default(0)
  schwerpunkt   Int    @default(0)
  studienstatus Int    @db.TinyInt

  @@ignore
}

model kb_kursangebot_tickets {
  kid                                   BigInt
  referenzid                            BigInt?
  sid                                   BigInt                                  @default(0)
  datum                                 DateTime?                               @db.DateTime(0)
  user                                  BigInt                                  @default(0)
  ip                                    String?                                 @db.VarChar(15)
  typ                                   Int                                     @default(0) @db.TinyInt
  evaluierung                           BigInt                                  @default(0)
  id                                    BigInt                                  @id @default(autoincrement())
  pz                                    Int                                     @default(1) @db.TinyInt
  pz_ablehnungsgrund                    Int?                                    @db.SmallInt
  gaststudent                           Int                                     @default(0) @db.TinyInt
  hoererstatus                          Int?                                    @db.TinyInt
  vorbereitung                          Int?                                    @db.UnsignedInt
  nachbereitung                         Int?                                    @db.UnsignedInt
  referenzid2                           BigInt?
  buchung_bestaetigt                    Int                                     @default(0) @db.TinyInt
  bestaetigt                            Int                                     @default(0) @db.TinyInt
  stornierungsdatum                     DateTime?                               @db.DateTime(0)
  stornierung_bestaetigt                DateTime?                               @db.DateTime(0)
  status                                Int?                                    @db.SmallInt
  abgebucht                             Int?                                    @default(0) @db.TinyInt
  zahlungsmodell                        BigInt?                                 @default(0)
  zahlungsweise                         BigInt?                                 @default(0)
  material_versand                      Int                                     @default(0) @db.TinyInt
  notice                                String?                                 @db.Text
  klasse                                BigInt?
  curriculum_entry_id                   BigInt?
  course_enrolment_period_id            BigInt?
  course_enrolment_periods              course_enrolment_periods?               @relation(fields: [course_enrolment_period_id], references: [id], onUpdate: NoAction, map: "fk_kb_kursangebot_tickets_course_enrolment_period_id")
  kb_hoererstatus                       kb_hoererstatus?                        @relation(fields: [hoererstatus], references: [id], onUpdate: NoAction, map: "course_ticket_listener_status")
  kb_vorlesungen                        kb_vorlesungen?                         @relation(fields: [referenzid], references: [referenzid], onDelete: Cascade, onUpdate: NoAction, map: "referenzid_vorlesung")
  course_ticket_draw                    course_ticket_draw?
  course_ticket_forbid_cancellation     course_ticket_forbid_cancellation?
  course_ticket_grade_subject           course_ticket_grade_subject[]
  financial_course_invoice_data_company financial_course_invoice_data_company[]
  financial_course_invoice_data_profile financial_course_invoice_data_profile[]

  @@unique([kid, referenzid, sid], map: "kid_4")
  @@index([hoererstatus], map: "course_ticket_listener_status")
  @@index([course_enrolment_period_id], map: "fk_kb_kursangebot_tickets_course_enrolment_period_id")
  @@index([kid], map: "kid")
  @@index([kid], map: "kid_2")
  @@index([kid], map: "kid_3")
  @@index([pz, datum], map: "pz_datum_clix")
  @@index([referenzid], map: "referenzid_vorlesung")
  @@index([sid], map: "sid")
  @@index([sid], map: "sid_2")
  @@index([sid], map: "sid_3")
  @@index([user], map: "user")
}

model kb_kursangebot_tickets_archiv {
  aid                    BigInt    @id @default(autoincrement())
  kid                    BigInt
  referenzid             BigInt?
  sid                    BigInt
  datum                  DateTime? @db.DateTime(0)
  user                   BigInt    @default(0)
  ip                     String?   @db.VarChar(15)
  typ                    Int       @default(0) @db.TinyInt
  evaluierung            BigInt    @default(0)
  pz                     Int       @default(1) @db.TinyInt
  pz_ablehnungsgrund     Int?      @db.SmallInt
  id                     BigInt?
  gaststudent            Int?      @db.TinyInt
  hoererstatus           Int?      @db.TinyInt
  vorbereitung           Int?      @db.UnsignedInt
  nachbereitung          Int?      @db.UnsignedInt
  referenzid2            BigInt?
  buchung_bestaetigt     Int?      @db.TinyInt
  bestaetigt             Int?      @db.TinyInt
  stornierungsdatum      DateTime? @db.DateTime(0)
  stornierung_bestaetigt DateTime? @db.DateTime(0)
  status                 Int?      @db.SmallInt
  deleted                DateTime? @db.DateTime(0)
  deleted_user           BigInt?
  material_versand       Int?      @db.TinyInt
  notice                 String?   @db.Text
  klasse                 BigInt?

  @@index([kid], map: "kid")
  @@index([kid], map: "kid_2")
  @@index([kid], map: "kid_3")
  @@index([sid], map: "sid")
  @@index([sid], map: "sid_2")
  @@index([sid], map: "sid_3")
}

model kb_kursangebot_tickets_deleted {
  kid                    BigInt    @default(0)
  referenzid             BigInt    @default(0)
  referenzid2            BigInt
  buchung_bestaetigt     Boolean?
  bestaetigt             Boolean?
  stornierungsdatum      DateTime? @db.DateTime(0)
  stornierung_bestaetigt DateTime? @db.DateTime(0)
  status                 Int?      @db.SmallInt
  abgebucht              Boolean?  @default(false)
  zahlungsmodell         BigInt?   @default(0)
  zahlungsweise          BigInt?   @default(0)
  sid                    BigInt    @default(0)
  datum                  DateTime? @db.DateTime(0)
  user                   BigInt    @default(0)
  ip                     String?   @db.VarChar(15)
  typ                    Boolean   @default(false)
  evaluierung            BigInt    @default(0)
  id                     BigInt    @id @default(autoincrement())
  pz                     Boolean   @default(true)
  pz_ablehnungsgrund     Int       @default(0) @db.SmallInt
  gaststudent            Boolean
  hoererstatus           Int?      @db.TinyInt
  vorbereitung           Int?      @db.UnsignedInt
  nachbereitung          Int?      @db.UnsignedInt
  material_versand       Boolean

  @@index([kid], map: "kid")
  @@index([referenzid], map: "referenzid")
  @@index([sid], map: "sid")
  @@index([user], map: "user")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model kb_kursangebot_tickets_status {
  id BigInt?
  de String? @db.VarChar(255)
  en String? @db.VarChar(255)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model kb_kursangebot_typen {
  id   BigInt  @default(0)
  name String? @db.VarChar(50)

  @@ignore
}

model kb_kursangebot_vorlesung {
  id                  BigInt    @id @default(autoincrement())
  kursid              BigInt    @default(0)
  referenzid          BigInt
  von                 DateTime? @db.Time(0)
  bis                 DateTime? @db.Time(0)
  beginn              DateTime? @db.Date
  ende                DateTime? @db.Date
  bez_vorlesung       String?   @db.VarChar(255)
  standort            BigInt?
  raum1               BigInt?
  raum2               BigInt?
  dozent1             BigInt?
  dozent2             BigInt?
  unterrichtssprache  String?   @db.VarChar(100)
  zyklus              Int?      @default(1) @db.TinyInt
  anwesenheitspflicht Int?      @default(1) @db.TinyInt
  dozent_anwesenheit  Int?      @default(0) @db.TinyInt
  dozent_subject      Int?      @default(0) @db.TinyInt
  comment             String?   @db.Text
  modul               BigInt?   @default(0)
  status              BigInt?   @default(0)
  anzahl_stunden      Int       @default(0)
  planungsstatus      Int       @default(0)

  @@index([kursid], map: "kursid")
}

model kb_kursangebot_vorlesung_status {
  id BigInt  @id @default(autoincrement())
  de String? @db.VarChar(100)
  en String? @db.VarChar(100)
}

model kb_kursangebot_zielgruppe {
  id BigInt  @id @default(autoincrement())
  de String? @db.VarChar(255)
  en String? @db.VarChar(255)
}

model kb_kursangebot_zm_details {
  id                         BigInt    @id @default(autoincrement())
  seminarid                  BigInt?   @default(0)
  user                       BigInt?   @default(0)
  erstellt_am                DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  nummer                     String?   @db.VarChar(100)
  kurs                       String?   @db.VarChar(255)
  kurs_zusatz                String?   @db.VarChar(255)
  fruehbuchertermin          String?   @db.VarChar(20)
  fruehbucherbonus           String?   @db.VarChar(20)
  kursgebuehr                Decimal   @default(0.00) @db.Decimal(10, 2)
  anmeldegebuehr             Decimal   @default(0.00) @db.Decimal(10, 2)
  pruefungsgebuehr           Decimal   @default(0.00) @db.Decimal(10, 2)
  kursgebuehr_mwst           Decimal   @default(0.00) @db.Decimal(10, 2)
  anmeldegebuehr_mwst        Decimal   @default(0.00) @db.Decimal(10, 2)
  pruefungsgebuehr_mwst      Decimal   @default(0.00) @db.Decimal(10, 2)
  von                        DateTime? @db.Date
  schul_nr                   String?   @db.VarChar(50)
  AGB                        String?   @db.Text
  starttermin                String?   @db.VarChar(20)
  grundkonzept               String?   @db.VarChar(255)
  rhytmus                    String?   @db.VarChar(255)
  massnahme_nr               String?   @db.VarChar(255)
  akquise_status             String?   @db.VarChar(255)
  kursgebuehr_mwst_euro      Decimal   @default(0.00) @db.Decimal(10, 2)
  kursgebuehr_euro           Decimal   @default(0.00) @db.Decimal(10, 2)
  fruehbucherbonus_euro      Decimal   @default(0.00) @db.Decimal(10, 2)
  anmeldegebuehr_mwst_euro   Decimal   @default(0.00) @db.Decimal(10, 2)
  anmeldegebuehr_euro        Decimal   @default(0.00) @db.Decimal(10, 2)
  pruefungsgebuehr_euro      Decimal   @default(0.00) @db.Decimal(10, 2)
  pruefungsgebuehr_mwst_euro Decimal   @default(0.00) @db.Decimal(10, 2)
  insider_discount           Decimal?  @default(0.00) @db.Decimal(10, 2)
}

model kb_kursangebot_zm_zahlungsmodelle {
  id                  BigInt    @id @default(autoincrement())
  user                BigInt?
  erstellt_am         DateTime? @db.DateTime(0)
  name                String?   @db.VarChar(255)
  anmeldegebuehr      Decimal?  @db.Decimal(10, 2)
  anzahlung           Decimal?  @db.Decimal(10, 2)
  anzahl_raten        Int?
  ratenhoehe          Decimal?  @db.Decimal(10, 2)
  gesamtgebuehr       Decimal?  @db.Decimal(10, 2)
  rabatt_aufpreis     Decimal?  @db.Decimal(10, 2)
  bildungsfonds       Int?      @db.TinyInt
  prozent_aufpreis    Decimal?  @db.Decimal(10, 2)
  zahlungsmodalitaet  String?   @db.VarChar(100)
  bankbuergschaft     String?   @db.VarChar(100)
  stand               DateTime? @db.Date
  alt                 Int?      @db.TinyInt
  sonstiges           String?   @db.Text
  seminarid           BigInt?
  raten_aufpreis_euro Decimal?  @db.Decimal(10, 2)
}

model kb_kursangebot_zuordnung {
  parent                                                         BigInt
  child                                                          BigInt
  kb_kursangebot_kb_kursangebotTokb_kursangebot_zuordnung_child  kb_kursangebot @relation("kb_kursangebotTokb_kursangebot_zuordnung_child", fields: [child], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "kb_kursangebot_zuordnung_child")
  kb_kursangebot_kb_kursangebotTokb_kursangebot_zuordnung_parent kb_kursangebot @relation("kb_kursangebotTokb_kursangebot_zuordnung_parent", fields: [parent], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "kb_kursangebot_zuordnung_parent")

  @@id([parent, child])
  @@index([child], map: "kb_kursangebot_zuordnung_child")
}

model kb_logs_kurse {
  id    BigInt    @id @default(autoincrement())
  kid   BigInt    @default(0)
  did   BigInt?
  datum DateTime? @db.DateTime(0)
  user  BigInt    @default(0)
  ip    String?   @db.VarChar(15)
  log   String?   @db.VarChar(255)
  typ   Int       @default(0) @db.SmallInt
}

model kb_logs_stundenplan {
  id    BigInt   @id @default(autoincrement())
  spid  BigInt   @default(0)
  datum DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  user  BigInt   @default(0)
  ip    String?  @db.VarChar(15)
  log   String?  @db.VarChar(255)
  typ   Int      @default(0) @db.TinyInt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model kb_raeume_user {
  raumid   BigInt
  userid   BigInt
  position Int

  @@index([raumid, userid], map: "raumid")
  @@ignore
}

model kb_settings_default {
  userid                                         BigInt    @id @default(0)
  dozent                                         BigInt    @default(0)
  kurs                                           BigInt    @default(0)
  klasse                                         BigInt    @default(0)
  standort                                       BigInt    @default(0)
  raum                                           BigInt    @default(0)
  datum                                          DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  beginn                                         DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  ende                                           DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  vorlesungsbeginn                               DateTime? @db.Date
  vorlesungsende                                 DateTime? @db.Date
  semesterbeginn                                 DateTime? @db.Date
  semesterende                                   DateTime? @db.Date
  unterrichtssprache                             String?   @db.VarChar(100)
  TERMIN_UPDATE                                  Int       @default(0) @db.TinyInt
  von                                            DateTime  @default(dbgenerated("'00:00:00'")) @db.Time(0)
  bis                                            DateTime  @default(dbgenerated("'00:00:00'")) @db.Time(0)
  uebersicht_zeitauswahl                         String?   @db.VarChar(20)
  VORLESUNGSZEIT_TERM_1_BEGINN                   String?   @db.VarChar(10)
  VORLESUNGSZEIT_TERM_2_BEGINN                   String?   @db.VarChar(10)
  anzahl_angezeigter_kurse_vorlesungsverzeichnis Int       @default(0) @db.SmallInt
  kalenderansicht                                Int       @db.SmallInt
  termin_edit_sortierung                         Int       @db.TinyInt
  kurse_studiengaenge                            Int       @default(1) @db.SmallInt
}

model kb_standorte {
  id                      BigInt                    @id @unique(map: "id") @default(autoincrement())
  name                    String?                   @db.VarChar(255)
  beschreibung            String?                   @db.Text
  aktiv                   Boolean?
  firma                   String?                   @db.VarChar(255)
  adresszusatz            String?                   @db.VarChar(255)
  ansprechpartner         String?                   @db.VarChar(255)
  strasse                 String?                   @db.VarChar(255)
  strasse2                String?                   @db.VarChar(255)
  plz                     String?                   @db.VarChar(20)
  ort                     String?                   @db.VarChar(255)
  land                    BigInt?
  telefon                 String?                   @db.VarChar(255)
  telefax                 String?                   @db.VarChar(255)
  email                   String?                   @db.VarChar(255)
  web                     String?                   @db.VarChar(255)
  nutzung                 String?                   @db.Text
  status                  String?                   @db.VarChar(16)
  standort                BigInt
  laender                 laender?                  @relation(fields: [land], references: [id], onUpdate: NoAction, map: "kb_standorte_land")
  pm_standorte            pm_standorte              @relation(fields: [standort], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "kb_standorte_standort")
  building_approved_sites building_approved_sites[]
  pm_raeume               pm_raeume[]

  @@index([id], map: "id_2")
  @@index([land], map: "kb_standorte_land")
  @@index([standort], map: "kb_standorte_standort")
}

model kb_statistik_anwesenheit {
  kid            BigInt
  semesterid     BigInt
  pid            BigInt
  stunden_gesamt Float  @db.Float
  stunden_fehl   Float  @db.Float
  fehlquote      Float  @db.Float

  @@id([kid, semesterid, pid])
}

model kb_stundenplan {
  id                                        BigInt     @id @default(autoincrement())
  typ                                       Int        @default(1) @db.TinyInt
  bezeichnung                               String?    @db.VarChar(100)
  beschreibung                              String?    @db.Text
  kursid                                    BigInt?
  referenzid                                BigInt?
  referenzid2                               BigInt
  referenzid3                               BigInt
  username                                  BigInt?
  subject                                   String?    @db.VarChar(400)
  kw                                        Int?       @default(0)
  kw_anfang                                 Int        @default(0)
  kw_ende                                   Int        @default(0)
  terminart                                 Int        @default(0) @db.TinyInt
  sjahr                                     Int        @default(0)
  ejahr                                     Int        @default(0)
  stundenid                                 String?    @db.VarChar(4)
  beginn                                    DateTime?  @db.Date
  ende                                      DateTime?  @db.Date
  von                                       DateTime?  @db.Time(0)
  bis                                       DateTime?  @db.Time(0)
  anzahl_stunden                            Float?     @default(1) @db.Float
  datum                                     DateTime?  @db.Date
  endet_nach                                Int        @default(0) @db.SmallInt
  did                                       BigInt?
  did2                                      BigInt?
  klasse                                    BigInt?
  gruppenid                                 BigInt     @default(0)
  gruppenid2                                BigInt     @default(0)
  gruppenid3                                BigInt     @default(0)
  gruppenid4                                BigInt     @default(0)
  gruppe                                    String?    @db.VarChar(52)
  gruppe_global                             Int        @default(0) @db.TinyInt
  planungssstatus                           Int        @default(0) @db.TinyInt
  einschreibefrist                          DateTime   @default(dbgenerated("'0000-00-00'")) @db.Date
  teilnehmer_min                            Int        @default(0) @db.SmallInt
  teilnehmer_max                            Int        @default(0) @db.SmallInt
  klasse2                                   BigInt     @default(0)
  klasse3                                   BigInt     @default(0)
  klasse4                                   BigInt     @default(0)
  raum                                      BigInt?
  raum2                                     BigInt?
  bez_vorlesung                             String?    @db.VarChar(255)
  einschub                                  String?    @db.VarChar(255)
  fachid                                    BigInt?
  fachid2                                   BigInt?
  fachid3                                   BigInt?
  fachid4                                   BigInt?
  zyklus                                    Int        @default(1) @db.TinyInt
  zyklus_art                                String?    @db.VarChar(10)
  mehrstuendig                              Int        @default(1) @db.SmallInt
  tag                                       Int        @default(0) @db.TinyInt
  termin_typ                                Int?       @db.TinyInt
  se_gruppeaufteilung                       Int        @default(0) @db.TinyInt
  gruppenaufteilung                         Int        @db.TinyInt
  unterrichtssprache                        String?    @db.VarChar(100)
  dozent_anwesenheit                        Int        @default(1) @db.TinyInt
  dozent_subject                            Int        @default(1) @db.TinyInt
  anwesenheitspflicht                       Int        @default(1) @db.TinyInt
  anwesenheit                               Int        @default(0) @db.TinyInt
  stundenausfall                            Int        @default(0) @db.TinyInt
  publish_for_timetable                     Int        @default(1) @db.TinyInt
  planungsstatus                            Int        @default(0) @db.SmallInt
  multi_klasse                              Int        @default(0) @db.TinyInt
  multi_raum                                Int        @default(0) @db.TinyInt
  multi_dozent                              Int        @default(0) @db.TinyInt
  multi_fach                                Int        @default(0) @db.TinyInt
  bemerkung                                 String?    @db.Text
  kommentar                                 String?    @db.VarChar(255)
  NACHHOLTERMIN                             Int?       @default(0) @db.TinyInt
  NACHHOLTERMIN_SET                         DateTime?  @db.Date
  statementid                               BigInt
  ip_folder                                 Int
  block                                     Int        @db.TinyInt
  lecture_series_part_id                    BigInt?
  profil_kb_stundenplan_didToprofil         profil?    @relation("kb_stundenplan_didToprofil", fields: [did], references: [id], onUpdate: NoAction, map: "kb_stundenplan_did")
  profil_kb_stundenplan_did2Toprofil        profil?    @relation("kb_stundenplan_did2Toprofil", fields: [did2], references: [id], onUpdate: NoAction, map: "kb_stundenplan_did2")
  pm_raeume_kb_stundenplan_raumTopm_raeume  pm_raeume? @relation("kb_stundenplan_raumTopm_raeume", fields: [raum], references: [id], onUpdate: NoAction, map: "kb_stundenplan_raum")
  pm_raeume_kb_stundenplan_raum2Topm_raeume pm_raeume? @relation("kb_stundenplan_raum2Topm_raeume", fields: [raum2], references: [id], onUpdate: NoAction, map: "kb_stundenplan_raum2")

  @@index([anwesenheitspflicht, termin_typ, id], map: "anwesenheitspflicht")
  @@index([fachid], map: "fachid")
  @@index([fachid2], map: "fachid2")
  @@index([fachid3], map: "fachid3")
  @@index([fachid4], map: "fachid4")
  @@index([gruppenid], map: "gruppenid")
  @@index([did], map: "kb_stundenplan_did")
  @@index([did2], map: "kb_stundenplan_did2")
  @@index([raum], map: "kb_stundenplan_raum")
  @@index([raum2], map: "kb_stundenplan_raum2")
  @@index([referenzid], map: "referenzid")
  @@index([referenzid2], map: "referenzid2")
  @@index([referenzid3], map: "referenzid3")
}

model kb_stundenplan_deleted {
  id                    Int       @id @default(autoincrement())
  spid                  BigInt
  typ                   Int       @default(1) @db.TinyInt
  bezeichnung           String?   @db.VarChar(100)
  beschreibung          String?   @db.Text
  kursid                BigInt    @default(0)
  referenzid            BigInt    @default(0)
  referenzid2           BigInt
  username              BigInt?
  subject               String?   @db.VarChar(255)
  kw                    Int       @default(0)
  kw_anfang             Int       @default(0)
  kw_ende               Int       @default(0)
  terminart             Int       @default(0) @db.TinyInt
  sjahr                 Int       @default(0)
  ejahr                 Int       @default(0)
  stundenid             String?   @db.VarChar(4)
  beginn                DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  ende                  DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  von                   DateTime? @db.Time(0)
  bis                   DateTime? @db.Time(0)
  anzahl_stunden        Float     @default(0) @db.Float
  datum                 DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  endet_nach            Int       @default(0) @db.SmallInt
  did                   BigInt    @default(0)
  did2                  BigInt    @default(0)
  klasse                BigInt    @default(0)
  gruppenid             BigInt    @default(0)
  gruppenid2            BigInt    @default(0)
  gruppenid3            BigInt    @default(0)
  gruppenid4            BigInt    @default(0)
  gruppe                String?   @db.VarChar(52)
  gruppe_global         Int       @default(0) @db.TinyInt
  planungssstatus       Int       @default(0) @db.TinyInt
  einschreibefrist      DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  teilnehmer_min        Int       @default(0) @db.SmallInt
  teilnehmer_max        Int       @default(0) @db.SmallInt
  klasse2               BigInt    @default(0)
  klasse3               BigInt    @default(0)
  klasse4               BigInt    @default(0)
  raum                  String?   @db.VarChar(30)
  raum2                 String?   @db.VarChar(100)
  bez_vorlesung         String?   @db.VarChar(255)
  einschub              String?   @db.VarChar(255)
  fachid                BigInt    @default(0)
  fachid2               BigInt    @default(0)
  fachid3               BigInt    @default(0)
  fachid4               BigInt    @default(0)
  zyklus                Int       @default(1) @db.TinyInt
  zyklus_art            String?   @db.VarChar(10)
  mehrstuendig          Int       @default(1) @db.SmallInt
  tag                   Int       @default(0) @db.TinyInt
  termin_typ            Int       @default(0) @db.TinyInt
  se_gruppeaufteilung   Int       @default(0) @db.TinyInt
  gruppenaufteilung     Int       @db.TinyInt
  unterrichtssprache    String?   @db.VarChar(100)
  dozent_anwesenheit    Int       @default(0) @db.TinyInt
  dozent_subject        Int       @default(1) @db.TinyInt
  anwesenheitspflicht   Int       @default(1) @db.TinyInt
  anwesenheit           Int       @default(0) @db.TinyInt
  stundenausfall        Int       @default(0) @db.TinyInt
  publish_for_timetable Int       @default(1) @db.TinyInt
  planungsstatus        Int       @default(0) @db.SmallInt
  multi_klasse          Int       @default(0) @db.TinyInt
  multi_raum            Int       @default(0) @db.TinyInt
  multi_dozent          Int       @default(0) @db.TinyInt
  multi_fach            Int       @default(0) @db.TinyInt
  bemerkung             String?   @db.Text
  kommentar             String?   @db.VarChar(255)
  NACHHOLTERMIN         Int       @default(0) @db.TinyInt
  NACHHOLTERMIN_SET     DateTime? @db.Date
  statementid           BigInt
  a_T                   String?   @db.Text
}

model kb_stundenplan_statements {
  id    BigInt   @id
  datum DateTime @db.Date
  sql   String?  @db.Text
}

model kb_termine {
  id                    Int       @id @default(autoincrement())
  typ                   Int       @default(1) @db.TinyInt
  bezeichnung           String?   @db.VarChar(100)
  beschreibung          String?   @db.Text
  kursid                BigInt    @default(0)
  referenzid            BigInt    @default(0)
  referenzid2           BigInt
  referenzid3           BigInt
  username              BigInt?
  subject               String?   @db.VarChar(255)
  kw                    Int       @default(0)
  kw_anfang             Int       @default(0)
  kw_ende               Int       @default(0)
  terminart             Int       @default(0) @db.TinyInt
  sjahr                 Int       @default(0)
  ejahr                 Int       @default(0)
  stundenid             String?   @db.VarChar(4)
  beginn                DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  ende                  DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  von                   DateTime? @db.Time(0)
  bis                   DateTime? @db.Time(0)
  anzahl_stunden        Float     @default(0) @db.Float
  datum                 DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  endet_nach            Int       @default(0) @db.SmallInt
  did                   BigInt    @default(0)
  did2                  BigInt    @default(0)
  trainer1              BigInt
  trainer2              BigInt
  klasse                BigInt    @default(0)
  gruppenid             BigInt    @default(0)
  gruppenid2            BigInt    @default(0)
  gruppenid3            BigInt    @default(0)
  gruppenid4            BigInt    @default(0)
  gruppe                String?   @db.VarChar(52)
  gruppe_global         Int       @default(0) @db.TinyInt
  planungssstatus       Int       @default(0) @db.TinyInt
  einschreibefrist      DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  teilnehmer_min        Int       @default(0) @db.SmallInt
  teilnehmer_max        Int       @default(0) @db.SmallInt
  klasse2               BigInt    @default(0)
  klasse3               BigInt    @default(0)
  klasse4               BigInt    @default(0)
  standortid            BigInt
  raum                  String?   @db.VarChar(30)
  raum2                 String?   @db.VarChar(100)
  bez_vorlesung         String?   @db.VarChar(255)
  einschub              String?   @db.VarChar(255)
  fachid                BigInt    @default(0)
  fachid2               BigInt    @default(0)
  fachid3               BigInt    @default(0)
  fachid4               BigInt    @default(0)
  zyklus                Int       @default(1) @db.TinyInt
  zyklus_art            String?   @db.VarChar(10)
  mehrstuendig          Int       @default(1) @db.SmallInt
  tag                   Int       @default(0) @db.TinyInt
  termin_typ            Int       @default(0) @db.TinyInt
  se_gruppeaufteilung   Int       @default(0) @db.TinyInt
  gruppenaufteilung     Int       @db.TinyInt
  unterrichtssprache    String?   @db.VarChar(100)
  dozent_anwesenheit    Int       @default(0) @db.TinyInt
  dozent_subject        Int       @default(1) @db.TinyInt
  anwesenheitspflicht   Int       @default(1) @db.TinyInt
  anwesenheit           Int       @default(0) @db.TinyInt
  stundenausfall        Int       @default(0) @db.TinyInt
  publish_for_timetable Int       @default(1) @db.TinyInt
  planungsstatus        Int       @default(0) @db.SmallInt
  multi_klasse          Int       @default(0) @db.TinyInt
  multi_raum            Int       @default(0) @db.TinyInt
  multi_dozent          Int       @default(0) @db.TinyInt
  multi_fach            Int       @default(0) @db.TinyInt
  bemerkung             String?   @db.Text
  kommentar             String?   @db.VarChar(255)
  NACHHOLTERMIN         Int       @default(0) @db.TinyInt
  NACHHOLTERMIN_SET     DateTime? @db.Date
  statementid           BigInt
}

model kb_termine_temporaer {
  id      BigInt  @id
  termine String? @db.Text
}

model kb_verlegungen {
  id                        BigInt   @id @default(autoincrement())
  terminid                  BigInt   @default(0)
  nachholtermin             Int      @default(0) @db.TinyInt
  datum_alt                 DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  datum_neu                 DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  stundenid_alt             String?  @db.VarChar(4)
  stundenid_neu             String?  @db.VarChar(4)
  benachrichtigung_message  Int      @default(0) @db.TinyInt
  benachrichtigung_mail     Int      @default(0) @db.TinyInt
  benachrichtigung_news     Int      @default(0) @db.TinyInt
  vorlagenid                BigInt   @default(0)
  benachrichtigung_sms      Int      @default(0) @db.TinyInt
  benachrichtigung_sms_text String?  @db.VarChar(255)
}

model kb_vorlesung_teilnehmer {
  vorlesungsid      BigInt           @default(0)
  teilnehmerid      BigInt           @default(0)
  id                BigInt           @id @default(autoincrement())
  anwesend          Int              @default(1) @db.TinyInt
  attest            Int              @default(0) @db.TinyInt
  abwesenheitsgrund Int?             @db.SmallInt
  hoererstatus      Int?             @default(1) @db.TinyInt
  kb_hoererstatus   kb_hoererstatus? @relation(fields: [hoererstatus], references: [id], onUpdate: NoAction, map: "kb_vorlesung_teilnehmer_hoererstatus")

  @@index([hoererstatus], map: "hoererstatus")
  @@index([teilnehmerid, attest, anwesend], map: "teilnehmerid")
  @@index([vorlesungsid, teilnehmerid], map: "vorlesungsid")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model kb_vorlesung_zuordnung {
  vorlesungsid BigInt @default(0)
  klasse       BigInt @default(0)
  studium      BigInt @default(0)
  schwerpunkt  BigInt @default(0)
  semester     Int    @default(0) @db.SmallInt

  @@ignore
}

model kb_vorlesungen {
  referenzid                           BigInt                                 @id @default(autoincrement())
  kursid                               BigInt?
  kursid2                              BigInt?
  kursid3                              BigInt?
  kursid4                              BigInt?
  bezeichnung                          String?                                @db.VarChar(255)
  gruppe                               String?                                @db.VarChar(255)
  gruppenid                            BigInt?
  dozent                               BigInt?
  dozent2                              BigInt?
  dozent3                              BigInt?
  term                                 Int?                                   @db.TinyInt
  jahr                                 Int?                                   @db.SmallInt
  ip_folder                            BigInt                                 @default(0)
  einschreibefrist_beginn              DateTime?                              @db.Date
  einschreibefrist_ende                DateTime?                              @db.Date
  teilnehmer_min                       Int                                    @db.SmallInt
  teilnehmer_max                       Int                                    @db.SmallInt
  published                            Int                                    @default(1) @db.TinyInt
  pruefungsperiode                     Int?                                   @db.TinyInt
  dozent_2_sws                         Int
  dozent_1_sws                         Int
  eval_von                             DateTime?                              @db.Date
  eval_bis                             DateTime?                              @db.Date
  publish_for_timetable                Int?                                   @db.TinyInt
  raumid                               Int?
  max_absence_percentage               Int?                                   @default(100) @db.TinyInt
  max_unexcused_percentage             Int?                                   @default(100) @db.TinyInt
  compulsory_attendance                Boolean?
  display_absence_quota                Boolean?
  comment                              String?                                @db.Text
  submission_id                        BigInt?                                @unique(map: "submission_id")
  evaluation_start_time                DateTime?                              @db.Time(0)
  evaluation_end_time                  DateTime?                              @db.Time(0)
  professor_quota_weighting            Float                                  @default(100) @db.Float
  exam_type_id                         BigInt?
  noten_select                         noten_select?                          @relation(fields: [exam_type_id], references: [id], onUpdate: NoAction, map: "fk_kb_vorlesungen_exam_type_id")
  kb_gruppen                           kb_gruppen?                            @relation(fields: [gruppenid], references: [id], onUpdate: NoAction, map: "kb_vorlesungen_gruppen_id")
  kb_kursangebot                       kb_kursangebot?                        @relation(fields: [kursid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_kb_vorlesungen_kursid_kb_kursangebot_id")
  submission                           submission?                            @relation(fields: [submission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_series_submission")
  absence_quota                        absence_quota[]
  course_lecture_series_language       course_lecture_series_language[]
  course_lecture_series_lecturer       course_lecture_series_lecturer[]
  course_lecture_series_part           course_lecture_series_part[]
  course_lecture_series_planning_group course_lecture_series_planning_group[]
  course_series_draw_priority          course_series_draw_priority[]
  event_type_lecture                   event_type_lecture[]
  kb_kursangebot_tickets               kb_kursangebot_tickets[]

  @@index([dozent], map: "dozent")
  @@index([dozent2], map: "dozent2")
  @@index([dozent3], map: "dozent3")
  @@index([exam_type_id], map: "fk_kb_vorlesungen_exam_type_id")
  @@index([gruppenid], map: "kb_vorlesungen_gruppen_id")
  @@index([kursid], map: "kursid")
  @@index([kursid2], map: "kursid2")
  @@index([kursid3], map: "kursid3")
  @@index([kursid4], map: "kursid4")
}

model kb_zeitplan {
  id                 BigInt   @id @default(autoincrement())
  name               String?  @db.VarChar(255)
  anzahl             Int      @default(0)
  samstag            Int      @default(0) @db.TinyInt
  stunde1a           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde1e           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde2a           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde2e           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde3a           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde3e           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde4a           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde4e           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde5a           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde5e           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde6a           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde6e           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde7a           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde7e           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde8a           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde8e           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde9a           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde9e           DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde10a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde10e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde11a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde11e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde12a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde12e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde13a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde13e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde14a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde14e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde15a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde15e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde16a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde16e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde17a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde17e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde18a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde18e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde19a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde19e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde20a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde20e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde21a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde21e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde22a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde22e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde23a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde23e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde24a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde24e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde25a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde25e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde26a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde26e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde27a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde27e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde28a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde28e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde29a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde29e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde30a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde30e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde31a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde31e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde32a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde32e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde33a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde33e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde34a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde34e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde35a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde35e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde36a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde36e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde37a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde37e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde38a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde38e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde39a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde39e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde40a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde40e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde41a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde41e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde42a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde42e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde43a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde43e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde44a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde44e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde45a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde45e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde46a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde46e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde47a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde47e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde48a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde48e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde49a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde49e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde50a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde50e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde51a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde51e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde52a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde52e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde53a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde53e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde54a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde54e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde55a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde55e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde56a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde56e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde57a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde57e          DateTime @db.Time(0)
  stunde58a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde58e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde59a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde59e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde60a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde60e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde61a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde61e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde62a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde62e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde63a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde63e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde64a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde64e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde65a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde65e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde66a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde66e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde67a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde67e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde68a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde68e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde69a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde69e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde70a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde70e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde71a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde71e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde72a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde72e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde73a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde73e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde74a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde74e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde75a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde75e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde76a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde76e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde77a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde77e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde78a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde78e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde79a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde79e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde80a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde80e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde81a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde81e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde82a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde82e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde83a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde83e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde84a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde84e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde85a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde85e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde86a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde86e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde87a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde87e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde88a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde88e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde89a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde89e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde90a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde90e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde91a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde91e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde92a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde92e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde93a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde93e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde94a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde94e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde95a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde95e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde96a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde96e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde97a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde97e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde98a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde98e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde99a          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde99e          DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde100a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde100e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde101a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde101e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde102a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde102e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde103a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde103e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde104a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde104e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde105a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde105e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde106a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde106e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde107a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde107e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde108a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde108e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde109a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde109e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde110a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde110e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde111a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde111e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde112a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde112e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde113a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde113e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde114a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde114e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde115a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde115e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde116a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde116e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde117a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde117e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde118a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde118e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde119a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde119e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde120a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde120e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde121a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde121e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde122a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde122e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde123a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde123e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde124a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde124e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde125a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde125e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde126a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde126e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde127a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde127e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde128a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde128e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde129a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde129e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde130a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde130e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde131a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde131e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde132a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde132e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde133a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde133e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde134a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde134e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde135a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde135e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde136a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde136e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde137a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde137e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde138a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde138e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde139a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde139e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde140a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde140e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde141a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde141e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde142a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde142e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde143a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde143e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde144a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde144e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde145a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde145e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde146a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde146e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde147a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde147e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde148a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde148e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde149a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde149e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde150a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde150e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde151a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde151e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde152a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde152e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde153a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde153e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde154a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde154e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde155a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde155e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde156a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde156e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde157a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde157e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde158a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde158e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde159a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde159e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde160a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde160e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde161a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde161e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde162a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde162e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde163a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde163e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde164a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde164e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde165a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde165e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde166a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde166e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde167a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde167e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde168a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde168e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde169a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde169e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde170a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde170e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde171a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde171e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde172a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde172e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde173a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde173e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde174a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde174e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde175a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde175e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde176a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde176e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde177a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde177e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde178a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde178e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde179a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde179e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde180a         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  stunde180e         DateTime @default(dbgenerated("'00:00:00'")) @db.Time(0)
  standard_vorlesung Int      @default(0) @db.TinyInt
}

model key_table_study_area {
  key   String @id @db.VarChar(255)
  label String @db.VarChar(255)
}

model klasse {
  id                             BigInt                           @id @default(autoincrement())
  name                           String?                          @db.VarChar(50)
  bezeichnung                    String?                          @db.VarChar(255)
  studium                        BigInt                           @default(0)
  beginn                         DateTime?                        @db.Date
  ende                           DateTime?                        @db.Date
  ws_beginn                      String?                          @db.VarChar(6)
  ws_ende                        String?                          @db.VarChar(6)
  ss_begin                       String?                          @db.VarChar(6)
  ss_ende                        String?                          @db.VarChar(6)
  hs_beginn                      String?                          @db.VarChar(6)
  hs_ende                        String?                          @db.VarChar(6)
  aktiv                          Int                              @default(1) @db.TinyInt
  status                         BigInt?
  activity_nr                    String?                          @db.VarChar(64)
  studiendauer                   Int?
  studienbeginn_semester         Int?                             @db.TinyInt
  studiendauer_einheit           String?                          @db.VarChar(12)
  chat                           Int                              @default(0) @db.TinyInt
  stid                           BigInt?
  gebuehr                        Float                            @default(0) @db.Float
  waehrung                       String?                          @db.Char(2)
  gebuehr_rabatt                 Float                            @db.Float
  abrechnungszeitraum            String?                          @db.VarChar(10)
  agb                            String?                          @db.VarChar(255)
  pruefungsgebuehr               Float                            @default(0) @db.Float
  pg_waehrung                    String?                          @db.VarChar(3)
  pg_abrechnungszeitraum         String?                          @db.VarChar(20)
  pg_gebuehr_rabatt              String?                          @db.VarChar(10)
  teilnehmeranzahl_maximum       Int?                             @db.SmallInt
  teilnehmeranzahl_minimum       Int?                             @db.SmallInt
  frist_examatrikulation         DateTime                         @default(dbgenerated("'0000-00-00'")) @db.Date
  frist_studienleistungsabgabe   DateTime                         @default(dbgenerated("'0000-00-00'")) @db.Date
  mnr_zaehler                    Int                              @default(1)
  aoc_calculation                Int
  trial_study_max_credits        BigInt?
  planning_type                  Int                              @default(0)
  marketing_date                 DateTime?                        @db.DateTime(0)
  cohort_working_period          cohort_working_period[]
  planning_group                 planning_group[]
  pm_zeitplan                    pm_zeitplan[]
  profil_studium                 profil_studium[]
  specialization_election_cohort specialization_election_cohort[]

  @@index([beginn], map: "beginn")
  @@index([name], map: "name")
  @@index([status], map: "status")
  @@index([id], map: "stg_ID")
}

model klasse_gruppen {
  id          BigInt  @id @default(autoincrement())
  parent      BigInt  @default(0)
  kid         BigInt  @default(0)
  bezeichnung String? @db.VarChar(64)
  dozent      BigInt  @default(0)
}

model klasse_schwerpunktberechnung {
  id Int    @id @default(autoincrement())
  de String @db.VarChar(64)
  en String @db.VarChar(64)
}

model klasse_status {
  id       BigInt  @id @default(autoincrement())
  name_de  String? @db.VarChar(255)
  name_en  String? @db.VarChar(255)
  position Int?
}

model laender {
  id                          BigInt         @id @default(autoincrement())
  name                        String?        @db.VarChar(100)
  nationalitaet               String?        @db.VarChar(100)
  nationalitaet_en            String?        @db.VarChar(100)
  land_en                     String?        @db.VarChar(100)
  laenderkuerzel              String?        @db.Char(2)
  sprache                     String?        @db.VarChar(150)
  kontinent                   String?        @db.VarChar(255)
  vorwahl                     String?        @db.VarChar(255)
  kennummer                   Int            @default(0)
  position                    Int?
  pos                         Int?
  EU                          Boolean        @default(false)
  statistic_country_signature String?        @db.VarChar(3)
  bis_code                    String?        @db.VarChar(100)
  bis_profile                 bis_profile[]
  kb_standorte                kb_standorte[]
}

model laender_tpl {
  id          Int     @id @default(autoincrement())
  laenderid   Int     @unique(map: "laenderid") @default(0)
  tpl         String? @db.Text
  msword_tpl  String? @db.Text
  html_tpl    String? @db.Text
  briefanrede String? @db.Text
  male        String? @db.VarChar(100)
  female      String? @db.VarChar(100)
}

model laender_tpl_vars {
  id       Int      @id @default(autoincrement())
  tplid    Int?
  var      String?  @db.VarChar(255)
  db_field Boolean? @default(false)
}

model laender_tpl_vars_values {
  id          Int     @id @default(autoincrement())
  var_id      Int?
  variant_id  Int?
  language_id Int?
  value       String? @db.VarChar(255)
  tpl_id      Int?
  ref_table   Int?
  ref_field   Int?
}

model laender_tpl_vars_variants {
  id        Int     @id @default(autoincrement())
  name      String? @db.VarChar(255)
  ref_field String? @db.VarChar(255)
}

model language {
  key           String          @id @default("") @db.Char(2)
  name          String?         @db.VarChar(255)
  language_text language_text[]
}

model language_text {
  language_key String   @default("") @db.Char(2)
  group        String   @default("") @db.VarChar(255)
  key          String   @default("") @db.VarChar(255)
  value        String?  @db.VarChar(500)
  language     language @relation(fields: [language_key], references: [key], onDelete: Cascade, map: "language_text_ibfk_1")

  @@id([language_key, group, key])
}

model lecturer_contract {
  id                                                                                                   BigInt                                    @id @default(autoincrement())
  personnel_number                                                                                     String?                                   @db.VarChar(32)
  contract_number                                                                                      String?                                   @db.VarChar(32)
  full_time                                                                                            Int?                                      @db.SmallInt
  contract_status                                                                                      BigInt?
  bis_lecturer_highest_completed_education                                                             String?                                   @db.VarChar(255)
  habilitation                                                                                         Boolean                                   @default(false)
  bis_lecturer_special_qualification                                                                   String?                                   @db.VarChar(255)
  bis_lecturer_main_occupation                                                                         String?                                   @db.VarChar(255)
  profile_id                                                                                           BigInt
  site_id                                                                                              BigInt?
  iban                                                                                                 String?                                   @db.VarChar(255)
  bic                                                                                                  String?                                   @db.VarChar(255)
  bank_name                                                                                            String?                                   @db.VarChar(255)
  bis_social_insurance_number                                                                          String?                                   @db.VarChar(255)
  highest_level_of_education                                                                           String?                                   @db.VarChar(255)
  habilitation_subject_area                                                                            BigInt?
  study_area                                                                                           String?                                   @db.VarChar(255)
  university_with_highest_level_of_education                                                           String?                                   @db.VarChar(255)
  nationality                                                                                          String?                                   @db.VarChar(255)
  graduation_year                                                                                      BigInt?
  bis_lecturer_highest_completed_education_bis_lecturer_highest_completed_educationTolecturer_contract bis_lecturer_highest_completed_education? @relation(fields: [bis_lecturer_highest_completed_education], references: [code], onUpdate: NoAction, map: "lecturer_contract_bis_lecturer_highest_completed_education")
  bis_lecturer_main_occupation_bis_lecturer_main_occupationTolecturer_contract                         bis_lecturer_main_occupation?             @relation(fields: [bis_lecturer_main_occupation], references: [code], onUpdate: NoAction, map: "lecturer_contract_bis_lecturer_main_occupation")
  bis_lecturer_special_qualification_bis_lecturer_special_qualificationTolecturer_contract             bis_lecturer_special_qualification?       @relation(fields: [bis_lecturer_special_qualification], references: [code], onUpdate: NoAction, map: "lecturer_contract_bis_lecturer_special_qualification")
  lecturer_contract_status                                                                             lecturer_contract_status?                 @relation(fields: [contract_status], references: [id], onUpdate: NoAction, map: "lecturer_contract_status")
  profil                                                                                               profil                                    @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_contract_profile")
  pm_standorte                                                                                         pm_standorte?                             @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_contract_site")
  lecturer_contract_employment                                                                         lecturer_contract_employment[]
  lecturer_contract_function                                                                           lecturer_contract_function[]

  @@unique([profile_id, site_id], map: "uk_profile_site")
  @@index([site_id], map: "fk_contract_site")
  @@index([bis_lecturer_highest_completed_education], map: "lecturer_contract_bis_lecturer_highest_completed_education")
  @@index([bis_lecturer_main_occupation], map: "lecturer_contract_bis_lecturer_main_occupation")
  @@index([bis_lecturer_special_qualification], map: "lecturer_contract_bis_lecturer_special_qualification")
  @@index([contract_status], map: "lecturer_contract_status")
}

model lecturer_contract_employment {
  id                                                                                                          BigInt                                                @id @default(autoincrement())
  contract                                                                                                    BigInt
  lecturer_contract_employment_status                                                                         BigInt?
  start_date                                                                                                  DateTime                                              @db.Date
  end_date                                                                                                    DateTime                                              @db.Date
  hours_per_week                                                                                              Float?                                                @db.Float
  bis_lecturer_first_occupation_type_code                                                                     String?                                               @db.VarChar(255)
  bis_lecturer_second_occupation_type_code                                                                    String?                                               @db.VarChar(255)
  bis_lecturer_working_hours                                                                                  String?                                               @db.VarChar(255)
  bis_lecturer_occupation_usage_category                                                                      String?                                               @db.VarChar(255)
  occupation_type                                                                                             Int                                                   @default(1) @db.SmallInt
  capacity                                                                                                    Float?                                                @db.Float
  bis_lecturer_first_occupation_type                                                                          bis_lecturer_first_occupation_type?                   @relation(fields: [bis_lecturer_first_occupation_type_code], references: [code], onUpdate: NoAction, map: "lecturer_contract_employment_bis_lecturer_first_occupation_type")
  bis_lecturer_occupation_usage_category_bis_lecturer_occupation_usage_categoryTolecturer_contract_employment bis_lecturer_occupation_usage_category?               @relation(fields: [bis_lecturer_occupation_usage_category], references: [code], onUpdate: NoAction, map: "lecturer_contract_employment_bis_l_occupation_usage_category")
  bis_lecturer_second_occupation_type                                                                         bis_lecturer_second_occupation_type?                  @relation(fields: [bis_lecturer_second_occupation_type_code], references: [code], onUpdate: NoAction, map: "lecturer_contract_employment_bis_lecturer_second_occupation_type")
  bis_lecturer_working_hours_bis_lecturer_working_hoursTolecturer_contract_employment                         bis_lecturer_working_hours?                           @relation(fields: [bis_lecturer_working_hours], references: [code], onUpdate: NoAction, map: "lecturer_contract_employment_bis_lecturer_working_hours")
  lecturer_contract                                                                                           lecturer_contract                                     @relation(fields: [contract], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_lecturer_contract")
  lecturer_contract_employment_status_lecturer_contract_employmentTolecturer_contract_employment_status       lecturer_contract_employment_status?                  @relation(fields: [lecturer_contract_employment_status], references: [id], onUpdate: NoAction, map: "fk_employment_status")
  lecturer_contract_employment_break                                                                          lecturer_contract_employment_break[]
  lecturer_contract_employment_occupation_usage                                                               lecturer_contract_employment_occupation_usage[]
  lecturer_contract_employment_professor_quota_period                                                         lecturer_contract_employment_professor_quota_period[]
  lecturer_contract_employment_semester                                                                       lecturer_contract_employment_semester[]
  lecturer_contract_employment_study_program                                                                  lecturer_contract_employment_study_program[]
  lectureship                                                                                                 lectureship[]

  @@index([lecturer_contract_employment_status], map: "fk_employment_status")
  @@index([contract], map: "fk_lecturer_contract")
  @@index([bis_lecturer_occupation_usage_category], map: "lecturer_contract_employment_bis_l_occupation_usage_category")
  @@index([bis_lecturer_first_occupation_type_code], map: "lecturer_contract_employment_bis_lecturer_first_occupation_type")
  @@index([bis_lecturer_second_occupation_type_code], map: "lecturer_contract_employment_bis_lecturer_second_occupation_type")
  @@index([bis_lecturer_working_hours], map: "lecturer_contract_employment_bis_lecturer_working_hours")
}

model lecturer_contract_employment_break {
  id                              BigInt                       @id @default(autoincrement())
  lecturer_contract_employment_id BigInt
  start_date                      DateTime                     @db.Date
  end_date                        DateTime                     @db.Date
  lecturer_contract_employment    lecturer_contract_employment @relation(fields: [lecturer_contract_employment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_employment_id")

  @@index([lecturer_contract_employment_id], map: "fk_employment_id")
}

model lecturer_contract_employment_occupation_usage {
  id                                          BigInt                                  @id @default(autoincrement())
  lecturer_contract_employment_id             BigInt
  bis_lecturer_occupation_usage_category_code String?                                 @db.VarChar(255)
  capacity                                    Float?                                  @db.Float
  bis_lecturer_occupation_usage_category      bis_lecturer_occupation_usage_category? @relation(fields: [bis_lecturer_occupation_usage_category_code], references: [code], onDelete: Cascade, onUpdate: NoAction, map: "fk_lecturer_contract_employment_occupation_usage_category_code")
  lecturer_contract_employment                lecturer_contract_employment            @relation(fields: [lecturer_contract_employment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_lecturer_contract_employment_occupation_usage_employment_id")

  @@index([bis_lecturer_occupation_usage_category_code], map: "fk_lecturer_contract_employment_occupation_usage_category_code")
  @@index([lecturer_contract_employment_id], map: "fk_lecturer_contract_employment_occupation_usage_employment_id")
}

model lecturer_contract_employment_professor_quota_period {
  id                           BigInt                       @id @default(autoincrement())
  employment_id                BigInt
  start_date                   DateTime                     @db.Date
  end_date                     DateTime                     @db.Date
  lecturer_contract_employment lecturer_contract_employment @relation(fields: [employment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_employment_professor_quota_period_employment_id")

  @@index([employment_id], map: "fk_employment_professor_quota_period_employment_id")
}

model lecturer_contract_employment_relief {
  id                                           BigInt                                         @id @default(autoincrement())
  name_de                                      String                                         @db.VarChar(255)
  name_en                                      String                                         @db.VarChar(255)
  teaching_units                               Float                                          @db.Float
  period                                       Int
  deleted                                      Boolean                                        @default(false)
  lecturer_contract_employment_relief_site     lecturer_contract_employment_relief_site[]
  lecturer_contract_employment_semester_relief lecturer_contract_employment_semester_relief[]
}

model lecturer_contract_employment_relief_site {
  lecturer_contract_employment_relief_id BigInt
  site_id                                BigInt
  lecturer_contract_employment_relief    lecturer_contract_employment_relief @relation(fields: [lecturer_contract_employment_relief_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_lecturer_contract_employment_relief_site_relief_id")
  pm_standorte                           pm_standorte                        @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_lecturer_contract_employment_relief_site_site_id")

  @@id([lecturer_contract_employment_relief_id, site_id])
  @@index([site_id], map: "fk_lecturer_contract_employment_relief_site_site_id")
}

model lecturer_contract_employment_semester {
  id                                           BigInt                                         @id @default(autoincrement())
  lecturer_contract_employment_id              BigInt
  semester_id                                  Int
  hours_per_week                               Float?                                         @db.Float
  transfer_teaching_units                      Float                                          @default(0) @db.Float
  comment                                      String?                                        @db.Text
  lecturer_contract_employment                 lecturer_contract_employment                   @relation(fields: [lecturer_contract_employment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "lecturer_contract_employment_id")
  ac5_semester                                 ac5_semester                                   @relation(fields: [semester_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "semester_id")
  lecturer_contract_employment_semester_relief lecturer_contract_employment_semester_relief[]

  @@unique([lecturer_contract_employment_id, semester_id], map: "lecturer_contract_employment_id")
  @@index([semester_id], map: "semester_id")
}

model lecturer_contract_employment_semester_relief {
  id                                       BigInt                                @id @default(autoincrement())
  lecturer_contract_employment_relief_id   BigInt
  lecturer_contract_employment_semester_id BigInt
  reduction_teaching_units                 Float                                 @db.Float
  lecturer_contract_employment_relief      lecturer_contract_employment_relief   @relation(fields: [lecturer_contract_employment_relief_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_lecturer_contract_employment_relief_id")
  lecturer_contract_employment_semester    lecturer_contract_employment_semester @relation(fields: [lecturer_contract_employment_semester_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_lecturer_contract_employment_semester")

  @@index([lecturer_contract_employment_relief_id], map: "fk_lecturer_contract_employment_relief_id")
  @@index([lecturer_contract_employment_semester_id], map: "fk_lecturer_contract_employment_semester")
}

model lecturer_contract_employment_status {
  id                           BigInt                         @id @default(autoincrement())
  label_de                     String?                        @db.VarChar(255)
  label_en                     String?                        @db.VarChar(255)
  position                     BigInt?                        @unique(map: "position_idx")
  color_id                     BigInt
  color                        color                          @relation(fields: [color_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "lecturer_contract_employment_status_color")
  lecturer_contract_employment lecturer_contract_employment[]

  @@index([color_id], map: "lecturer_contract_employment_status_color")
}

model lecturer_contract_employment_study_program {
  lecturer_contract_employment_id BigInt
  study_program_id                BigInt
  lecturer_contract_employment    lecturer_contract_employment @relation(fields: [lecturer_contract_employment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "lecturer_contract_employment_study_program_ibfk_1")
  studium                         studium                      @relation(fields: [study_program_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "lecturer_contract_employment_study_program_ibfk_2")

  @@id([lecturer_contract_employment_id, study_program_id])
  @@index([study_program_id], map: "study_program_id")
}

model lecturer_contract_function {
  id                                                                                BigInt                                     @id @default(autoincrement())
  lecturer_contract_id                                                              BigInt
  bis_lecturer_function_code                                                        BigInt
  bis_lecturer_function_code_bis_lecturer_function_codeTolecturer_contract_function bis_lecturer_function_code                 @relation(fields: [bis_lecturer_function_code], references: [code], onDelete: Cascade, onUpdate: NoAction, map: "fk_lecturer_contract_function_bis_lecturer_function_code")
  lecturer_contract                                                                 lecturer_contract                          @relation(fields: [lecturer_contract_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_lecturer_contract_function_lecturer_contract_id")
  lecturer_contract_function_study_program                                          lecturer_contract_function_study_program[] @ignore

  @@index([bis_lecturer_function_code], map: "fk_lecturer_contract_function_bis_lecturer_function_code")
  @@index([lecturer_contract_id], map: "fk_lecturer_contract_function_lecturer_contract_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model lecturer_contract_function_study_program {
  lecturer_contract_function_id BigInt
  study_program_id              BigInt
  lecturer_contract_function    lecturer_contract_function @relation(fields: [lecturer_contract_function_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_lecturer_contract_function_study_program_function_id")
  studium                       studium                    @relation(fields: [study_program_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_lecturer_contract_function_study_program_study_program_id")

  @@index([lecturer_contract_function_id], map: "fk_lecturer_contract_function_study_program_function_id")
  @@index([study_program_id], map: "fk_lecturer_contract_function_study_program_study_program_id")
  @@ignore
}

model lecturer_contract_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model lecturer_contract_status {
  id                BigInt              @id @default(autoincrement())
  label_de          String?             @db.VarChar(255)
  label_en          String?             @db.VarChar(255)
  position          BigInt?             @unique(map: "position_idx")
  color_id          BigInt
  color             color               @relation(fields: [color_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "lecturer_contract_status_color")
  lecturer_contract lecturer_contract[]

  @@index([color_id], map: "lecturer_contract_status_color")
}

model lectureship {
  id                              BigInt                        @id @default(autoincrement())
  year                            BigInt
  term                            BigInt?
  units                           Float?                        @db.Float
  amount_per_unit                 Float?                        @db.Float
  amount_per_exam                 Float?                        @db.Float
  lectureship_status_id           BigInt
  create_date                     DateTime                      @db.Date
  creator_id                      BigInt
  lecturer_id                     BigInt?
  comment                         String?                       @db.Text
  pertinent                       Boolean                       @default(false)
  bonus                           Boolean                       @default(false)
  lecturer_contract_employment_id BigInt?
  leading_site_id                 BigInt?
  lectureship_number              String?                       @unique(map: "idx_unique_invoice_number") @db.VarChar(255)
  lecturer_contract_employment    lecturer_contract_employment? @relation(fields: [lecturer_contract_employment_id], references: [id], onUpdate: NoAction, map: "lectureship_employment_id_lecturer_contract_employment_id")
  profil                          profil?                       @relation(fields: [lecturer_id], references: [id], onUpdate: NoAction, map: "lectureship_lecturer_id")

  @@index([lecturer_contract_employment_id], map: "lectureship_employment_id_lecturer_contract_employment_id")
  @@index([lecturer_id], map: "lectureship_lecturer_id")
}

model lectureship_allowed_outlay {
  lectureship_id        BigInt
  lectureship_outlay_id BigInt

  @@id([lectureship_id, lectureship_outlay_id])
}

model lectureship_course {
  lectureship_id BigInt
  course_id      BigInt
  kb_kursangebot kb_kursangebot @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_lectureship_course_kb_kursangebot")

  @@id([lectureship_id, course_id])
  @@index([course_id], map: "fk_lectureship_course_kb_kursangebot")
}

model lectureship_invoice {
  id                            BigInt   @id @default(autoincrement())
  lectureship_id                BigInt
  lectureship_invoice_status_id BigInt
  amount_per_unit               Float?   @db.Float
  amount_per_exam               Float?   @db.Float
  amount                        Float    @db.Float
  create_date                   DateTime @db.DateTime(0)
  creator_id                    BigInt
  invoice_date                  DateTime @db.DateTime(0)
  comment                       String?  @db.Text
}

model lectureship_invoice_position {
  id                     BigInt   @id @default(autoincrement())
  lectureship_invoice_id BigInt
  lectureship_outlay_id  BigInt
  quantity               BigInt
  multiplier             Float    @db.Float
  amount                 Float?   @db.Float
  create_date            DateTime @db.DateTime(0)
  creator_id             BigInt
  comment                String?  @db.Text
  document_exists        Boolean?
}

model lectureship_invoice_status {
  id        BigInt  @id @default(autoincrement())
  label_key String? @db.VarChar(50)
  color     String? @db.VarChar(20)
}

model lectureship_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model lectureship_outlay {
  id                    BigInt  @id @default(autoincrement())
  kind                  BigInt
  label                 String? @db.VarChar(255)
  multiplier            Float   @default(1) @db.Float
  comment               String? @db.VarChar(255)
  editable_in_community Int     @db.TinyInt
}

model lectureship_setting {
  id                                                                                                           Int                 @id @default(autoincrement())
  currency                                                                                                     String?             @db.VarChar(255)
  amount_per_exam                                                                                              Float?              @db.Float
  amount_per_unit                                                                                              Float?              @db.Float
  lectureship_status_id                                                                                        Int?
  auto_generated_lectureship_status_id                                                                         BigInt?
  auto_generated_course_status_id                                                                              BigInt?
  after_accept_lectureship_status_id                                                                           BigInt?
  after_decline_lectureship_status_id                                                                          BigInt?
  community_show_course_comment                                                                                Boolean             @default(false)
  after_employment_generation_lectureship_status_id                                                            BigInt?
  lecturers_with_internal_employment                                                                           BigInt?
  lectureship_number_template                                                                                  String              @default("{N}") @db.VarChar(255)
  automatic_reject_status_id                                                                                   BigInt?
  lectureship_status_lectureship_setting_after_accept_lectureship_status_idTolectureship_status                lectureship_status? @relation("lectureship_setting_after_accept_lectureship_status_idTolectureship_status", fields: [after_accept_lectureship_status_id], references: [id], onUpdate: NoAction, map: "after_accept_lectureship_status_id_lectureship_status_id")
  lectureship_status_lectureship_setting_after_decline_lectureship_status_idTolectureship_status               lectureship_status? @relation("lectureship_setting_after_decline_lectureship_status_idTolectureship_status", fields: [after_decline_lectureship_status_id], references: [id], onUpdate: NoAction, map: "after_decline_lectureship_status_id_lectureship_status_id")
  lectureship_status_lectureship_setting_after_employment_generation_lectureship_status_idTolectureship_status lectureship_status? @relation("lectureship_setting_after_employment_generation_lectureship_status_idTolectureship_status", fields: [after_employment_generation_lectureship_status_id], references: [id], onUpdate: NoAction, map: "lectureship_setting_employment_generation_status_id")
  course_status                                                                                                course_status?      @relation(fields: [auto_generated_course_status_id], references: [id], onUpdate: NoAction, map: "lectureship_setting_auto_generated_course_status_id")
  lectureship_status_lectureship_setting_auto_generated_lectureship_status_idTolectureship_status              lectureship_status? @relation("lectureship_setting_auto_generated_lectureship_status_idTolectureship_status", fields: [auto_generated_lectureship_status_id], references: [id], onUpdate: NoAction, map: "lectureship_setting_auto_generated_lectureship_status_id")
  lectureship_status_lectureship_setting_lecturers_with_internal_employmentTolectureship_status                lectureship_status? @relation("lectureship_setting_lecturers_with_internal_employmentTolectureship_status", fields: [lecturers_with_internal_employment], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_lecturers_with_internal_employment_status_id")

  @@index([after_accept_lectureship_status_id], map: "after_accept_lectureship_status_id_lectureship_status_id")
  @@index([after_decline_lectureship_status_id], map: "after_decline_lectureship_status_id_lectureship_status_id")
  @@index([lecturers_with_internal_employment], map: "fk_lecturers_with_internal_employment_status_id")
  @@index([auto_generated_course_status_id], map: "lectureship_setting_auto_generated_course_status_id")
  @@index([auto_generated_lectureship_status_id], map: "lectureship_setting_auto_generated_lectureship_status_id")
  @@index([after_employment_generation_lectureship_status_id], map: "lectureship_setting_employment_generation_status_id")
}

model lectureship_setting_community_comment_allowed_status {
  lectureship_status_id  Int
  lectureship_setting_id Int

  @@id([lectureship_status_id, lectureship_setting_id])
}

model lectureship_setting_community_visibility {
  lectureship_status_id  Int
  lectureship_setting_id Int

  @@id([lectureship_status_id, lectureship_setting_id])
}

model lectureship_setting_editable_lectureship_status {
  lectureship_status_id  Int
  lectureship_setting_id Int

  @@id([lectureship_status_id, lectureship_setting_id])
}

model lectureship_setting_outlay {
  id                     Int @id @default(autoincrement())
  lectureship_outlay_id  Int
  lectureship_setting_id Int
}

model lectureship_status {
  id                                                                                                            BigInt                @id @default(autoincrement())
  is_canceled                                                                                                   Boolean               @default(false)
  is_inactive                                                                                                   Boolean               @default(false)
  is_active                                                                                                     Boolean               @default(true)
  label_de                                                                                                      String?               @db.VarChar(255)
  label_en                                                                                                      String?               @db.VarChar(255)
  position                                                                                                      Int                   @default(0)
  color_id                                                                                                      BigInt
  is_released                                                                                                   Boolean               @default(false)
  is_revision                                                                                                   Boolean               @default(false)
  color                                                                                                         color                 @relation(fields: [color_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "lectureship_status_color")
  lectureship_setting_lectureship_setting_after_accept_lectureship_status_idTolectureship_status                lectureship_setting[] @relation("lectureship_setting_after_accept_lectureship_status_idTolectureship_status")
  lectureship_setting_lectureship_setting_after_decline_lectureship_status_idTolectureship_status               lectureship_setting[] @relation("lectureship_setting_after_decline_lectureship_status_idTolectureship_status")
  lectureship_setting_lectureship_setting_after_employment_generation_lectureship_status_idTolectureship_status lectureship_setting[] @relation("lectureship_setting_after_employment_generation_lectureship_status_idTolectureship_status")
  lectureship_setting_lectureship_setting_auto_generated_lectureship_status_idTolectureship_status              lectureship_setting[] @relation("lectureship_setting_auto_generated_lectureship_status_idTolectureship_status")
  lectureship_setting_lectureship_setting_lecturers_with_internal_employmentTolectureship_status                lectureship_setting[] @relation("lectureship_setting_lecturers_with_internal_employmentTolectureship_status")

  @@index([color_id], map: "lectureship_status_color")
}

model license {
  id           BigInt   @id @default(autoincrement())
  license_data String   @db.Text
  added_at     DateTime @db.DateTime(0)
}

model list_search_filter {
  profile_id         BigInt
  list_name          String  @db.VarChar(255)
  json_search_values String? @db.MediumText
  profil             profil  @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_list_search_filter_profile_id")

  @@id([profile_id, list_name])
}

model locale {
  code                                 String                                 @id @default("") @db.VarChar(10)
  de                                   String?                                @db.VarChar(255)
  en                                   String?                                @db.VarChar(255)
  settings_system_internationalisation settings_system_internationalisation[]
}

model login_refresh_token {
  jti         String    @id @db.VarChar(255)
  signing_key String?   @db.VarChar(255)
  user_id     BigInt?
  valid_until DateTime? @db.Timestamp(0)
}

model marketing_automation {
  id                      Int       @id @default(autoincrement())
  active                  Boolean   @default(false)
  name                    String?   @db.VarChar(255)
  base_date_property_name String?   @db.VarChar(255)
  send_after_date         DateTime? @db.DateTime(0)
  send_delay_days         Int?
  email_template_id       Int?
  email_sender            String?   @db.VarChar(255)
  keyword_id              Int?
  status_id               Int?
  site_id                 BigInt?
}

model marketing_automation_condition {
  marketing_automation_id Int
  value                   String?  @db.VarChar(255)
  key                     String   @default("") @db.VarChar(255)
  equal                   Boolean?
  combination_type_id     BigInt?

  @@id([marketing_automation_id, key])
}

model marketing_automation_log {
  id            BigInt    @id @default(autoincrement())
  automation_id BigInt?
  profile_id    BigInt?
  datetime      DateTime? @db.DateTime(0)
  textKey       String?   @db.VarChar(100)
  old_value     String?   @db.VarChar(200)
  new_value     String?   @db.VarChar(200)
}

model merged_letter_data_source_token {
  id              BigInt   @id @default(autoincrement())
  profile_id      BigInt
  token           String?  @unique(map: "merged_letter_data_source_token_unique_token") @db.VarChar(255)
  file_time_stamp String?  @db.VarChar(255)
  created_date    DateTime @db.DateTime(0)
  profil          profil   @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_merged_letter_data_source_token__profile_id")

  @@index([profile_id], map: "fk_merged_letter_data_source_token__profile_id")
}

model mgmt_account {
  id           BigInt    @id @default(autoincrement())
  parentid     BigInt?
  number       BigInt?
  label_de     String?   @db.VarChar(255)
  label_en     String?   @db.VarChar(255)
  type         Int?      @db.TinyInt
  costcentre   BigInt?   @default(0)
  taxrateid    BigInt?
  created_user BigInt?
  created_date DateTime? @db.DateTime(0)
  deleted_user BigInt?
  deleted_date DateTime? @db.DateTime(0)

  @@index([number], map: "number")
  @@index([parentid], map: "parentid")
}

model mgmt_account_company {
  id        BigInt  @id @default(autoincrement())
  companyid BigInt?
  accountid BigInt?
}

model mgmt_account_location {
  accountId  BigInt @default(0)
  locationId BigInt @default(0)

  @@id([accountId, locationId])
}

model mgmt_account_profile {
  id        BigInt  @id @default(autoincrement())
  profileid BigInt?
  accountid BigInt?

  @@index([accountid, profileid], map: "accountid")
  @@index([profileid], map: "profileid")
}

model mgmt_buchung {
  id           BigInt    @id @default(autoincrement())
  fibu         BigInt?
  soll         Float?    @db.Float
  haben        Float?    @db.Float
  saldo        Float?    @db.Float
  datum        DateTime? @db.Date
  text         String?   @db.VarChar(128)
  konto        BigInt?
  kostenstelle BigInt?
  referenz     String?   @db.VarChar(32)
  referenz_id  BigInt?
  created_user BigInt?
  created_date DateTime? @db.DateTime(0)
  hash         String?   @db.VarChar(32)
}

model mgmt_costcentre {
  id     BigInt  @id @default(autoincrement())
  name   String? @db.VarChar(255)
  course BigInt?
  focus  BigInt?
}

model mgmt_currency {
  id             BigInt    @id @default(autoincrement())
  deleteAllowed  Int?      @db.TinyInt
  maincurrency   BigInt?
  currency       BigInt?
  conversionRate Float?    @db.Float
  from           DateTime? @db.Date
  to             DateTime? @db.Date
}

model mgmt_fibu {
  id        BigInt  @id @default(autoincrement())
  object    String? @db.VarChar(16)
  object_id BigInt?
  kreditor  String? @db.VarChar(32)
  debitor   String? @db.VarChar(32)
  saldo     Float?  @db.Float
}

model mgmt_konten {
  id           BigInt    @id
  parent       BigInt    @default(0)
  position     Int       @default(1) @db.TinyInt
  de           String?   @db.VarChar(255)
  en           String?   @db.VarChar(255)
  aktiv        Int       @default(0) @db.TinyInt
  type         Int       @db.SmallInt
  verteilung   Int       @default(1) @db.TinyInt
  CREATED      DateTime  @db.DateTime(0)
  CREATED_USER BigInt
  DELETED      DateTime? @db.DateTime(0)
  DELETED_USER BigInt

  @@index([parent], map: "parent")
}

model mgmt_payment_model {
  study_program_id BigInt
  payment_model_id BigInt

  @@id([study_program_id, payment_model_id])
}

model mgmt_reminder {
  id               BigInt    @id @default(autoincrement())
  amount           Decimal   @db.Decimal(10, 2)
  profile_id       BigInt
  run_id           BigInt
  transaction_id   BigInt
  reminder_level   Int       @db.TinyInt
  reminder_duedate DateTime? @db.Date
  print_count      Int       @default(0)
  prior_duedate    DateTime? @db.Date
  deleted_date     DateTime? @db.Date

  @@index([transaction_id, reminder_level], map: "transaction_id")
}

model mgmt_reminder_run {
  id           BigInt    @id @default(autoincrement())
  affected     BigInt?
  created_date DateTime? @db.Date
  created_user BigInt
  site_id      Int?
}

model mgmt_settings {
  id                   Int      @id @default(0)
  spesen               BigInt?  @default(0)
  bgebuehr             BigInt?  @default(0)
  anzahlung            BigInt?  @default(0)
  restbetrag           BigInt?  @default(0)
  rate1                Int?     @default(0)
  rate2                Int?     @default(0)
  lastminute           Int?     @default(0)
  mahnungsfrist        Int?     @default(0)
  reminder1            BigInt?  @default(0)
  reminder2            BigInt?  @default(0)
  reminder3            BigInt?
  charge               BigInt?
  subscription_account BigInt?
  subscription_amount  Decimal? @db.Decimal(10, 2)
  subscription_periode Int?
}

model mgmt_settings_bank {
  id          BigInt  @id @default(autoincrement())
  institution String? @db.VarChar(100)
  knr         String? @db.VarChar(20)
  blz         String? @db.VarChar(40)
  iban        String? @db.VarChar(40)
  bic         String? @db.VarChar(40)
  land        BigInt?
  location    BigInt? @default(0)
}

model mgmt_subscription {
  profile_id   BigInt   @id
  since_date   DateTime @db.Date
  created_date DateTime @db.Date
  created_user BigInt
}

model mgmt_subscription_invoice {
  id             BigInt    @id @default(autoincrement())
  run_id         BigInt
  profile_id     BigInt
  transaction_id BigInt
  since_date     DateTime  @db.Date
  amount         Decimal   @db.Decimal(10, 2)
  discount       Decimal   @db.Decimal(10, 2)
  canceled_date  DateTime? @db.Date
  canceled_user  BigInt?
}

model mgmt_subscription_run {
  id                  BigInt   @id @default(autoincrement())
  year                String?  @db.VarChar(4)
  booking_date        DateTime @db.Date
  creditor_account_id BigInt
  discount_id         BigInt?
  booking_text        String?  @db.Text
  amount_eur          Decimal  @db.Decimal(10, 2)
  amount_chf          Decimal  @db.Decimal(10, 2)
  created_date        DateTime @db.Date
  created_user        BigInt
}

model mgmt_taxrate {
  id        BigInt   @id @default(autoincrement())
  tax       Decimal? @db.Decimal(20, 2)
  accountid BigInt?
  type      String?  @db.Char(1)
}

model mgmt_transaction {
  id        BigInt   @id @default(autoincrement())
  detailid  BigInt?
  type      String?  @db.Char(1)
  accountid BigInt?
  amount    Decimal? @db.Decimal(10, 2)

  @@index([detailid, type], map: "detailid")
}

model mgmt_transaction_import {
  id            BigInt  @id @default(autoincrement())
  date          String? @db.VarChar(30)
  amount        Float?
  text          String? @db.Text
  account       String? @db.VarChar(255)
  importId      BigInt?
  transactionId BigInt?
  row           BigInt?
  hash          String? @db.VarChar(32)
}

model mgmt_transaction_import_statistic {
  id           BigInt    @id @default(autoincrement())
  importType   BigInt?
  successful   BigInt?
  failed       BigInt?
  duplicate    BigInt?
  overall      BigInt?
  siteId       Int?      @db.TinyInt
  fileName     String?   @db.VarChar(255)
  importDate   DateTime? @db.Date
  created_user BigInt?
}

model mgmt_transactiondetails {
  id                BigInt    @id @default(autoincrement())
  costcentre        BigInt?
  text              String?   @db.Text
  date              DateTime? @db.DateTime(0)
  discount          Decimal?  @default(0.00) @db.Decimal(10, 2)
  reminderLevel     Int?      @default(0) @db.TinyInt
  contraEntry       BigInt?   @default(0)
  created_user      BigInt?
  created_date      DateTime? @db.DateTime(0)
  hash              String?   @db.VarChar(32)
  courseId          BigInt?   @default(0)
  invoiceNumber     String?   @db.VarChar(30)
  dueDate           DateTime? @db.Date
  bookingType       Int?
  bookingTypeNumber Int?
  bookingUserStatus BigInt?
  number            BigInt?
  year              Int?
  site              Int?      @db.TinyInt
  status            BigInt?

  @@index([contraEntry], map: "contraEntry")
  @@index([invoiceNumber], map: "invoiceNumber")
}

model mgmt_tutor_charge {
  profile_id BigInt   @id
  charge     Decimal? @db.Decimal(10, 2)
}

model mgmt_tutor_duty_lecture {
  confirm_id BigInt
  lecture_id BigInt
  profile_id BigInt
  amount     Decimal @default(0.00) @db.Decimal(10, 2)

  @@id([lecture_id, profile_id])
}

model mgmt_tutor_expense {
  id             BigInt    @id @default(autoincrement())
  course_id      BigInt
  lecture_id     BigInt?
  created_user   BigInt
  created_date   DateTime  @db.Date
  amount         Decimal   @db.Decimal(10, 2)
  currency_id    BigInt?
  text           String?   @db.Text
  confirm_date   DateTime? @db.Date
  confirm_user   BigInt?
  confirm_status Int       @default(1) @db.TinyInt
  tutor_id       BigInt
  transaction_id BigInt?
}

model mgmt_tutor_expense_status {
  id BigInt  @id
  de String? @db.VarChar(255)
  en String? @db.VarChar(255)
}

model mobility_online_configuration {
  id                                                                         BigInt           @id @default(autoincrement())
  active                                                                     Boolean          @default(false)
  label                                                                      String           @db.VarChar(255)
  home_address                                                               Int?
  emergency_address                                                          Int?
  study_address                                                              Int?
  language                                                                   String?          @db.VarChar(255)
  cv_typ_foreign_semester                                                    Int?
  listener_state                                                             Int?             @db.TinyInt
  credit_date                                                                DateTime?        @db.DateTime(0)
  profile_id                                                                 BigInt?
  token                                                                      String?          @db.VarChar(255)
  semester_type                                                              semester_type?   @relation(fields: [cv_typ_foreign_semester], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_mobility_online_cv_typ_foreign_semester_semester_type_id")
  address_type_address_typeTomobility_online_configuration_emergency_address address_type?    @relation("address_typeTomobility_online_configuration_emergency_address", fields: [emergency_address], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_mobility_online_emergency_address_address_type_id")
  address_type_address_typeTomobility_online_configuration_home_address      address_type?    @relation("address_typeTomobility_online_configuration_home_address", fields: [home_address], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_mobility_online_home_address_address_type_id")
  kb_hoererstatus                                                            kb_hoererstatus? @relation(fields: [listener_state], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_mobility_online_listener_state_kb_hoererstatus_id")
  profil                                                                     profil?          @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mobility_online_configuration_profile_id_profil_id")
  address_type_address_typeTomobility_online_configuration_study_address     address_type?    @relation("address_typeTomobility_online_configuration_study_address", fields: [study_address], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_mobility_online_study_address_address_type_id")

  @@index([cv_typ_foreign_semester], map: "fk_mobility_online_cv_typ_foreign_semester_semester_type_id")
  @@index([emergency_address], map: "fk_mobility_online_emergency_address_address_type_id")
  @@index([home_address], map: "fk_mobility_online_home_address_address_type_id")
  @@index([listener_state], map: "fk_mobility_online_listener_state_kb_hoererstatus_id")
  @@index([study_address], map: "fk_mobility_online_study_address_address_type_id")
  @@index([profile_id], map: "mobility_online_configuration_profile_id_profil_id")
}

model mobility_online_configuration_mobility_program {
  mobility_online_id            BigInt
  mobility_program_id           String                        @db.VarChar(255)
  cv_type                       BigInt
  statistic_study_type          BigInt
  study_type                    BigInt
  admin_cv_type                 admin_cv_type                 @relation(fields: [cv_type], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_mobility_program_cv_type_admin_cv_type_id")
  cms_data_statistic_study_type cms_data_statistic_study_type @relation(fields: [statistic_study_type], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_mobility_program_statistic_study_type_statistic_study_type_id")

  @@id([mobility_online_id, mobility_program_id])
  @@index([cv_type], map: "fk_mobility_program_cv_type_admin_cv_type_id")
  @@index([statistic_study_type], map: "fk_mobility_program_statistic_study_type_statistic_study_type_id")
}

model mobility_online_configuration_mobility_status {
  mobility_online_id BigInt
  mobility_status    String          @db.VarChar(255)
  ac5_status         BigInt
  booking_status     BigInt
  dropout_reason     BigInt?
  pm_grad_student    pm_grad_student @relation(fields: [booking_status], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_mobility_status_booking_status_pm_grad_student_id")

  @@id([mobility_online_id, mobility_status])
  @@index([booking_status], map: "fk_mobility_status_booking_status_pm_grad_student_id")
}

model mobility_online_configuration_site {
  mobility_online_configuration_id BigInt
  site_id                          BigInt
  pm_standorte                     pm_standorte @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_mobility_online_site_pm_standorte_id")

  @@id([mobility_online_configuration_id, site_id])
  @@index([site_id], map: "fk_mobility_online_site_pm_standorte_id")
}

model module_offer_studyprogram_focusses {
  id                    BigInt @id @default(autoincrement())
  course_id             BigInt
  studyprogram_focus_id BigInt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model module_version_additional_assignee {
  module_version_id BigInt
  profile_id        BigInt
  noten_modul_desc  noten_modul_desc @relation(fields: [module_version_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_module_version_additional_assignee_subject_version_id")
  profil            profil           @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_module_version_additional_assignee_profile_id")

  @@index([profile_id], map: "fk_module_version_additional_assignee_profile_id")
  @@index([module_version_id], map: "fk_module_version_additional_assignee_subject_version_id")
  @@ignore
}

model module_version_language {
  module_version_id BigInt
  language_id       BigInt
  noten_select      noten_select     @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_module_version_language_language_id")
  noten_modul_desc  noten_modul_desc @relation(fields: [module_version_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_module_version_language_module_version_id")

  @@id([module_version_id, language_id])
  @@index([language_id], map: "fk_module_version_language_language_id")
}

model module_version_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.MediumText
  entity_id BigInt?
}

model moodle_settings {
  id                                BigInt                              @id @default(autoincrement())
  active                            Boolean                             @default(false)
  web_service_url                   String?                             @db.VarChar(255)
  web_service_token                 String?                             @db.VarChar(64)
  log_file_mail_address             String?                             @db.VarChar(255)
  automatic_exam_sync               Boolean                             @default(false)
  release_grades                    Boolean                             @default(false)
  create_course_across_sites        Boolean                             @default(false)
  use_lecture_series_as_course_name Boolean                             @default(false)
  moodle_settings_course_offer_type moodle_settings_course_offer_type[]
  moodle_settings_site              moodle_settings_site[]
}

model moodle_settings_course_offer_type {
  moodle_settings_id   BigInt
  course_offer_type_id BigInt
  moodle_settings      moodle_settings @relation(fields: [moodle_settings_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "moodle_settings_moodle_settings_id")

  @@id([moodle_settings_id, course_offer_type_id])
}

model moodle_settings_site {
  moodle_settings_id BigInt
  site_id            BigInt
  moodle_settings    moodle_settings @relation(fields: [moodle_settings_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_moodle_settings_site_moodle_settings_id")
  pm_standorte       pm_standorte    @relation(fields: [site_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_moodle_settings_site_site_id")

  @@id([moodle_settings_id, site_id])
  @@index([site_id], map: "fk_moodle_settings_site_site_id")
}

model news {
  id                BigInt             @id @default(autoincrement())
  active            Int                @default(0) @db.TinyInt
  author_id         BigInt?
  date_create       DateTime?          @db.Date
  date_edit         DateTime?          @db.Date
  date_show         DateTime?          @db.Date
  date_publish      DateTime?          @db.Date
  date_unpublish    DateTime?          @db.Date
  headline          String?            @db.VarChar(200)
  teaser            String?            @db.Text
  content           String?            @db.Text
  category          BigInt             @default(0)
  link              String?            @db.VarChar(200)
  status            Int                @default(0) @db.TinyInt
  important         Int                @default(0) @db.TinyInt
  profil            profil?            @relation(fields: [author_id], references: [id], onUpdate: NoAction, map: "news_profil_author_id")
  news_teaser_image news_teaser_image?

  @@index([author_id], map: "news_profil_author_id")
}

model news_access_group {
  groupid      BigInt  @id @default(1)
  news_read    Int     @default(0) @db.TinyInt
  news_write   Int     @default(0) @db.TinyInt
  news_delete  Int     @default(0) @db.TinyInt
  news_access  Int     @default(0) @db.TinyInt
  news_publish Boolean @default(false)
}

model news_attachments {
  newsId    BigInt
  fileId    BigInt?
  id        BigInt  @id @default(autoincrement())
  name      String? @db.VarChar(255)
  extension String? @db.VarChar(255)
}

model news_categories {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(255)
}

model news_categories_access_groups {
  categoryId    BigInt
  accessGroupId BigInt

  @@id([categoryId, accessGroupId])
}

model news_categories_closure_table {
  ancestor   Int
  descendant Int
  distance   Int

  @@id([ancestor, descendant])
  @@index([descendant], map: "descendant")
}

model news_cohort {
  news_id   BigInt
  cohort_id BigInt

  @@id([news_id, cohort_id])
  @@index([news_id, cohort_id], map: "news_id")
}

model news_study_program {
  news_id          BigInt
  study_program_id BigInt

  @@id([news_id, study_program_id])
  @@index([news_id, study_program_id], map: "news_id")
}

model news_teaser_image {
  news_id   BigInt @id
  extension String @db.VarChar(255)
  news      news   @relation(fields: [news_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_news_teaser_image_news_id")
}

model nl_abonennten {
  id                BigInt    @id @default(autoincrement())
  projekt           BigInt    @default(0)
  profil            BigInt    @default(0)
  format            String?   @db.VarChar(4)
  ticket            String?   @db.VarChar(32)
  subscribed        DateTime? @db.DateTime(0)
  unsubscribed      DateTime? @db.DateTime(0)
  optin             Int       @default(0) @db.TinyInt
  activated         DateTime? @db.DateTime(0)
  created_user      BigInt    @default(0)
  created_date      DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  subscribed_user   BigInt    @default(0)
  subscribed_date   DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  unsubscribed_user BigInt    @default(0)
  unsubscribed_date DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)

  @@unique([projekt, profil], map: "projekt")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model nl_access_group {
  groupid   BigInt @default(0)
  nl_design Int    @default(0) @db.TinyInt
  nl_text   Int    @default(0) @db.TinyInt
  nl_read   Int    @default(0) @db.TinyInt
  nl_write  Int    @default(0) @db.TinyInt
  nl_send   Int    @default(0) @db.TinyInt
  nl_stat   Int    @default(0) @db.TinyInt
  nl_abo    Int    @default(0) @db.TinyInt
  access    Int    @default(0) @db.TinyInt
  config    Int    @default(0) @db.TinyInt
  projekte  Int    @default(0) @db.TinyInt

  @@index([groupid], map: "groupid")
  @@ignore
}

model nl_area {
  id       BigInt  @id @default(autoincrement())
  layout   BigInt  @default(1)
  de       String? @db.VarChar(64)
  en       String? @db.VarChar(64)
  shorttag String? @db.VarChar(16)

  @@index([layout], map: "layout")
}

model nl_args {
  id         BigInt  @id @default(autoincrement())
  layout     BigInt  @default(0)
  name       String? @db.VarChar(64)
  de         String? @db.VarChar(32)
  en         String? @db.VarChar(32)
  typ        String? @db.VarChar(8)
  position   Int     @default(1)
  standard   String? @db.VarChar(128)
  img_x      Int     @default(0)
  img_y      Int     @default(0)
  dir        String? @db.VarChar(128)
  link_db    String? @db.VarChar(32)
  link_ref   String? @db.VarChar(32)
  link_field String? @db.VarChar(32)

  @@index([layout], map: "layout")
}

model nl_ausgaben {
  id            BigInt    @id @default(autoincrement())
  projekt       BigInt    @default(0)
  ausgabe       String?   @db.VarChar(64)
  lang          String?   @db.Char(2)
  betreff       String?   @db.VarChar(128)
  datum         DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  gesendet      DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  abs_email     String?   @db.VarChar(64)
  abs_name      String?   @db.VarChar(64)
  template      BigInt    @default(1)
  template_args String?   @db.Text
  archiv        Int       @default(0) @db.TinyInt
  filename      String?   @db.VarChar(32)
  perma_link    String?   @db.VarChar(255)

  @@index([archiv], map: "archiv")
  @@index([projekt], map: "projekt")
}

model nl_ausgaben_files {
  id      BigInt  @id @default(autoincrement())
  ausgabe BigInt  @default(0)
  name    String? @db.VarChar(64)
  format  String? @db.VarChar(5)

  @@index([ausgabe], map: "ausgabe")
}

model nl_ausgaben_files_groups {
  fileid  BigInt @default(0)
  groupid BigInt @default(0)

  @@id([fileid, groupid])
}

model nl_ausgaben_lang {
  id      BigInt  @id @default(autoincrement())
  kuerzel String? @db.Char(2)
  name    String? @db.VarChar(32)
}

model nl_border {
  id     BigInt  @id @default(autoincrement())
  name   String? @db.VarChar(128)
  beginn String? @db.Text
  ende   String? @db.Text
}

model nl_bounce {
  versand BigInt   @default(0)
  profil  BigInt   @default(0)
  datum   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  grund   Int      @default(1) @db.TinyInt

  @@id([versand, profil])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model nl_config {
  nl_domain        BigInt  @default(0)
  active           Boolean @default(false)
  nl_abs_name      String? @db.VarChar(255)
  nl_abs_email     String? @db.VarChar(255)
  nl_abs_system    String? @db.VarChar(255)
  nl_data_dir      String? @db.VarChar(255)
  nl_img_dir       String? @db.VarChar(255)
  nl_img_url       String? @db.VarChar(255)
  nl_imagick       String? @db.VarChar(255)
  nl_publish_dir   String? @db.VarChar(255)
  nl_list_count    Int     @default(0) @db.SmallInt
  smtp_host        String? @db.VarChar(255)
  smtp_port        Int     @default(25)
  smtp_helo        String? @db.VarChar(255)
  smtp_user        String? @db.VarChar(255)
  smtp_pass        String? @db.VarChar(255)
  nl_data_url      String? @db.VarChar(255)
  tls_active       Boolean @default(false)
  auth_key_private String? @db.Text
  auth_key_public  String? @db.Text
  auth_key_enabled Int     @default(0) @db.TinyInt
  auth_secret      String? @db.Char(40)

  @@ignore
}

model nl_container {
  id          BigInt  @id @default(autoincrement())
  typ         Int     @default(1) @db.TinyInt
  ausgabe     BigInt  @default(1)
  lang        Int     @default(1)
  name        String? @db.VarChar(64)
  position    Int     @default(1)
  template    BigInt  @default(0)
  border      BigInt  @default(0)
  border_args String? @db.Text
  recordset   BigInt  @default(0)
  contents    Int     @default(1) @db.TinyInt
  landingpage BigInt  @default(0)
}

model nl_container_groups {
  container BigInt @default(0)
  groupid   BigInt @default(0)

  @@id([container, groupid])
}

model nl_groups {
  id      BigInt  @id @default(autoincrement())
  projekt BigInt  @default(0)
  name    String? @db.VarChar(64)
  public  Int     @default(1) @db.TinyInt

  @@index([projekt], map: "projekt")
}

model nl_groups_user {
  abonennt BigInt @default(0)
  groupid  BigInt @default(0)

  @@id([abonennt, groupid])
}

model nl_layout {
  id       BigInt  @id @default(autoincrement())
  name     String? @db.VarChar(255)
  template String? @db.Text
  styles   String? @db.Text
}

model nl_layout_vars {
  id  BigInt  @id @default(autoincrement())
  var String? @db.VarChar(64)
  de  String? @db.VarChar(255)
  en  String? @db.VarChar(255)
}

model nl_links {
  id  BigInt  @id @default(autoincrement())
  url String? @unique(map: "url") @db.VarChar(255)
}

model nl_projects {
  id       BigInt  @id @default(autoincrement())
  name     String? @db.VarChar(64)
  parent   BigInt  @default(0)
  template BigInt  @default(1)
}

model nl_projects_access {
  projekt BigInt @default(0)
  groupid BigInt @default(0)
  read    Int    @default(0) @db.TinyInt
  write   Int    @default(0) @db.TinyInt
  send    Int    @default(0) @db.TinyInt
  stat    Int    @default(0) @db.TinyInt

  @@id([projekt, groupid])
}

model nl_task {
  id             BigInt           @id @default(autoincrement())
  versand        BigInt           @default(0)
  status         Int              @default(0) @db.TinyInt
  start          DateTime?        @db.DateTime(0)
  ende           DateTime?        @db.DateTime(0)
  recipients     String?          @db.MediumText
  email_tracking email_tracking[]

  @@index([versand], map: "versand")
}

model nl_templates {
  id       BigInt  @id @default(autoincrement())
  de       String? @db.VarChar(64)
  en       String? @db.VarChar(64)
  template String? @db.Text
  datasrc  BigInt  @default(0)
}

model nl_text {
  id                                                                                              BigInt                       @id @default(autoincrement())
  folder                                                                                          BigInt?
  name                                                                                            String?                      @db.VarChar(128)
  vorlage                                                                                         String?                      @db.Text
  language                                                                                        String?                      @db.VarChar(2)
  subject                                                                                         String?                      @db.Text
  nl_text_folders                                                                                 nl_text_folders?             @relation(fields: [folder], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "nl_text_nl_text_folders_id")
  admission_procedure_part_admission_procedure_part_register_template_de_idTonl_text              admission_procedure_part[]   @relation("admission_procedure_part_register_template_de_idTonl_text")
  admission_procedure_part_admission_procedure_part_register_template_en_idTonl_text              admission_procedure_part[]   @relation("admission_procedure_part_register_template_en_idTonl_text")
  application_program_application_program_email_assessment_register_template_de_idTonl_text       application_program[]        @relation("application_program_email_assessment_register_template_de_idTonl_text")
  application_program_application_program_email_assessment_register_template_en_idTonl_text       application_program[]        @relation("application_program_email_assessment_register_template_en_idTonl_text")
  application_program_application_program_email_submit_template_de_idTonl_text                    application_program[]        @relation("application_program_email_submit_template_de_idTonl_text")
  application_program_application_program_email_submit_template_en_idTonl_text                    application_program[]        @relation("application_program_email_submit_template_en_idTonl_text")
  digital_signature_document                                                                      digital_signature_document[]
  exam_registration_period_exam_registration_period_text_draft_id_cancellation_deTonl_text        exam_registration_period[]   @relation("exam_registration_period_text_draft_id_cancellation_deTonl_text")
  exam_registration_period_exam_registration_period_text_draft_id_cancellation_enTonl_text        exam_registration_period[]   @relation("exam_registration_period_text_draft_id_cancellation_enTonl_text")
  exam_registration_period_exam_registration_period_text_draft_id_confirmation_deTonl_text        exam_registration_period[]   @relation("exam_registration_period_text_draft_id_confirmation_deTonl_text")
  exam_registration_period_exam_registration_period_text_draft_id_confirmation_enTonl_text        exam_registration_period[]   @relation("exam_registration_period_text_draft_id_confirmation_enTonl_text")
  exam_registration_period_exam_registration_period_text_draft_id_online_cancellation_deTonl_text exam_registration_period[]   @relation("exam_registration_period_text_draft_id_online_cancellation_deTonl_text")
  exam_registration_period_exam_registration_period_text_draft_id_online_cancellation_enTonl_text exam_registration_period[]   @relation("exam_registration_period_text_draft_id_online_cancellation_enTonl_text")
  exam_registration_period_exam_registration_period_text_draft_id_online_confirmation_deTonl_text exam_registration_period[]   @relation("exam_registration_period_text_draft_id_online_confirmation_deTonl_text")
  exam_registration_period_exam_registration_period_text_draft_id_online_confirmation_enTonl_text exam_registration_period[]   @relation("exam_registration_period_text_draft_id_online_confirmation_enTonl_text")
  submission_settings_nl_textTosubmission_settings_comment_notification_template_de_id            submission_settings[]        @relation("nl_textTosubmission_settings_comment_notification_template_de_id")
  submission_settings_nl_textTosubmission_settings_comment_notification_template_en_id            submission_settings[]        @relation("nl_textTosubmission_settings_comment_notification_template_en_id")
  submission_status                                                                               submission_status[]

  @@index([folder], map: "folder")
}

model nl_text_attachement {
  id          BigInt    @id @default(autoincrement())
  draftId     BigInt?
  filename    String?   @db.VarChar(32)
  name        String?   @db.VarChar(255)
  extension   String?   @db.VarChar(5)
  filesize    BigInt?
  upload_date DateTime? @db.DateTime(0)
}

model nl_text_folders {
  id       BigInt    @id @default(autoincrement())
  standort Int?
  name     String?   @db.VarChar(128)
  parent   BigInt?   @default(0)
  nl_text  nl_text[]
}

model nl_tracking {
  versand BigInt   @default(0)
  profil  BigInt   @default(0)
  datum   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)

  @@id([versand, profil])
}

model nl_tracking_links {
  versand BigInt @default(0)
  profil  BigInt @default(0)
  link    BigInt @default(0)

  @@id([versand, profil, link])
}

model nl_vars {
  id         BigInt  @id @default(autoincrement())
  lang       String? @db.Char(2)
  name       String? @db.VarChar(32)
  de         String? @db.VarChar(255)
  en         String? @db.VarChar(255)
  ref_id     String? @db.VarChar(32)
  ref_table  String? @db.VarChar(32)
  ref_field  String? @db.VarChar(32)
  ref_source String? @db.VarChar(64)
  n          String? @db.VarChar(64)
  m          String? @db.VarChar(64)
  w          String? @db.VarChar(64)
  s          String? @db.VarChar(64)
  p          String? @db.VarChar(64)

  @@index([lang], map: "lang")
}

model nl_versand {
  id         BigInt   @id @default(autoincrement())
  ausgabe    BigInt   @default(0)
  msgid      BigInt   @default(0)
  format     String?  @db.VarChar(4)
  priority   Int      @default(0) @db.TinyInt
  typ        String?  @db.VarChar(10)
  status     Int      @default(0) @db.TinyInt
  profil     BigInt   @default(0)
  datum      DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  recipients String?  @db.MediumText
  hash       String?  @db.VarChar(32)

  @@index([ausgabe], map: "ausgabe")
  @@index([msgid], map: "idx_msgid")
}

model noten {
  id                                BigInt                              @id @default(autoincrement())
  sid                               BigInt                              @default(0)
  fachid                            BigInt?
  coursedesc                        BigInt
  element                           BigInt                              @default(0)
  fachcat                           BigInt                              @default(0)
  fachcode                          String?                             @db.VarChar(16)
  fachname                          String?                             @db.VarChar(128)
  term_abroad                       Int                                 @default(0) @db.TinyInt
  transfer                          Int                                 @default(0) @db.TinyInt
  transfer_id                       BigInt
  transfer_type                     Int                                 @default(1)
  university                        String?                             @db.VarChar(128)
  niq                               Int                                 @default(0) @db.TinyInt
  non_curricular                    Int                                 @default(0) @db.TinyInt
  modul                             BigInt                              @default(0)
  modulid                           BigInt                              @default(0)
  modul_exam                        Int                                 @default(0) @db.TinyInt
  modul_parent                      BigInt                              @default(0)
  category                          String?                             @db.VarChar(4)
  modul_parent_id                   String?                             @db.VarChar(10)
  kombination                       BigInt
  datum                             DateTime?                           @db.Date
  dozent                            BigInt                              @default(0)
  dozent_2                          BigInt                              @default(0)
  dozent_3                          BigInt                              @default(0)
  note                              Float                               @default(0) @db.Float
  note_2                            Float                               @default(0) @db.Float
  punkte                            Float                               @default(0) @db.Float
  punkte_2                          Float                               @default(0) @db.Float
  von                               Float                               @default(0) @db.Float
  kommentar                         String?                             @db.Text
  kommentar_en                      String?                             @db.Text
  kommentar_student                 String?                             @db.Text
  semester                          Int                                 @default(1) @db.TinyInt
  semester_text                     String?                             @db.VarChar(12)
  jahr                              Int                                 @default(0)
  term                              Int                                 @default(0) @db.TinyInt
  published                         Int                                 @default(0) @db.TinyInt
  published_date                    DateTime?                           @db.DateTime(0)
  published_user                    BigInt                              @default(0)
  periode                           BigInt                              @default(0)
  pruefung                          BigInt                              @default(0)
  visible                           DateTime?                           @db.Date
  released                          Int                                 @default(1) @db.TinyInt
  released_date                     DateTime?                           @db.DateTime(0)
  typ                               Int                                 @default(1) @db.TinyInt
  lform                             Int                                 @default(1) @db.TinyInt
  grade                             String?                             @db.Char(3)
  grade_2                           String?                             @db.Char(3)
  credits                           Float                               @default(0) @db.Float
  credits_2                         Float                               @default(0) @db.Float
  result                            String?                             @db.VarChar(3)
  created                           DateTime?                           @db.Date
  zusatz_1                          String?                             @db.VarChar(128)
  zusatz_2                          String?                             @db.VarChar(128)
  zusatz_3                          String?                             @db.VarChar(128)
  zusatz_4                          String?                             @db.VarChar(128)
  company_id                        BigInt?
  company_name                      String?                             @db.VarChar(255)
  publication                       Int                                 @default(1) @db.TinyInt
  lock_flag                         Int                                 @default(0) @db.TinyInt
  dispensiert                       Int                                 @default(0) @db.TinyInt
  attest                            Int                                 @default(0) @db.TinyInt
  hash                              String?                             @db.VarChar(10)
  enrol_typ                         String?                             @db.VarChar(10)
  enrol_date                        DateTime?                           @db.DateTime(0)
  enrol_year                        Int                                 @default(0)
  enrol_term                        Int                                 @default(0) @db.TinyInt
  gebdatum                          String?                             @db.VarChar(255)
  stst_Matrikelnummer               String?                             @db.VarChar(50)
  stg_Name                          String?                             @db.VarChar(50)
  no_Note1                          Int?
  mo_g_o_h                          String?                             @db.VarChar(50)
  notedatum                         String?                             @db.VarChar(255)
  mo_Name                           String?                             @db.VarChar(50)
  mo_ID                             Int                                 @default(0)
  fa_semester                       Int?
  fa_Name                           String?                             @db.VarChar(50)
  erstesdatum                       String?                             @db.VarChar(255)
  stinf_2Fremdsprache               Int?
  fa_Sprache_anh                    String?                             @db.VarChar(50)
  fa_Gw                             Int?
  no_Note2                          Int?
  no_Note3                          Int?
  no_janein                         Boolean                             @default(false)
  sid_new                           BigInt                              @default(0)
  forceRecalc                       Boolean                             @default(false)
  achievement_reason_id             BigInt?
  rating                            Int?
  company_contact                   String?                             @db.VarChar(128)
  annotation_id                     BigInt?
  replacement_title_de              String?                             @db.VarChar(255)
  replacement_title_en              String?                             @db.VarChar(255)
  is_extracurricular_transfer       Int                                 @default(0) @db.TinyInt
  grade_annotation                  grade_annotation?                   @relation(fields: [annotation_id], references: [id], onUpdate: NoAction, map: "fk_noten_grade_annotation")
  grade_request_form_profile        grade_request_form_profile[]
  noten_submission                  noten_submission[]
  noten_submission_oral_examination noten_submission_oral_examination[]

  @@index([category], map: "category")
  @@index([coursedesc], map: "coursedesc")
  @@index([element], map: "element")
  @@index([fa_Name], map: "fa_Name")
  @@index([fa_Sprache_anh], map: "fa_Sprache_anh")
  @@index([fachid], map: "fachid")
  @@index([annotation_id], map: "fk_noten_grade_annotation")
  @@index([forceRecalc], map: "grade_recalc_index")
  @@index([fachid, note, jahr, term], map: "idx_fachid_note_jahr_term")
  @@index([note, pruefung], map: "idx_note_pruefung")
  @@index([sid, fachid, note], map: "idx_sid_fachid_note")
  @@index([kombination], map: "kombination")
  @@index([modul], map: "modul")
  @@index([modul_exam], map: "modul_exam")
  @@index([modul_parent, modul_parent_id], map: "modul_parent")
  @@index([modulid], map: "modulid")
  @@index([non_curricular], map: "non_curricular")
  @@index([note], map: "note")
  @@index([datum], map: "noten_datum")
  @@index([pruefung], map: "pruefung")
  @@index([sid], map: "sid")
  @@index([transfer_id], map: "transfer_id")
  @@index([transfer_type], map: "transfer_type")
}

model noten_access_group {
  groupid                             BigInt  @id @default(1)
  fb_read                             Int     @default(0) @db.TinyInt
  fb_write                            Int     @default(0) @db.TinyInt
  fb_add                              Int     @default(0) @db.TinyInt
  fb_delete                           Int     @default(0) @db.TinyInt
  c_read                              Int     @default(0) @db.TinyInt
  c_write                             Int     @default(0) @db.TinyInt
  nb_read                             Int     @default(0) @db.TinyInt
  nb_write                            Int     @default(0) @db.TinyInt
  p_read                              Int     @default(0) @db.TinyInt
  p_create                            Int     @default(0) @db.TinyInt
  p_delete                            Int     @default(0) @db.TinyInt
  p_write                             Int     @default(0) @db.TinyInt
  p_logs                              Int     @default(0) @db.TinyInt
  p_release                           Int     @default(0) @db.TinyInt
  p_release_write                     Int     @default(0) @db.TinyInt
  nk_read                             Int     @default(0) @db.TinyInt
  nk_write                            Int     @default(0) @db.TinyInt
  z_create                            Int     @default(0) @db.TinyInt
  e_write                             Int     @default(0) @db.TinyInt
  n_access                            Int     @default(0) @db.TinyInt
  lang                                Int     @default(0) @db.TinyInt
  schedule                            Int     @default(0) @db.TinyInt
  online_exam_management              Boolean @default(false)
  nb_transfer                         Int     @default(0) @db.TinyInt
  fb_release                          Boolean @default(false)
  exam_registration_period_management Int     @default(0) @db.TinyInt
}

model noten_average {
  id          BigInt  @id @default(autoincrement())
  version     BigInt  @default(0)
  klasse      BigInt  @default(0)
  studium     BigInt  @default(0)
  bez_de      String? @db.VarChar(60)
  bez_en      String? @db.VarChar(60)
  bez_es      String? @db.VarChar(60)
  bez_fr      String? @db.VarChar(60)
  kuerzel     String? @db.VarChar(15)
  typ         Int     @default(1) @db.TinyInt
  faecher     String? @db.Text
  verrechnung Float   @default(0) @db.Float

  @@index([version], map: "version")
}

model noten_cache {
  id      BigInt   @id @default(autoincrement())
  studium BigInt
  jahr    Int
  term    Int      @db.TinyInt
  typ     Int      @default(1) @db.TinyInt
  anzahl  Int
  valid   DateTime @db.Date
  cache   String?  @db.LongText

  @@unique([studium, jahr, term, typ], map: "studium")
  @@index([valid], map: "valid")
}

model noten_desc_outline {
  id         BigInt  @id @default(autoincrement())
  fachid     BigInt?
  modulid    BigInt?
  coursedesc BigInt?
  position   Int?    @default(1)
  title      String? @db.VarChar(255)
  content    String? @db.Text

  @@index([fachid, modulid, coursedesc], map: "fachid")
}

model noten_desc_outline_files {
  id      BigInt  @id @default(autoincrement())
  outline BigInt
  name    String? @db.VarChar(255)

  @@index([outline], map: "outline")
}

model noten_einstellungen {
  id               BigInt @id @default(autoincrement())
  version          BigInt @default(0)
  klasse           BigInt @default(0)
  studium          BigInt @default(0)
  bewertung        Int    @default(0) @db.TinyInt
  nkey             BigInt @default(0)
  retry            Int    @default(0) @db.TinyInt
  failed_bad       Int    @default(0) @db.TinyInt
  failed_allowed   Int    @default(0) @db.TinyInt
  failed_prozent   Int    @default(0) @db.TinyInt
  show_average_all Int?   @db.TinyInt
  show_average_sep Int?   @db.TinyInt
  show_gpa_all     Int?   @db.TinyInt
  show_gpa_sep     Int?   @db.TinyInt
  show_credits_all Int?   @db.TinyInt
  show_credits_sep Int?   @db.TinyInt

  @@index([version], map: "version")
}

model noten_electives {
  sid        BigInt
  element    BigInt
  fachid     BigInt
  coursedesc BigInt
  term       Int    @default(0) @db.TinyInt
  jahr       Int

  @@id([sid, element, term, jahr])
  @@index([coursedesc], map: "coursedesc")
  @@index([fachid], map: "fachid")
}

model noten_fachbereich {
  id             BigInt          @id @default(autoincrement())
  standort       Int?
  faculty        BigInt          @default(1)
  name           String?         @db.Char(64)
  position       Int             @default(0) @db.TinyInt
  created_user   BigInt?
  created_date   DateTime        @default(dbgenerated("'0000-00-00'")) @db.Date
  delete_user    BigInt?
  delete_date    DateTime?       @db.Date
  moduleCategory Int?            @db.SmallInt
  noten_faecher  noten_faecher[]

  @@index([faculty], map: "faculty")
  @@index([standort], map: "standort")
}

model noten_faecher {
  id                                                                          BigInt                  @id @default(autoincrement())
  alias                                                                       BigInt                  @default(0)
  aktiv                                                                       Int                     @default(1) @db.TinyInt
  fach                                                                        String?                 @db.VarChar(90)
  course                                                                      String?                 @db.VarChar(90)
  bez_es                                                                      String?                 @db.VarChar(90)
  bez_fr                                                                      String?                 @db.VarChar(90)
  bez_course                                                                  String?                 @db.VarChar(64)
  deleted                                                                     DateTime?               @db.Date
  teilnahme                                                                   Int                     @default(1) @db.TinyInt
  kuerzel                                                                     String?                 @db.VarChar(32)
  gewichtung                                                                  Float                   @default(1) @db.Float
  credits                                                                     Float                   @default(2) @db.Float
  kategorie                                                                   BigInt?
  dozent                                                                      BigInt                  @default(0)
  typ                                                                         Int                     @default(1) @db.TinyInt
  vorlesung                                                                   Int                     @default(1) @db.TinyInt
  seminar                                                                     Int                     @default(0) @db.TinyInt
  uebung                                                                      Int                     @default(0) @db.TinyInt
  lehrprojekt                                                                 Int                     @default(0) @db.TinyInt
  coursedesc                                                                  BigInt                  @default(0)
  noten_fachbereich                                                           noten_fachbereich?      @relation(fields: [kategorie], references: [id], onUpdate: NoAction, map: "noten_faecher_category_id")
  instrument                                                                  instrument[]
  kb_kursangebot                                                              kb_kursangebot[]
  submission_assignment_noten_faecherTosubmission_assignment_grade_subject_id submission_assignment[] @relation("noten_faecherTosubmission_assignment_grade_subject_id")
  submission_assignment_noten_faecherTosubmission_assignment_oral_subject_id  submission_assignment[] @relation("noten_faecherTosubmission_assignment_oral_subject_id")

  @@index([alias, kategorie], map: "idx_alias_kategorie")
  @@index([kuerzel], map: "kuerzel")
  @@index([kategorie], map: "noten_faecher_category_id")
}

model noten_faecher_desc {
  id                                  BigInt                                @id @default(autoincrement())
  fachid                              BigInt?
  modul                               BigInt                                @default(0)
  studium                             BigInt                                @default(0)
  name                                String?                               @db.VarChar(32)
  aktiv                               Int                                   @default(1) @db.TinyInt
  bez_de                              String?                               @db.VarChar(255)
  bez_en                              String?                               @db.VarChar(255)
  bez_es                              String?                               @db.VarChar(255)
  bez_fr                              String?                               @db.VarChar(255)
  bez_modul                           String?                               @db.VarChar(64)
  bez_course                          String?                               @db.VarChar(64)
  dozent                              BigInt?
  dozent2                             BigInt?
  frequency                           Int                                   @default(1) @db.TinyInt
  datum                               DateTime?                             @db.Date
  language                            Int?                                  @db.TinyInt
  ptyp                                BigInt?
  kategorie                           Int                                   @default(1) @db.TinyInt
  examtype                            String?                               @db.VarChar(12)
  ctyp                                BigInt?
  ctyp_ext                            BigInt                                @default(0)
  semester                            Int                                   @default(0) @db.TinyInt
  laenge                              Int                                   @default(1) @db.TinyInt
  gewichtung                          Float                                 @default(0) @db.Float
  credits                             Float                                 @default(0) @db.Float
  credits_2                           Float                                 @default(0) @db.Float
  sws                                 Float                                 @default(0) @db.Float
  c_pre                               String?                               @db.VarChar(255)
  c_sub                               String?                               @db.VarChar(255)
  wissen                              String?                               @db.Text
  beschreibung                        String?                               @db.Text
  ziele                               String?                               @db.Text
  kommentar                           String?                               @db.Text
  elearning                           String?                               @db.Text
  vorbereitung                        String?                               @db.Text
  vorlesung                           Int                                   @default(0) @db.TinyInt
  seminar                             Int                                   @default(0) @db.TinyInt
  tutorial                            Int                                   @default(0) @db.TinyInt
  uebung                              Int                                   @default(0) @db.TinyInt
  lehrprojekt                         Int                                   @default(0) @db.TinyInt
  virtuell                            Int                                   @db.TinyInt
  edit_datum                          DateTime?                             @db.Date
  edit_autor                          BigInt?
  online_exam                         Boolean?
  exam_duration                       Int?
  statusReleased                      Boolean                               @default(false)
  wissen_en                           String?                               @db.Text
  beschreibung_en                     String?                               @db.Text
  ziele_en                            String?                               @db.Text
  kommentar_en                        String?                               @db.Text
  elearning_en                        String?                               @db.Text
  vorbereitung_en                     String?                               @db.Text
  additional_1                        String?                               @db.Text
  additional_1_en                     String?                               @db.Text
  additional_2                        String?                               @db.Text
  additional_2_en                     String?                               @db.Text
  asws                                Float?                                @db.Float
  course_offer_type_id                Int                                   @default(1)
  exam_approval                       Boolean                               @default(true)
  teaching_units                      Float?                                @db.Float
  teaching_units_spent                Float?                                @db.Float
  exam_points                         Float                                 @default(100) @db.Float
  quarter                             Int                                   @default(0) @db.TinyInt
  compulsory_attendance               Int?                                  @default(1) @db.TinyInt
  noten_select                        noten_select?                         @relation(fields: [ctyp], references: [id], onUpdate: NoAction, map: "noten_faecher_desc_course_type")
  kb_kursangebot                      kb_kursangebot[]
  noten_faecher_desc_equipment        noten_faecher_desc_equipment[]
  online_exam_module_enrolment        online_exam_module_enrolment[]
  subject_version_additional_assignee subject_version_additional_assignee[] @ignore
  subject_version_exam_type           subject_version_exam_type[]
  subject_version_language            subject_version_language[]

  @@index([fachid], map: "fachid")
  @@index([modul], map: "modul")
  @@index([ctyp], map: "noten_faecher_desc_course_type")
  @@index([statusReleased], map: "statusReleased")
  @@index([studium], map: "studium")
}

model noten_faecher_desc_aoc {
  descid  BigInt
  aoc     BigInt
  studium BigInt

  @@id([descid, aoc])
  @@index([studium], map: "studium")
}

model noten_faecher_desc_books {
  id     BigInt  @id @default(autoincrement())
  descid BigInt  @default(0)
  name   String? @db.Text
  typ    Int     @default(1) @db.TinyInt
  href   String? @db.VarChar(128)
  isbn   String? @db.VarChar(32)

  @@index([descid], map: "descid")
}

model noten_faecher_desc_equipment {
  id                 BigInt             @id @default(autoincrement())
  fach_version_id    BigInt
  equipment_id       BigInt
  exam_equipment     exam_equipment     @relation(fields: [equipment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "noten_faecher_desc_equipment_equipment_id")
  noten_faecher_desc noten_faecher_desc @relation(fields: [fach_version_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "noten_faecher_desc_equipment_fach_version_id")

  @@index([equipment_id], map: "noten_faecher_desc_equipment_equipment_id")
  @@index([fach_version_id], map: "noten_faecher_desc_equipment_fach_version_id")
}

model noten_faecher_desc_files {
  id      BigInt   @id @default(autoincrement())
  descid  BigInt   @default(0)
  name    String?  @db.VarChar(64)
  typ     String?  @db.VarChar(5)
  size    BigInt   @default(0)
  created DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)

  @@index([descid], map: "descid")
}

model noten_faecher_desc_parts {
  id            BigInt         @id @default(autoincrement())
  descid        BigInt         @default(0)
  position      Int            @default(0) @db.TinyInt
  text          String?        @db.VarChar(255)
  anteil        Float          @default(0) @db.Float
  mandatory     Int            @default(0) @db.TinyInt
  typ           Int            @default(1) @db.TinyInt
  nkey          Int            @default(1)
  anzeige       Int            @default(2) @db.TinyInt
  approval_id   BigInt?
  name          String?        @db.VarChar(256)
  pass          Boolean        @default(false)
  exam_approval exam_approval? @relation(fields: [approval_id], references: [id], onUpdate: NoAction, map: "noten_faecher_desc_parts_approval_id")

  @@index([descid], map: "fachid")
  @@index([approval_id], map: "noten_faecher_desc_parts_approval_id")
}

model noten_faecher_desc_studium {
  descid            BigInt @default(0)
  studium           BigInt @default(0)
  material_shipping Int    @default(0) @db.TinyInt

  @@id([descid, studium])
}

model noten_faecher_desc_workload {
  id       BigInt  @id @default(autoincrement())
  descid   BigInt  @default(0)
  position Int     @default(1)
  name     String? @db.VarChar(128)
  stunden  Float   @default(0) @db.Float

  @@index([descid], map: "descid")
}

model noten_faecher_lecturer {
  id          BigInt @id @default(autoincrement())
  subject_id  BigInt
  lecturer_id BigInt

  @@unique([subject_id, lecturer_id], map: "Lecturer")
}

model noten_faecher_parts {
  id       BigInt  @id @default(autoincrement())
  fachid   BigInt  @default(0)
  position Int     @default(0) @db.TinyInt
  name     String? @db.VarChar(64)
  anteil   Float   @default(0) @db.Float

  @@index([fachid], map: "fachid")
}

model noten_freigabe {
  id       BigInt  @id @default(autoincrement())
  testid   BigInt  @default(0)
  pruefung String? @db.Char(60)
  dozent   BigInt  @default(0)
  klasse   String? @db.Char(120)
  typ      Int     @default(0) @db.TinyInt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model noten_hasherror {
  id          BigInt   @default(0)
  datum       DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  typ         Int      @default(1) @db.TinyInt
  pruefung    BigInt
  soll        String?  @db.VarChar(5)
  ignore      Int      @default(0) @db.TinyInt
  ignore_user BigInt
  ignore_date DateTime @db.DateTime(0)

  @@index([id], map: "id")
  @@ignore
}

model noten_logs_module {
  id    BigInt   @id @default(autoincrement())
  modul BigInt   @default(0)
  sid   BigInt   @default(0)
  typ   Int      @default(0) @db.TinyInt
  datum DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  user  BigInt   @default(0)
  ip    String?  @db.VarChar(15)
  log   String?  @db.VarChar(100)

  @@index([modul, sid], map: "modul")
}

model noten_logs_noten {
  id       BigInt   @id @default(autoincrement())
  fachid   BigInt   @default(0)
  sid      BigInt   @default(0)
  pruefung BigInt   @default(0)
  typ      Int      @default(0) @db.TinyInt
  datum    DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  user     BigInt   @default(0)
  ip       String?  @db.VarChar(15)
  log      String?  @db.VarChar(255)
}

model noten_logs_pruefungen {
  id                BigInt   @id @default(autoincrement())
  fachid            BigInt   @default(0)
  klasse            BigInt   @default(0)
  pruefung          BigInt   @default(0)
  datum             DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  user              BigInt   @default(0)
  ip                String?  @db.VarChar(15)
  log               String?  @db.VarChar(255)
  typ               Int      @default(0) @db.TinyInt
  info              String?  @db.Text
  collapsed_exam_id BigInt?
  course_id         BigInt?
  series_id         BigInt?
  cohort_id         BigInt?

  @@index([pruefung], map: "idx_pruefung")
  @@index([course_id, series_id, cohort_id], map: "noten_logs_pruefungen_collapsed_course_series")
  @@index([collapsed_exam_id], map: "noten_logs_pruefungen_collapsed_exam")
}

model noten_modul {
  id                                        BigInt                                      @id @default(autoincrement())
  alias                                     BigInt?
  aktiv                                     Int                                         @default(1) @db.TinyInt
  kuerzel                                   String?                                     @db.VarChar(32)
  bez_de                                    String?                                     @db.VarChar(255)
  bez_en                                    String?                                     @db.VarChar(255)
  bez_es                                    String?                                     @db.VarChar(255)
  bez_fr                                    String?                                     @db.VarChar(255)
  deleted                                   DateTime?                                   @db.Date
  kategorie                                 BigInt                                      @default(1)
  coursedesc                                BigInt                                      @default(0)
  noten_modul_desc                          noten_modul_desc[]
  noten_modul_desc_presupposed              noten_modul_desc_presupposed[]
  noten_modul_desc_subsequent               noten_modul_desc_subsequent[]
  noten_notenblatt_klasse_modul_presupposed noten_notenblatt_klasse_modul_presupposed[]
  noten_notenblatt_klasse_modul_subsequent  noten_notenblatt_klasse_modul_subsequent[]

  @@unique([alias, kategorie], map: "alias")
  @@index([kuerzel], map: "kuerzel")
}

model noten_modul_desc {
  id                                     BigInt                               @id @default(autoincrement())
  modulid                                BigInt                               @default(0)
  name                                   String?                              @db.VarChar(32)
  aktiv                                  Int                                  @default(1) @db.TinyInt
  bez_de                                 String?                              @db.VarChar(128)
  bez_en                                 String?                              @db.VarChar(128)
  bez_es                                 String?                              @db.VarChar(128)
  bez_fr                                 String?                              @db.VarChar(128)
  dozent                                 BigInt?
  dozent2                                BigInt?
  datum                                  DateTime?                            @db.Date
  language                               String?                              @db.VarChar(2)
  modultyp                               Int                                  @default(0) @db.TinyInt
  gewichtung                             Float                                @default(0) @db.Float
  credits_min                            Float                                @default(0) @db.Float
  credits_max                            Float                                @default(0) @db.Float
  sws                                    Float                                @default(0) @db.Float
  necessary_credits                      Int
  necessary_courses                      Int                                  @default(0) @db.TinyInt
  mod_calc                               String?                              @db.VarChar(6)
  mod_round                              String?                              @db.VarChar(4)
  c_pre                                  String?                              @db.VarChar(255)
  c_sub                                  String?                              @db.VarChar(255)
  wissen                                 String?                              @db.Text
  beschreibung                           String?                              @db.Text
  ziele                                  String?                              @db.Text
  kommentar                              String?                              @db.Text
  elearning                              String?                              @db.Text
  vorbereitung                           String?                              @db.Text
  edit_datum                             DateTime?                            @db.Date
  edit_autor                             BigInt?
  modultest                              Boolean?
  online_exam                            Boolean?
  exam_duration                          Int?
  max_enrollmentable_courses             Int?                                 @db.TinyInt
  max_enrollmentable_courses_semester    Int                                  @default(0)
  wissen_en                              String?                              @db.Text
  beschreibung_en                        String?                              @db.Text
  ziele_en                               String?                              @db.Text
  kommentar_en                           String?                              @db.Text
  elearning_en                           String?                              @db.Text
  vorbereitung_en                        String?                              @db.Text
  necessary_credits_for_module_selection BigInt?
  status_id                              Int                                  @default(0) @db.TinyInt
  additional_1                           String?                              @db.Text
  additional_1_en                        String?                              @db.Text
  additional_2                           String?                              @db.Text
  additional_2_en                        String?                              @db.Text
  noten_modul                            noten_modul                          @relation(fields: [modulid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "noten_modul_desc_noten_modul")
  kb_kursangebot                         kb_kursangebot[]
  kb_kursangebot_modul                   kb_kursangebot_modul[]
  module_version_additional_assignee     module_version_additional_assignee[] @ignore
  module_version_language                module_version_language[]
  noten_modul_desc_equipment             noten_modul_desc_equipment[]
  noten_modul_desc_presupposed           noten_modul_desc_presupposed[]
  noten_modul_desc_subsequent            noten_modul_desc_subsequent[]
  online_exam_module_enrolment           online_exam_module_enrolment[]

  @@index([dozent], map: "dozent")
  @@index([dozent2], map: "dozent2")
  @@index([modulid], map: "modulid")
}

model noten_modul_desc_aoc {
  descid  BigInt
  aoc     BigInt
  studium BigInt

  @@id([descid, aoc])
  @@index([studium], map: "studium")
}

model noten_modul_desc_equipment {
  id               BigInt           @id @default(autoincrement())
  modul_desc_id    BigInt
  equipment_id     BigInt
  exam_equipment   exam_equipment   @relation(fields: [equipment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "noten_modul_desc_equipment_equipment_id")
  noten_modul_desc noten_modul_desc @relation(fields: [modul_desc_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "noten_modul_desc_equipment_modul_desc_id")

  @@index([equipment_id], map: "noten_modul_desc_equipment_equipment_id")
  @@index([modul_desc_id], map: "noten_modul_desc_equipment_modul_desc_id")
}

model noten_modul_desc_faecher {
  id           BigInt  @id @default(autoincrement())
  descid       BigInt  @default(0)
  modulid      BigInt  @default(0)
  fachid       BigInt?
  coursedesc   BigInt  @default(0)
  mandatory    Int     @default(0) @db.TinyInt
  kuerzel      String? @db.VarChar(32)
  bez_de       String? @db.VarChar(255)
  bez_en       String? @db.VarChar(255)
  fachbereich  BigInt  @default(0)
  fachbereich2 BigInt  @default(0)
  fachbereich3 BigInt  @default(0)
  credits_min  Float   @default(0) @db.Float
  credits_max  Float   @default(0) @db.Float
  position     Int?    @default(0)
  category     BigInt? @default(0)

  @@unique([descid, modulid, fachid], map: "descid")
  @@index([fachid], map: "fachid")
}

model noten_modul_desc_parts {
  id          BigInt  @id @default(autoincrement())
  descid      BigInt  @default(0)
  position    Int     @default(0) @db.TinyInt
  name        String? @db.VarChar(64)
  text        String? @db.VarChar(255)
  anteil      Float   @default(0) @db.Float
  mandatory   Int     @default(0) @db.TinyInt
  typ         Int     @default(1) @db.TinyInt
  nkey        Int     @default(1)
  anzeige     Int     @default(2) @db.TinyInt
  approval_id BigInt?

  @@index([descid], map: "descid")
}

model noten_modul_desc_presupposed {
  module_version_id BigInt
  module_id         BigInt
  noten_modul       noten_modul      @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "noten_modul_desc_presupposed_module_id")
  noten_modul_desc  noten_modul_desc @relation(fields: [module_version_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "noten_modul_desc_presupposed_module_version_id")

  @@id([module_version_id, module_id])
  @@index([module_id], map: "noten_modul_desc_presupposed_module_id")
}

model noten_modul_desc_studium {
  descid  BigInt @default(0)
  studium BigInt @default(0)

  @@id([descid, studium])
}

model noten_modul_desc_subsequent {
  module_version_id BigInt
  module_id         BigInt
  noten_modul       noten_modul      @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "noten_modul_desc_subsequent_module_id")
  noten_modul_desc  noten_modul_desc @relation(fields: [module_version_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "noten_modul_desc_subsequent_module_version_id")

  @@id([module_version_id, module_id])
  @@index([module_id], map: "noten_modul_desc_subsequent_module_id")
}

model noten_modul_desc_workload {
  id       BigInt  @id @default(autoincrement())
  descid   BigInt  @default(0)
  position Int     @default(1)
  name     String? @db.VarChar(128)
  stunden  Float   @default(0) @db.Float

  @@index([descid], map: "descid")
}

model noten_nkey {
  id                    BigInt                  @id @default(autoincrement())
  name                  String?                 @db.VarChar(40)
  typ                   Int                     @default(0) @db.TinyInt
  default_points        Float                   @default(100) @db.Float
  exam                  exam[]
  submission_assignment submission_assignment[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model noten_nkey_ects {
  id        BigInt @default(0)
  nkey      BigInt @default(0)
  bewertung Int    @default(0) @db.TinyInt
  nonects   Int    @db.TinyInt
  ap        Float? @db.Float
  a         Float? @db.Float
  am        Float? @db.Float
  bp        Float? @db.Float
  b         Float? @db.Float
  bm        Float? @db.Float
  cp        Float? @db.Float
  c         Float? @db.Float
  cm        Float? @db.Float
  dp        Float? @db.Float
  d         Float? @db.Float
  dm        Float? @db.Float
  ep        Float? @db.Float
  e         Float? @db.Float
  em        Float? @db.Float
  fx        Float? @db.Float
  fx_punkte Float? @db.Float
  f         Float? @db.Float

  @@ignore
}

model noten_nkey_kommanoten {
  id                BigInt @id @default(0)
  min_points_passed Float  @default(50) @db.Float
  note10            Float? @db.Float
  note11            Float? @db.Float
  note12            Float? @db.Float
  note13            Float? @db.Float
  note14            Float? @db.Float
  note15            Float? @db.Float
  note16            Float? @db.Float
  note17            Float? @db.Float
  note18            Float? @db.Float
  note19            Float? @db.Float
  note20            Float? @db.Float
  note21            Float? @db.Float
  note22            Float? @db.Float
  note23            Float? @db.Float
  note24            Float? @db.Float
  note25            Float? @db.Float
  note26            Float? @db.Float
  note27            Float? @db.Float
  note28            Float? @db.Float
  note29            Float? @db.Float
  note30            Float? @db.Float
  note31            Float? @db.Float
  note32            Float? @db.Float
  note33            Float? @db.Float
  note34            Float? @db.Float
  note35            Float? @db.Float
  note36            Float? @db.Float
  note37            Float? @db.Float
  note38            Float? @db.Float
  note39            Float? @db.Float
  note40            Float? @db.Float
  note41            Float? @db.Float
  note42            Float? @db.Float
  note43            Float? @db.Float
  note44            Float? @db.Float
  note45            Float? @db.Float
  note46            Float? @db.Float
  note47            Float? @db.Float
  note48            Float? @db.Float
  note49            Float? @db.Float
  note50            Float? @db.Float
  note51            Float? @db.Float
  note52            Float? @db.Float
  note53            Float? @db.Float
  note54            Float? @db.Float
  note55            Float? @db.Float
  note56            Float? @db.Float
  note57            Float? @db.Float
  note58            Float? @db.Float
  note59            Float? @db.Float
  note60            Float? @db.Float
}

model noten_nkey_mapping {
  nkey BigInt  @id
  ap   String? @db.VarChar(3)
  a    String? @db.VarChar(3)
  am   String? @db.VarChar(3)
  bp   String? @db.VarChar(3)
  b    String? @db.VarChar(3)
  bm   String? @db.VarChar(3)
  cp   String? @db.VarChar(3)
  c    String? @db.VarChar(3)
  cm   String? @db.VarChar(3)
  dp   String? @db.VarChar(3)
  d    String? @db.VarChar(3)
  dm   String? @db.VarChar(3)
  ep   String? @db.VarChar(3)
  e    String? @db.VarChar(3)
  em   String? @db.VarChar(3)
  fx   String? @db.VarChar(3)
  f    String? @db.VarChar(3)
}

model noten_nkey_noten {
  id                BigInt @id @default(0)
  min_points_passed Float  @default(50) @db.Float
  note1             Float  @default(0) @db.Float
  note2             Float  @default(0) @db.Float
  note3             Float  @default(0) @db.Float
  note4             Float  @default(0) @db.Float
  note5             Float  @default(0) @db.Float
  note6             Float? @default(0) @db.Float
}

model noten_nkey_values {
  id     BigInt  @id @default(autoincrement())
  nkey   BigInt
  punkte Float   @db.Float
  note   Float   @db.Float
  txt    String? @db.VarChar(4)
  de     String? @db.VarChar(32)
  en     String? @db.VarChar(32)

  @@unique([nkey, punkte, note], map: "nkey")
}

model noten_notenblatt {
  sid     BigInt @unique(map: "sid") @default(0)
  klasse  BigInt @default(0)
  studium BigInt @default(0)
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 10   Int    @default(0) @map("10") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 11   Int    @default(0) @map("11") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 12   Int    @default(0) @map("12") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 13   Int    @default(0) @map("13") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 14   Int    @default(0) @map("14") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 15   Int    @default(0) @map("15") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 16   Int    @default(0) @map("16") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 17   Int    @default(0) @map("17") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 18   Int    @default(0) @map("18") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 19   Int    @default(0) @map("19") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 20   Int    @default(0) @map("20") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 21   Int    @default(0) @map("21") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 22   Int    @default(0) @map("22") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 23   Int    @default(0) @map("23") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 24   Int    @default(0) @map("24") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 25   Int    @default(0) @map("25") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 26   Int    @default(0) @map("26") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 27   Int    @default(0) @map("27") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 28   Int    @default(0) @map("28") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 29   Int    @default(0) @map("29") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 30   Int    @default(0) @map("30") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 31   Int    @default(0) @map("31") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 32   Int    @default(0) @map("32") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 33   Int    @default(0) @map("33") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 34   Int    @default(0) @map("34") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 35   Int    @default(0) @map("35") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 36   Int    @default(0) @map("36") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 37   Int    @default(0) @map("37") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 38   Int    @default(0) @map("38") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 39   Int    @default(0) @map("39") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 40   Int    @default(0) @map("40") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 41   Int    @default(0) @map("41") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 42   Int    @default(0) @map("42") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 43   Int    @default(0) @map("43") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 44   Int    @default(0) @map("44") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 45   Int    @default(0) @map("45") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 46   Int    @default(0) @map("46") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 47   Int    @default(0) @map("47") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 48   Int    @default(0) @map("48") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 49   Int    @default(0) @map("49") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 50   Int    @default(0) @map("50") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 51   Int    @default(0) @map("51") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 52   Int    @default(0) @map("52") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 53   Int    @default(0) @map("53") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 54   Int    @default(0) @map("54") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 55   Int    @default(0) @map("55") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 56   Int    @default(0) @map("56") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 57   Int    @default(0) @map("57") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 58   Int    @default(0) @map("58") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 59   Int    @default(0) @map("59") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 60   Int    @default(0) @map("60") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 61   Int    @default(0) @map("61") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 62   Int    @default(0) @map("62") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 63   Int    @default(0) @map("63") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 64   Int    @default(0) @map("64") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 65   Int    @default(0) @map("65") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 66   Int    @default(0) @map("66") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 67   Int    @default(0) @map("67") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 68   Int    @default(0) @map("68") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 69   Int    @default(0) @map("69") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 70   Int    @default(0) @map("70") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 71   Int    @default(0) @map("71") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 72   Int    @default(0) @map("72") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 73   Int    @default(0) @map("73") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 74   Int    @default(0) @map("74") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 75   Int    @default(0) @map("75") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 76   Int    @default(0) @map("76") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 77   Int    @default(0) @map("77") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 78   Int    @default(0) @map("78") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 79   Int    @default(0) @map("79") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 80   Int    @default(0) @map("80") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 81   Int    @default(0) @map("81") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 82   Int    @default(0) @map("82") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 83   Int    @default(0) @map("83") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 84   Int    @default(0) @map("84") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 85   Int    @default(0) @map("85") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 86   Int    @default(0) @map("86") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 87   Int    @default(0) @map("87") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 88   Int    @default(0) @map("88") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 89   Int    @default(0) @map("89") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 90   Int    @default(0) @map("90") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 91   Int    @default(0) @map("91") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 92   Int    @default(0) @map("92") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 93   Int    @default(0) @map("93") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 94   Int    @default(0) @map("94") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 95   Int    @default(0) @map("95") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 96   Int    @default(0) @map("96") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 97   Int    @default(0) @map("97") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 98   Int    @default(0) @map("98") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 99   Int    @default(0) @map("99") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 100  Int    @default(0) @map("100") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 101  Int    @default(0) @map("101") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 102  Int    @default(0) @map("102") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 103  Int    @default(0) @map("103") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 104  Int    @default(0) @map("104") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 105  Int    @default(0) @map("105") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 106  Int    @default(0) @map("106") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 107  Int    @default(0) @map("107") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 108  Int    @default(0) @map("108") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 109  Int    @default(0) @map("109") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 110  Int    @default(0) @map("110") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 111  Int    @default(0) @map("111") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 112  Int    @default(0) @map("112") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 113  Int    @default(0) @map("113") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 114  Int    @default(0) @map("114") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 115  Int    @default(0) @map("115") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 116  Int    @default(0) @map("116") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 117  Int    @default(0) @map("117") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 118  Int    @default(0) @map("118") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 119  Int    @default(0) @map("119") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 120  Int    @default(0) @map("120") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 121  Int    @default(0) @map("121") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 122  Int    @default(0) @map("122") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 123  Int    @default(0) @map("123") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 124  Int    @default(0) @map("124") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 125  Int    @default(0) @map("125") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 126  Int    @default(0) @map("126") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 127  Int    @default(0) @map("127") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 128  Int    @default(0) @map("128") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 129  Int    @default(0) @map("129") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 130  Int    @default(0) @map("130") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 131  Int    @default(0) @map("131") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 132  Int    @default(0) @map("132") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 133  Int    @default(0) @map("133") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 134  Int    @default(0) @map("134") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 135  Int    @default(0) @map("135") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 136  Int    @default(0) @map("136") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 137  Int    @default(0) @map("137") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 138  Int    @default(0) @map("138") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 139  Int    @default(0) @map("139") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 140  Int    @default(0) @map("140") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 141  Int    @default(0) @map("141") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 142  Int    @default(0) @map("142") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 143  Int    @default(0) @map("143") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 144  Int    @default(0) @map("144") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 145  Int    @default(0) @map("145") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 146  Int    @default(0) @map("146") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 147  Int    @default(0) @map("147") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 148  Int    @default(0) @map("148") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 149  Int    @default(0) @map("149") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 150  Int    @default(0) @map("150") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 151  Int    @default(0) @map("151") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 152  Int    @default(0) @map("152") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 153  Int    @default(0) @map("153") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 154  Int    @default(0) @map("154") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 155  Int    @default(0) @map("155") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 156  Int    @default(0) @map("156") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 157  Int    @default(0) @map("157") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 158  Int    @default(0) @map("158") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 159  Int    @default(0) @map("159") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 160  Int    @default(0) @map("160") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 161  Int    @default(0) @map("161") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 162  Int    @default(0) @map("162") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 163  Int    @default(0) @map("163") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 164  Int    @default(0) @map("164") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 165  Int    @default(0) @map("165") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 166  Int    @default(0) @map("166") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 167  Int    @default(0) @map("167") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 168  Int    @default(0) @map("168") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 169  Int    @default(0) @map("169") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 170  Int    @default(0) @map("170") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 171  Int    @default(0) @map("171") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 172  Int    @default(0) @map("172") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 173  Int    @default(0) @map("173") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 174  Int    @default(0) @map("174") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 175  Int    @default(0) @map("175") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 177  Int    @default(0) @map("177") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 178  Int    @default(0) @map("178") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 179  Int    @default(0) @map("179") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 180  Int    @default(0) @map("180") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 181  Int    @default(0) @map("181") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 182  Int    @default(0) @map("182") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 183  Int    @default(0) @map("183") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 184  Int    @default(0) @map("184") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 185  Int    @default(0) @map("185") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 186  Int    @default(0) @map("186") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 187  Int    @default(0) @map("187") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 188  Int    @default(0) @map("188") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 189  Int    @default(0) @map("189") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 190  Int    @default(0) @map("190") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 191  Int    @default(0) @map("191") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 192  Int    @default(0) @map("192") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 193  Int    @default(0) @map("193") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 194  Int    @default(0) @map("194") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 195  Int    @default(0) @map("195") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 196  Int    @default(0) @map("196") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 197  Int    @default(0) @map("197") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 198  Int    @default(0) @map("198") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 199  Int    @default(0) @map("199") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 200  Int    @default(0) @map("200") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 201  Int    @default(0) @map("201") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 202  Int    @default(0) @map("202") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 203  Int    @default(0) @map("203") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 204  Int    @default(0) @map("204") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 205  Int    @default(0) @map("205") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 206  Int    @default(0) @map("206") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 207  Int    @default(0) @map("207") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 208  Int    @default(0) @map("208") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 209  Int    @default(0) @map("209") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 210  Int    @default(0) @map("210") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 211  Int    @default(0) @map("211") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 212  Int    @default(0) @map("212") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 213  Int    @default(0) @map("213") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 214  Int    @default(0) @map("214") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 215  Int    @default(0) @map("215") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 216  Int    @default(0) @map("216") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 217  Int    @default(0) @map("217") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 218  Int    @default(0) @map("218") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 219  Int    @default(0) @map("219") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 220  Int    @default(0) @map("220") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 221  Int    @default(0) @map("221") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 222  Int    @default(0) @map("222") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 223  Int    @default(0) @map("223") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 224  Int    @default(0) @map("224") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 225  Int    @default(0) @map("225") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 226  Int    @default(0) @map("226") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 227  Int    @default(0) @map("227") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 228  Int    @default(0) @map("228") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 229  Int    @default(0) @map("229") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 230  Int    @default(0) @map("230") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 231  Int    @default(0) @map("231") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 232  Int    @default(0) @map("232") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 233  Int    @default(0) @map("233") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 234  Int    @default(0) @map("234") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 235  Int    @default(0) @map("235") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 236  Int    @default(0) @map("236") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 237  Int    @default(0) @map("237") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 238  Int    @default(0) @map("238") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 239  Int    @default(0) @map("239") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 240  Int    @default(0) @map("240") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 241  Int    @default(0) @map("241") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 242  Int    @default(0) @map("242") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 243  Int    @default(0) @map("243") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 244  Int    @default(0) @map("244") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 245  Int    @default(0) @map("245") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 246  Int    @default(0) @map("246") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 247  Int    @default(0) @map("247") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 248  Int    @default(0) @map("248") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 249  Int    @default(0) @map("249") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 250  Int    @default(0) @map("250") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 309  Int    @default(0) @map("309") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 310  Int    @default(0) @map("310") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 312  Int    @default(0) @map("312") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 313  Int    @default(0) @map("313") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 315  Int    @default(0) @map("315") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 320  Int    @default(0) @map("320") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 326  Int    @default(0) @map("326") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 354  Int    @default(0) @map("354") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 393  Int    @default(0) @map("393") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 394  Int    @default(0) @map("394") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 404  Int    @default(0) @map("404") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 405  Int    @default(0) @map("405") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 408  Int    @default(0) @map("408") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 423  Int    @default(0) @map("423") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 424  Int    @default(0) @map("424") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 425  Int    @default(0) @map("425") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 426  Int    @default(0) @map("426") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 427  Int    @default(0) @map("427") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 430  Int    @default(0) @map("430") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 431  Int    @default(0) @map("431") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 432  Int    @default(0) @map("432") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 433  Int    @default(0) @map("433") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 434  Int    @default(0) @map("434") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 435  Int    @default(0) @map("435") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 436  Int    @default(0) @map("436") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 437  Int    @default(0) @map("437") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 438  Int    @default(0) @map("438") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 439  Int    @default(0) @map("439") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 440  Int    @default(0) @map("440") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 441  Int    @default(0) @map("441") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 442  Int    @default(0) @map("442") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 443  Int    @default(0) @map("443") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 444  Int    @default(0) @map("444") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 445  Int    @default(0) @map("445") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 446  Int    @default(0) @map("446") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 447  Int    @default(0) @map("447") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 448  Int    @default(0) @map("448") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 449  Int    @default(0) @map("449") @db.TinyInt
  // This field was commented out because of an invalid name. Please provide a valid one that matches [a-zA-Z][a-zA-Z0-9_]*
  // 450  Int    @default(0) @map("450") @db.TinyInt

  @@index([klasse, studium], map: "klasse")
}

model noten_notenblatt_katalog {
  id      BigInt  @id @default(autoincrement())
  klasse  BigInt  @default(0)
  studium BigInt  @default(0)
  name    String? @db.VarChar(128)
  typ     Int     @default(1) @db.TinyInt
  faecher String? @db.Text

  @@index([klasse, studium], map: "klasse")
}

model noten_notenblatt_klasse {
  id                                        BigInt                                      @id @default(autoincrement())
  version                                   BigInt                                      @default(0)
  klasse                                    BigInt                                      @default(0)
  studium                                   BigInt                                      @default(0)
  relative                                  BigInt                                      @default(0)
  typ                                       Int                                         @default(0) @db.TinyInt
  fachid                                    BigInt                                      @default(0)
  coursedesc                                BigInt                                      @default(0)
  modul                                     BigInt                                      @default(0)
  kombination                               String?                                     @db.VarChar(255)
  modultest                                 Int                                         @default(0) @db.TinyInt
  kuerzel                                   String?                                     @db.VarChar(32)
  bez_de                                    String?                                     @db.VarChar(255)
  bez_en                                    String?                                     @db.VarChar(255)
  bez_es                                    String?                                     @db.VarChar(255)
  bez_fr                                    String?                                     @db.VarChar(255)
  parent                                    BigInt                                      @default(0)
  fachbereich                               BigInt                                      @default(0)
  fachbereich2                              BigInt                                      @default(0)
  fachbereich3                              BigInt                                      @default(0)
  area                                      BigInt
  area2                                     BigInt
  area3                                     BigInt
  branch                                    BigInt                                      @default(0)
  branch2                                   BigInt                                      @default(0)
  branch3                                   BigInt                                      @default(0)
  position                                  Int                                         @default(0)
  dozent                                    BigInt                                      @default(0)
  language                                  Int                                         @default(1) @db.TinyInt
  mod_kat                                   Int                                         @default(1) @db.TinyInt
  mod_typ                                   Int                                         @default(1) @db.TinyInt
  mod_pre                                   String?                                     @db.VarChar(128)
  mod_sub                                   String?                                     @db.VarChar(128)
  mod_calc                                  String?                                     @db.VarChar(6)
  mod_round                                 String?                                     @db.VarChar(4)
  required                                  Int                                         @default(0) @db.TinyInt
  zertifikat                                Int                                         @default(0) @db.TinyInt
  semester                                  Int                                         @default(0) @db.TinyInt
  in_semester                               Int                                         @default(1) @db.TinyInt
  cat                                       Int                                         @default(1) @db.TinyInt
  vordiplom                                 Int                                         @default(1) @db.TinyInt
  diplom                                    Int                                         @default(1) @db.TinyInt
  gewichtung                                Float                                       @default(0) @db.Float
  credits_min                               Float                                       @default(0) @db.Float
  credits_max                               Float                                       @default(0) @db.Float
  necessary                                 Int                                         @default(0) @db.TinyInt
  necessary_courses                         Int                                         @default(0) @db.TinyInt
  necessary_credits                         Float?                                      @db.Float
  vorlesung                                 Int                                         @default(0) @db.TinyInt
  wissen                                    String?                                     @db.Text
  beschreibung                              String?                                     @db.Text
  ziele                                     String?                                     @db.Text
  kommentar                                 String?                                     @db.Text
  max_enrollmentable_courses                Int?                                        @db.TinyInt
  max_enrollmentable_courses_semester       Int                                         @default(0)
  courseCategory                            Int?
  comment_en                                String?                                     @db.Text
  category                                  BigInt?                                     @default(0)
  exam_points                               Float                                       @default(100) @db.Float
  necessary_credits_for_module_selection    BigInt?
  quarter                                   Int                                         @default(0) @db.TinyInt
  course_series_draw_priority               course_series_draw_priority[]
  noten_notenblatt_klasse_modul_presupposed noten_notenblatt_klasse_modul_presupposed[]
  noten_notenblatt_klasse_modul_subsequent  noten_notenblatt_klasse_modul_subsequent[]
  noten_notenblatt_schwerpunkt              noten_notenblatt_schwerpunkt[]

  @@index([klasse, fachid, semester], map: "curriculum_cohort_subject_semester")
  @@index([klasse, studium, fachid], map: "idx_klasse_studium_fachid")
  @@index([klasse, studium, modul], map: "idx_klasse_studium_modul")
  @@index([klasse, studium, typ, fachbereich, fachbereich2, fachbereich3], map: "idx_klasse_studium_typ_fachbereiche")
  @@index([klasse, studium, typ, fachid], map: "idx_klasse_studium_typ_fachid")
  @@index([klasse], map: "klasse")
  @@index([modul], map: "modul")
  @@index([parent], map: "parent")
  @@index([relative], map: "relative")
  @@index([studium], map: "studium")
  @@index([version], map: "version")
}

model noten_notenblatt_klasse_ects {
  id             BigInt @id @default(autoincrement())
  cohorte_id     BigInt
  cohorte_target BigInt

  @@unique([cohorte_id, cohorte_target], map: "Cohortes")
}

model noten_notenblatt_klasse_modul_presupposed {
  curriculum_id           BigInt
  module_id               BigInt
  noten_notenblatt_klasse noten_notenblatt_klasse @relation(fields: [curriculum_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "noten_notenblatt_klasse_modul_presupposed_curriculum_id")
  noten_modul             noten_modul             @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "noten_notenblatt_klasse_modul_presupposed_module_id")

  @@id([curriculum_id, module_id])
  @@index([module_id], map: "noten_notenblatt_klasse_modul_presupposed_module_id")
}

model noten_notenblatt_klasse_modul_subsequent {
  curriculum_id           BigInt
  module_id               BigInt
  noten_notenblatt_klasse noten_notenblatt_klasse @relation(fields: [curriculum_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "noten_notenblatt_klasse_modul_subsequent_curriculum_id")
  noten_modul             noten_modul             @relation(fields: [module_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "noten_notenblatt_klasse_modul_subsequent_module_id")

  @@id([curriculum_id, module_id])
  @@index([module_id], map: "noten_notenblatt_klasse_modul_subsequent_module_id")
}

model noten_notenblatt_regeln {
  id         BigInt  @id @default(autoincrement())
  klasse     BigInt  @default(0)
  studium    BigInt  @default(0)
  version    BigInt  @default(0)
  modul      BigInt  @default(0)
  coursedesc BigInt  @default(0)
  element    BigInt  @default(0)
  name       String? @db.VarChar(128)
  katalog    BigInt  @default(0)
  typ        String? @db.Char(3)
  avg        BigInt  @default(0)
  bezug      String? @db.VarChar(3)
  category   String? @db.VarChar(32)
  lform      Int     @default(0) @db.TinyInt
  ltyp       String? @db.VarChar(32)
  operand    String? @db.Char(3)
  wert       Float   @default(0) @db.Float
  aktiv      Int     @default(1) @db.TinyInt

  @@index([coursedesc], map: "coursedesc")
  @@index([element], map: "element")
  @@index([klasse, studium], map: "klasse")
  @@index([version, modul], map: "version")
}

model noten_notenblatt_rules {
  version                           BigInt   @default(0)
  klasse                            BigInt   @default(0)
  studium                           BigInt   @default(0)
  specs_required                    Int      @default(0) @db.TinyInt
  nkey                              BigInt   @default(0)
  zeugnis                           BigInt   @default(1)
  ectsystem                         String?  @db.VarChar(9)
  ects_calc                         String?  @db.VarChar(8)
  module_calc                       String?  @db.VarChar(6)
  moduleexam_calc                   String?  @db.VarChar(6)
  maxcredits                        Int      @default(0)
  workload_total                    Float    @default(5400) @db.Float
  credits_term                      Int      @default(0)
  credits_min                       Int      @default(0)
  credits_min_oneyear               Int      @default(0)
  credits_maxpf                     Int      @default(0)
  credits_trans                     Int      @default(0)
  credits_transpf                   Int      @default(0)
  credits_nonprog                   Int      @default(0)
  credits_abroad                    Int      @default(0)
  limit_avg                         Int      @default(0)
  view_moduleexam_parts             Int      @default(1) @db.TinyInt
  retry_max                         Int      @default(2) @db.TinyInt
  retry1_sem                        Int      @db.TinyInt
  retry2_sem                        Int      @db.TinyInt
  courses_max                       Int
  examination_date                  String?  @db.VarChar(15)
  creditEctsAfterCourseCancellation Boolean  @default(true)
  weight                            String?  @db.VarChar(7)
  aoc_max_select                    Int?     @db.TinyInt
  aoc_max_external_credits          Int?     @db.TinyInt
  aoc_max_external                  Int?     @db.TinyInt
  dynamic_credit_limit              Int?     @db.TinyInt
  show_only_points                  Boolean?

  @@id([version, klasse, studium])
  @@index([klasse, studium], map: "klasse")
}

model noten_notenblatt_schwerpunkt {
  element                 BigInt
  schwerpunkt             BigInt
  noten_notenblatt_klasse noten_notenblatt_klasse @relation(fields: [element], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_noten_notenblatt_schwerpunkt_element")
  studium_schwerpunkte    studium_schwerpunkte    @relation(fields: [schwerpunkt], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_noten_notenblatt_schwerpunkt_schwerpunkt")

  @@unique([element, schwerpunkt], map: "element")
  @@index([schwerpunkt], map: "fk_noten_notenblatt_schwerpunkt_schwerpunkt")
}

model noten_notenblatt_version {
  id         BigInt  @id @default(autoincrement())
  studium    BigInt
  name       String? @db.VarChar(128)
  jahr_start Int
  term_start Int     @db.TinyInt
  jahr_ende  Int
  term_ende  Int     @db.TinyInt
  comment    String? @db.Text
  status     Int     @default(3) @db.TinyInt

  @@index([studium], map: "studium")
}

model noten_pruefungen {
  id                                BigInt                              @id @default(autoincrement())
  number                            String?                             @db.VarChar(32)
  standort                          BigInt                              @default(1)
  studium                           BigInt?                             @default(0)
  kurs                              BigInt?                             @default(0)
  gruppe                            String?                             @db.VarChar(32)
  coursedesc                        BigInt                              @default(0)
  modul                             BigInt                              @default(0)
  modul_parent                      BigInt                              @default(0)
  category                          BigInt                              @default(0)
  jahr                              Int                                 @default(0)
  year                              Int?
  semester                          Int                                 @default(0) @db.SmallInt
  term                              Int                                 @default(0) @db.SmallInt
  datum                             DateTime?                           @db.Date
  date                              DateTime?                           @db.Date
  created                           DateTime?                           @db.Date
  uhrzeit                           DateTime                            @default(dbgenerated("'00:00:00'")) @db.Time(0)
  start_time                        DateTime?                           @db.Time(0)
  bis                               DateTime                            @default(dbgenerated("'00:00:00'")) @db.Time(0)
  end_time                          DateTime?                           @db.Time(0)
  dauer                             Int                                 @default(0)
  raum                              String?                             @db.VarChar(64)
  beisitzer1                        BigInt?                             @default(0)
  beisitzer2                        BigInt?                             @default(0)
  dozent                            BigInt?                             @default(0)
  dozent2                           BigInt?                             @default(0)
  dozent3                           BigInt?                             @default(0)
  dozent4                           BigInt?                             @default(0)
  dozent5                           BigInt?                             @default(0)
  dozent6                           BigInt?                             @default(0)
  dozent7                           BigInt?                             @default(0)
  dozent8                           BigInt?                             @default(0)
  dozent9                           BigInt?                             @default(0)
  dozent10                          BigInt?                             @default(0)
  name                              String?                             @db.VarChar(255)
  appendix                          String?                             @db.VarChar(32)
  fachid                            BigInt                              @default(0)
  max_points                        Float                               @db.Float
  filled                            Int                                 @default(0) @db.TinyInt
  filled_2                          Int                                 @default(0) @db.TinyInt
  released                          Int                                 @default(0) @db.TinyInt
  published                         Int                                 @default(0) @db.TinyInt
  teilpruefungen                    Int                                 @default(0) @db.SmallInt
  autocalc                          Int                                 @default(1) @db.TinyInt
  anzeige                           Int                                 @default(1) @db.SmallInt
  showtime                          DateTime?                           @db.Date
  eingabe                           Int                                 @default(1) @db.TinyInt
  release                           Int                                 @default(0) @db.TinyInt
  lform                             Int?                                @default(1) @db.TinyInt
  results                           Int                                 @default(1) @db.SmallInt
  transfer                          Int                                 @default(0) @db.TinyInt
  pass                              Int                                 @default(0) @db.TinyInt
  group_group                       String?                             @db.VarChar(17)
  group_pass                        Int                                 @default(0) @db.TinyInt
  group_action                      Int                                 @default(0) @db.TinyInt
  all_points                        Int                                 @default(1) @db.TinyInt
  all_action                        Int                                 @default(0) @db.SmallInt
  typ                               Int                                 @default(1) @db.SmallInt
  kombi_master                      Int                                 @default(0) @db.TinyInt
  kombi_slave                       BigInt
  accredit                          Int                                 @default(0) @db.TinyInt
  nkey                              Int                                 @default(1) @db.SmallInt
  zertifikatsnote                   Int                                 @default(1) @db.TinyInt
  semesternote                      Int                                 @default(0) @db.TinyInt
  kommentar                         String?                             @db.VarChar(128)
  wf_de                             String?                             @db.VarChar(255)
  wf_en                             String?                             @db.VarChar(255)
  beisitzer3                        BigInt                              @default(0)
  beisitzer4                        BigInt                              @default(0)
  beisitzer5                        BigInt                              @default(0)
  beisitzer6                        BigInt                              @default(0)
  beisitzer7                        BigInt                              @default(0)
  beisitzer8                        BigInt                              @default(0)
  beisitzer9                        BigInt                              @default(0)
  beisitzer10                       BigInt                              @default(0)
  beisitzer11                       BigInt                              @default(0)
  beisitzer12                       BigInt                              @default(0)
  registrationPeriodId              BigInt?
  commissionalExam                  Int                                 @default(0) @db.TinyInt
  event_seperate                    Int                                 @default(1) @db.TinyInt
  event_series_id                   BigInt?
  exam_period                       Int                                 @default(2) @db.TinyInt
  status_1                          Int                                 @default(0) @db.TinyInt
  status_2                          Int                                 @default(0) @db.TinyInt
  status_3                          Int                                 @default(0) @db.TinyInt
  status_4                          Int                                 @default(0) @db.TinyInt
  lecture_series_id                 BigInt?
  exam_enrolment                    Boolean                             @default(false)
  moodle_transfer                   Boolean                             @default(false)
  cohort_id                         BigInt?
  exam_generation_parent_id         BigInt?
  exam_type                         Int?                                @db.TinyInt
  exam_special_period_id            BigInt?
  status_id                         BigInt?
  event_series                      event_series?                       @relation(fields: [event_series_id], references: [id], onUpdate: NoAction, map: "noten_pruefungen_event_series_id")
  noten_pruefungen                  noten_pruefungen?                   @relation("noten_pruefungenTonoten_pruefungen_exam_generation_parent_id", fields: [exam_generation_parent_id], references: [id], onUpdate: NoAction, map: "fk_noten_pruefungen_exam_generation_parent_id")
  exam_special_period               exam_special_period?                @relation(fields: [exam_special_period_id], references: [id], onUpdate: NoAction, map: "fk_noten_pruefungen_exam_special_period_id")
  exam_status                       exam_status?                        @relation(fields: [status_id], references: [id], onUpdate: NoAction, map: "fk_noten_pruefungen_status_id")
  exam_assessor                     exam_assessor[]
  exam_lecturer                     exam_lecturer[]
  exam_moodle_enrolment             exam_moodle_enrolment[]
  exam_study_program                exam_study_program[]
  other_noten_pruefungen            noten_pruefungen[]                  @relation("noten_pruefungenTonoten_pruefungen_exam_generation_parent_id")
  noten_pruefungen_rooms            noten_pruefungen_rooms[]
  study_center_exam_enrolment_exams study_center_exam_enrolment_exams[]

  @@index([dozent, dozent2, dozent3, dozent4, dozent5], map: "dozent")
  @@index([fachid], map: "fachid")
  @@index([exam_generation_parent_id], map: "fk_noten_pruefungen_exam_generation_parent_id")
  @@index([exam_special_period_id], map: "fk_noten_pruefungen_exam_special_period_id")
  @@index([status_id], map: "fk_noten_pruefungen_status_id")
  @@index([exam_enrolment, standort, datum, uhrzeit, moodle_transfer], map: "idx_exam_enrolment_standort_datum_uhrzeit_moodle_transfer")
  @@index([coursedesc], map: "idx_noten_pruefungen_coursedesc")
  @@index([name], map: "idx_noten_pruefungen_name")
  @@index([jahr], map: "jahr")
  @@index([modul], map: "modul")
  @@index([event_series_id], map: "noten_pruefungen_event_series_id")
  @@index([results], map: "results")
  @@index([semester], map: "semester")
  @@index([term], map: "term")
}

model noten_pruefungen_acfive_19711 {
  id                   BigInt        @id @default(autoincrement())
  number               String?       @db.VarChar(32)
  standort             BigInt        @default(1)
  studium              BigInt?       @default(0)
  kurs                 BigInt?       @default(0)
  gruppe               String?       @db.VarChar(32)
  coursedesc           BigInt        @default(0)
  modul                BigInt        @default(0)
  modul_parent         BigInt        @default(0)
  category             BigInt        @default(0)
  jahr                 Int           @default(0)
  semester             Int           @default(0) @db.SmallInt
  term                 Int           @default(0) @db.SmallInt
  datum                DateTime?     @db.Date
  created              DateTime?     @db.Date
  uhrzeit              DateTime      @default(dbgenerated("'00:00:00'")) @db.Time(0)
  bis                  DateTime      @default(dbgenerated("'00:00:00'")) @db.Time(0)
  dauer                Int           @default(0)
  raum                 String?       @db.VarChar(64)
  beisitzer1           BigInt?       @default(0)
  beisitzer2           BigInt?       @default(0)
  dozent               BigInt?       @default(0)
  dozent2              BigInt?       @default(0)
  dozent3              BigInt?       @default(0)
  dozent4              BigInt?       @default(0)
  dozent5              BigInt?       @default(0)
  dozent6              BigInt?       @default(0)
  dozent7              BigInt?       @default(0)
  dozent8              BigInt?       @default(0)
  dozent9              BigInt?       @default(0)
  dozent10             BigInt?       @default(0)
  name                 String?       @db.VarChar(255)
  appendix             String?       @db.VarChar(32)
  fachid               BigInt        @default(0)
  max_points           Float         @db.Float
  filled               Int           @default(0) @db.TinyInt
  filled_2             Int           @default(0) @db.TinyInt
  released             Int           @default(0) @db.TinyInt
  published            Int           @default(0) @db.TinyInt
  teilpruefungen       Int           @default(0) @db.SmallInt
  autocalc             Int           @default(1) @db.TinyInt
  anzeige              Int           @default(1) @db.SmallInt
  showtime             DateTime?     @db.Date
  eingabe              Int           @default(1) @db.TinyInt
  release              Int           @default(0) @db.TinyInt
  lform                Int?          @default(1) @db.TinyInt
  results              Int           @default(1) @db.SmallInt
  transfer             Int           @default(0) @db.TinyInt
  pass                 Int           @default(0) @db.TinyInt
  group_group          String?       @db.VarChar(17)
  group_pass           Int           @default(0) @db.TinyInt
  group_action         Int           @default(0) @db.TinyInt
  all_points           Int           @default(1) @db.TinyInt
  all_action           Int           @default(0) @db.SmallInt
  typ                  Int           @default(1) @db.SmallInt
  kombi_master         Int           @default(0) @db.TinyInt
  kombi_slave          BigInt
  accredit             Int           @default(0) @db.TinyInt
  nkey                 Int           @default(1) @db.SmallInt
  zertifikatsnote      Int           @default(1) @db.TinyInt
  semesternote         Int           @default(0) @db.TinyInt
  kommentar            String?       @db.VarChar(128)
  wf_de                String?       @db.VarChar(255)
  wf_en                String?       @db.VarChar(255)
  beisitzer3           BigInt        @default(0)
  beisitzer4           BigInt        @default(0)
  beisitzer5           BigInt        @default(0)
  beisitzer6           BigInt        @default(0)
  beisitzer7           BigInt        @default(0)
  beisitzer8           BigInt        @default(0)
  beisitzer9           BigInt        @default(0)
  beisitzer10          BigInt        @default(0)
  beisitzer11          BigInt        @default(0)
  beisitzer12          BigInt        @default(0)
  registrationPeriodId BigInt?
  commissionalExam     Int           @default(0) @db.TinyInt
  event_seperate       Int           @default(1) @db.TinyInt
  event_series_id      BigInt?
  exam_period          Int           @default(2) @db.TinyInt
  status_1             Int           @default(0) @db.TinyInt
  status_2             Int           @default(0) @db.TinyInt
  status_3             Int           @default(0) @db.TinyInt
  status_4             Int           @default(0) @db.TinyInt
  lecture_series_id    BigInt?
  event_series         event_series? @relation(fields: [event_series_id], references: [id], onUpdate: NoAction, map: "noten_pruefungen_acfive_19711_ibfk_1")

  @@index([dozent, dozent2, dozent3, dozent4, dozent5], map: "dozent")
  @@index([fachid], map: "fachid")
  @@index([jahr], map: "jahr")
  @@index([modul], map: "modul")
  @@index([event_series_id], map: "noten_pruefungen_event_series_id")
  @@index([results], map: "results")
  @@index([semester], map: "semester")
  @@index([term], map: "term")
}

model noten_pruefungen_docs {
  id                 BigInt  @id @default(autoincrement())
  name               String? @db.VarChar(64)
  menutext           String? @db.VarChar(64)
  filename           String? @db.VarChar(64)
  no_selection       Int     @default(0) @db.TinyInt
  filled             Int     @default(1) @db.TinyInt
  signature          String? @db.VarChar(64)
  signature_position String? @db.VarChar(64)
}

model noten_pruefungen_docs_session {
  id     BigInt  @id @default(autoincrement())
  profil BigInt
  doc    BigInt
  data   String? @db.Text

  @@unique([profil, doc], map: "profil")
}

model noten_pruefungen_docs_vars {
  id            BigInt  @id @default(autoincrement())
  doc           BigInt
  var           String? @db.VarChar(32)
  de            String? @db.VarChar(64)
  en            String? @db.VarChar(64)
  typ           String? @db.VarChar(8)
  position      Int     @default(1) @db.TinyInt
  tip           String? @db.VarChar(128)
  default_value String? @db.Text
  ref_table     String? @db.VarChar(32)
  ref_id        String? @db.VarChar(32)
  ref_field     String? @db.VarChar(32)
  ref_value     String? @db.VarChar(64)

  @@index([doc], map: "doc")
}

model noten_pruefungen_einstellungen {
  klasse               BigInt    @default(0)
  jahr                 Int       @default(0)
  periode              Int       @default(0) @db.TinyInt
  klausur_eingang      DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  einschreibung_beginn DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  einschreibung_ende   DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  ergebnisse           DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  published            DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  published_date       DateTime? @db.DateTime(0)
  published_user       BigInt    @default(0)

  @@id([klasse, jahr, periode])
}

model noten_pruefungen_files {
  id          BigInt    @id @default(autoincrement())
  pid         BigInt    @default(0)
  format      String?   @db.VarChar(5)
  filename    String?   @db.VarChar(128)
  filesize    BigInt    @default(0)
  upload_date DateTime? @db.DateTime(0)
  profile_id  BigInt    @default(0)
  delete_date DateTime? @db.DateTime(0)

  @@index([pid], map: "pid")
}

model noten_pruefungen_klasse {
  pid      BigInt @default(0)
  klasse   BigInt @default(0)
  semester Int    @default(1) @db.TinyInt

  @@unique([pid, klasse], map: "pid")
  @@index([semester], map: "semester")
}

model noten_pruefungen_perioden {
  id       BigInt  @id @default(autoincrement())
  de       String? @db.VarChar(64)
  en       String? @db.VarChar(64)
  position Int     @default(1) @db.TinyInt
  term     Int     @default(1) @db.TinyInt
}

model noten_pruefungen_rooms {
  exam_id          BigInt
  room_id          BigInt
  noten_pruefungen noten_pruefungen @relation(fields: [exam_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "exam_id")

  @@id([exam_id, room_id])
}

model noten_pruefungen_sub {
  id                         BigInt                       @id @default(autoincrement())
  parent                     BigInt                       @default(0)
  part_id                    BigInt                       @default(0)
  name                       String?                      @db.VarChar(100)
  dozent                     BigInt                       @default(0)
  typ                        Int                          @db.TinyInt
  gewichtung                 Float                        @default(0)
  max_points                 Float                        @db.Float
  anzeige                    Int                          @default(0) @db.TinyInt
  filled                     Int                          @default(0) @db.TinyInt
  accredit                   Int                          @default(0) @db.TinyInt
  pass                       Int                          @default(0) @db.TinyInt
  nkey                       BigInt                       @default(0)
  datum                      DateTime?                    @db.Date
  uhrzeit                    DateTime                     @default(dbgenerated("'00:00:00'")) @db.Time(0)
  uhrzeit_ende               DateTime                     @default(dbgenerated("'00:00:00'")) @db.Time(0)
  dauer                      Int                          @default(0)
  raum                       String?                      @db.VarChar(64)
  beisitzer1                 String?                      @db.VarChar(64)
  beisitzer2                 String?                      @db.VarChar(64)
  event_seperate             Int                          @default(1) @db.TinyInt
  event_series_id            BigInt?
  event_series               event_series?                @relation(fields: [event_series_id], references: [id], onUpdate: NoAction, map: "noten_pruefungen_sub_event_series_id")
  exam_part_assessor         exam_part_assessor[]
  noten_pruefungen_sub_rooms noten_pruefungen_sub_rooms[]

  @@index([dozent], map: "dozent")
  @@index([event_series_id], map: "noten_pruefungen_sub_event_series_id")
  @@index([part_id], map: "part_id")
}

model noten_pruefungen_sub_rooms {
  exam_id              BigInt
  room_id              BigInt
  noten_pruefungen_sub noten_pruefungen_sub @relation(fields: [exam_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "noten_pruefungen_sub_rooms_exam_id")

  @@id([exam_id, room_id])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model noten_pruefungen_tickets {
  pid   BigInt   @default(0)
  sid   BigInt   @default(0)
  datum DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  user  BigInt   @default(0)
  ip    String?  @db.VarChar(15)

  @@index([pid], map: "pid")
  @@ignore
}

model noten_pruefungen_typ {
  id              BigInt  @id @default(autoincrement())
  aktiv           Int     @default(1) @db.TinyInt
  de              String? @db.VarChar(32)
  en              String? @db.VarChar(32)
  position        Int     @default(1) @db.TinyInt
  stat_id         BigInt
  style           String? @db.VarChar(32)
  evaluation_type Int     @default(0) @db.TinyInt
  online          Boolean @default(false)
  exam            exam[]

  @@index([aktiv], map: "aktiv")
}

model noten_rating {
  id       BigInt  @id @default(autoincrement())
  label_de String? @db.VarChar(255)
  label_en String? @db.VarChar(255)
  position Int     @default(0)
}

model noten_schedule {
  jahr               Int       @default(0)
  semester           Int       @default(0) @db.TinyInt
  final_titel        String?   @db.VarChar(255)
  final_start        DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  final_end          DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  final_cancel       DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  final_date         DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  final_enter        DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  final_release      DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  final_publish      DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  final_text         String?   @db.Text
  supplement_titel   String?   @db.VarChar(255)
  supplement_start   DateTime? @db.DateTime(0)
  supplement_end     DateTime? @db.DateTime(0)
  supplement_cancel  DateTime? @db.DateTime(0)
  supplement_date    DateTime? @db.DateTime(0)
  supplement_enter   DateTime? @db.DateTime(0)
  supplement_release DateTime? @db.DateTime(0)
  supplement_publish DateTime? @db.DateTime(0)
  supplement_text    String?   @db.Text

  @@id([jahr, semester])
}

model noten_select {
  id                             BigInt                           @id @default(autoincrement())
  feld                           String?                          @db.VarChar(32)
  value                          String?                          @db.VarChar(32)
  selected                       Int                              @default(0) @db.TinyInt
  de                             String?                          @db.VarChar(64)
  en                             String?                          @db.VarChar(64)
  position                       Int                              @default(0)
  secondary_value                String?                          @db.VarChar(32)
  exam_display                   Int                              @default(0) @db.SmallInt
  exam_form                      Int                              @default(0) @db.SmallInt
  exam_approval_id               BigInt?
  exam_approval                  exam_approval?                   @relation(fields: [exam_approval_id], references: [id], onUpdate: NoAction, map: "fk_noten_select_exam_approval_id")
  course_lecture_series_language course_lecture_series_language[]
  exam_partial_performance       exam_partial_performance[]
  kb_vorlesungen                 kb_vorlesungen[]
  module_version_language        module_version_language[]
  noten_faecher_desc             noten_faecher_desc[]
  subject_version_exam_type      subject_version_exam_type[]
  subject_version_language       subject_version_language[]

  @@index([feld], map: "feld")
  @@index([exam_approval_id], map: "fk_noten_select_exam_approval_id")
}

model noten_semester {
  sid          BigInt  @default(0)
  semester     BigInt
  jahr         Int     @default(0)
  term         Int     @default(0)
  avg          Float   @default(0) @db.Float
  avg_points   Float   @db.Float
  gpa          Float   @default(0) @db.Float
  gpa_points   Float   @db.Float
  credits      Float   @default(0) @db.Float
  credits_calc Float   @db.Float
  ects         String? @db.VarChar(3)
  results      Int     @default(0)

  @@unique([sid, semester, jahr, term], map: "sid")
}

model noten_session {
  session    String   @id @default("") @db.VarChar(40)
  bereich    Int      @default(0)
  klasse     BigInt   @default(0)
  studium    BigInt   @default(0)
  profil     BigInt   @default(0)
  standort   Int      @default(1)
  attribute  String?  @db.VarChar(255)
  lastaction DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)

  @@index([bereich], map: "bereich")
  @@index([klasse], map: "klasse")
  @@index([studium], map: "studium")
}

model noten_stat {
  id                       BigInt                   @id @default(autoincrement())
  simovative_id            BigInt?                  @unique(map: "simovative_id")
  cat                      BigInt
  aktiv                    Int                      @default(1) @db.TinyInt
  name                     String?                  @db.VarChar(128)
  typ                      String?                  @db.VarChar(5)
  skript                   String?                  @db.VarChar(100)
  sql_link                 String?                  @db.VarChar(255)
  description              String?                  @db.Text
  use_alternative_database Int                      @default(0) @db.TinyInt
  chart_type               String?                  @db.VarChar(16)
  chart_labels             String?                  @db.VarChar(255)
  chart_data               String?                  @db.VarChar(255)
  query_cache              Int?                     @db.MediumInt
  access_key               String?                  @db.VarChar(255)
  access_token             String?                  @db.VarChar(255)
  create_view              Boolean                  @default(false)
  dashboard_gadget_tiles   dashboard_gadget_tiles[]
  noten_stat_styles        noten_stat_styles[]

  @@index([aktiv], map: "aktiv")
  @@index([cat], map: "cat")
}

model noten_stat_cache {
  query_hash String   @id @default("") @db.VarChar(32)
  query_date DateTime @default(now()) @db.Timestamp(0)
  query_data String?  @db.LongText
}

model noten_stat_cat {
  id                          BigInt                        @id @default(autoincrement())
  de                          String?                       @db.VarChar(128)
  en                          String?                       @db.VarChar(128)
  aktiv                       Int                           @default(1) @db.TinyInt
  noten_stat_cat_access_group noten_stat_cat_access_group[]
}

model noten_stat_cat_access_group {
  category_id     BigInt
  access_group_id BigInt
  access_groups   access_groups  @relation(fields: [access_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "noten_stat_cat_access_group_ibfk_2")
  noten_stat_cat  noten_stat_cat @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "noten_stat_cat_access_group_ibfk_1")

  @@id([category_id, access_group_id])
  @@index([access_group_id], map: "access_group_id")
  @@index([category_id], map: "category_id")
}

model noten_stat_database {
  id                BigInt  @id
  active            Int     @db.TinyInt
  server_host       String? @db.VarChar(255)
  server_port       String? @db.VarChar(255)
  database_name     String? @db.VarChar(255)
  database_user     String? @db.VarChar(255)
  database_password String? @db.VarChar(255)
}

model noten_stat_sql {
  id        BigInt  @id @default(autoincrement())
  stat      BigInt  @unique(map: "unique_stat")
  sql       String? @db.MediumText
  position  Int     @default(0) @db.TinyInt
  excluding Int     @default(0) @db.TinyInt
}

model noten_stat_styles {
  id         BigInt      @id @default(autoincrement())
  stat       BigInt?
  row        String?     @db.VarChar(32)
  eval       String?     @db.VarChar(2)
  value      String?     @db.VarChar(64)
  style      String?     @db.VarChar(32)
  noten_stat noten_stat? @relation(fields: [stat], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "id_query")

  @@index([stat], map: "id_query")
}

model noten_stat_vars {
  id        BigInt  @id @default(autoincrement())
  stat      BigInt
  de        String? @db.VarChar(64)
  en        String? @db.VarChar(64)
  name      String? @db.VarChar(64)
  typ       String? @db.VarChar(8)
  tbl_name  String? @db.VarChar(64)
  tbl_id    String? @db.VarChar(32)
  tbl_field String? @db.VarChar(32)
  position  Int     @db.TinyInt
  tip       String? @db.VarChar(128)

  @@index([stat], map: "stat")
}

model noten_students {
  sid         BigInt  @default(0)
  parent      BigInt
  avg         Float   @default(0) @db.Float
  avg_points  Float   @db.Float
  gpa         Float   @default(0) @db.Float
  gpa_points  Float   @db.Float
  credits     Float   @default(0) @db.Float
  ects        String? @db.VarChar(3)
  results     Int     @default(0)
  forceRecalc Boolean @default(false)

  @@id([sid, parent])
}

model noten_submission {
  id                       BigInt                     @unique(map: "id") @default(autoincrement())
  grade_id                 BigInt
  submission_id            BigInt
  is_evaluation_points     Int?                       @db.TinyInt
  noten                    noten                      @relation(fields: [grade_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_noten_submission_grade_id")
  submission               submission                 @relation(fields: [submission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_noten_submission_submission_id")
  noten_submission_partial noten_submission_partial[]

  @@id([grade_id, submission_id])
  @@index([submission_id], map: "fk_noten_submission_submission_id")
}

model noten_submission_oral_examination {
  grade_id      BigInt
  submission_id BigInt
  noten         noten      @relation(fields: [grade_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_noten_submission_oral_grade_id")
  submission    submission @relation(fields: [submission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_noten_submission_oral_submission_id")

  @@id([grade_id, submission_id])
  @@index([submission_id], map: "fk_noten_submission_oral_submission_id")
}

model noten_submission_partial {
  id                    BigInt              @id @default(autoincrement())
  submission_id         BigInt
  partial_valuation     Float               @db.Float
  supervisor_position   Int
  noten_submission_id   BigInt?
  valuation_type_id     BigInt
  evaluation_max_points Float?              @db.Float
  is_evaluation_points  Float?              @db.Float
  noten_submission      noten_submission?   @relation(fields: [noten_submission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_noten_submission_partial_noten_submission_id")
  submission            submission          @relation(fields: [submission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_noten_submission_partial_submission_id")
  exam_valuation_type   exam_valuation_type @relation(fields: [valuation_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_noten_submission_partial_valuation_type_id")

  @@unique([submission_id, supervisor_position], map: "idx_submission_id_supervisor_position")
  @@index([noten_submission_id], map: "fk_noten_submission_partial_noten_submission_id")
  @@index([valuation_type_id], map: "fk_noten_submission_partial_valuation_type_id")
}

model noten_teilnoten {
  id                                 BigInt                               @id @default(autoincrement())
  sid                                BigInt                               @default(0)
  pid                                BigInt                               @default(0)
  released                           Int                                  @db.TinyInt
  fachid                             BigInt                               @default(0)
  pruefung                           String?                              @db.VarChar(100)
  typ                                Int                                  @db.TinyInt
  gewichtung                         Float                                @default(0)
  punkte                             Float?                               @default(0)
  note                               Float?                               @default(0)
  grade                              String?                              @db.VarChar(3)
  von                                Int?                                 @default(0)
  kommentar                          String?                              @db.VarChar(100)
  showtime                           Int                                  @default(0) @db.TinyInt
  attest                             Int                                  @default(0) @db.TinyInt
  accredited                         Int                                  @default(0) @db.TinyInt
  transfer_id                        BigInt?                              @default(0)
  annotation_id                      BigInt?
  grade_annotation                   grade_annotation?                    @relation(fields: [annotation_id], references: [id], onUpdate: NoAction, map: "fk_noten_teilnoten_grade_annotation")
  grade_partial_request_form_profile grade_partial_request_form_profile[]

  @@unique([sid, pid], map: "sid")
  @@index([annotation_id], map: "fk_noten_teilnoten_grade_annotation")
  @@index([released], map: "released")
  @@index([transfer_id], map: "transfer_id")
}

model noten_teilnoten_locked {
  pid   BigInt
  sid   BigInt
  grund String? @db.VarChar(255)

  @@unique([pid, sid], map: "pid")
}

model noten_tracks {
  id      BigInt  @id @default(autoincrement())
  klasse  BigInt  @default(0)
  studium BigInt  @default(0)
  bez_de  String? @db.VarChar(64)
  bez_en  String? @db.VarChar(64)
  bez_fr  String? @db.VarChar(64)
  bez_es  String? @db.VarChar(64)
  faecher String? @db.Text
}

model noten_zeugnis {
  id       BigInt  @id @default(autoincrement())
  name     String? @db.VarChar(64)
  filename String? @db.VarChar(64)
  datasrc  Int     @default(1) @db.TinyInt
  semester Int     @default(0) @db.TinyInt
}

model noten_zeugnis_daten {
  zeugnis BigInt  @default(0)
  klasse  BigInt  @default(0)
  studium BigInt  @default(0)
  faecher String? @db.Text

  @@id([zeugnis, klasse, studium])
}

model noten_zeugnis_druck {
  zeugnis           BigInt @id @default(0)
  border_top        Float  @default(20) @db.Float
  border_left       Float  @default(20) @db.Float
  border_right      Float  @default(20) @db.Float
  border_bottom     Float  @default(20) @db.Float
  correction_faktor Float  @default(0) @db.Float
  correction_left   Float  @default(0) @db.Float
  correction_top    Float  @default(0) @db.Float
}

model noten_zeugnis_einstellungen {
  id            BigInt  @id @default(autoincrement())
  typ           Int     @default(0) @db.TinyInt
  kopf_1        String? @db.VarChar(60)
  kopf_2        String? @db.VarChar(60)
  kopf_3        String? @db.VarChar(60)
  ausrichtung   String? @db.Char(1)
  absatz        Int     @default(0) @db.TinyInt
  spalte_neu    Int     @default(0) @db.TinyInt
  format_std    Int     @default(0) @db.TinyInt
  format_spr    Int     @default(0) @db.TinyInt
  fuss_1        String? @db.VarChar(60)
  fuss_2        String? @db.VarChar(60)
  unterzeichner String? @db.VarChar(40)
  position      String? @db.VarChar(40)
  fachbereiche  String? @db.VarChar(255)
}

model noten_zeugnis_excel {
  zeugnis          BigInt  @id @default(0)
  output_format    String? @db.VarChar(16)
  output_nb        String? @db.VarChar(32)
  output_ent       String? @db.VarChar(32)
  output_unt       String? @db.VarChar(32)
  nachkomma        Int     @default(0) @db.TinyInt
  show_average_all Int?    @db.TinyInt
  show_average_sep Int?    @db.TinyInt
  show_gpa_all     Int?    @db.TinyInt
  show_gpa_sep     Int?    @db.TinyInt
  show_credits_all Int?    @db.TinyInt
  show_credits_sep Int?    @db.TinyInt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model noten_zeugnis_excel_data {
  zeugnis BigInt @default(0)
  feld    BigInt @default(0)

  @@index([zeugnis, feld], map: "zeugnis")
  @@ignore
}

model noten_zeugnis_felder {
  id          BigInt  @id @default(autoincrement())
  zeugnis     BigInt  @default(0)
  page        Int     @default(0) @db.TinyInt
  x           Float   @default(0) @db.Float
  y           Float   @default(0) @db.Float
  text_de     String? @db.Text
  text_en     String? @db.Text
  text_fr     String? @db.Text
  text_es     String? @db.Text
  align       String? @db.Char(1)
  font        String? @db.VarChar(20)
  size        Float   @default(0) @db.Float
  zeilen      Float   @default(5) @db.Float
  bold        Int     @default(0) @db.TinyInt
  underline   Int     @default(0) @db.TinyInt
  italic      Int     @default(0) @db.TinyInt
  border      String? @db.VarChar(4)
  borderwidth Float   @default(0.2) @db.Float
  bordercolor String? @db.VarChar(7)
  width       Float   @default(0) @db.Float
  height      Float   @default(0) @db.Float
  textcolor   String? @db.VarChar(7)
  bgcolor     String? @db.VarChar(7)
}

model noten_zeugnis_grafik {
  id         BigInt  @id @default(autoincrement())
  zeugnis    BigInt  @default(0)
  page       Int     @default(1) @db.TinyInt
  name       String? @db.VarChar(32)
  typ        Int     @default(0) @db.TinyInt
  x          Float   @default(0) @db.Float
  y          Float   @default(0) @db.Float
  width      Float   @default(0) @db.Float
  height     Float   @default(0) @db.Float
  bgcolor    String? @db.VarChar(7)
  img_format String? @db.VarChar(5)

  @@index([zeugnis], map: "zeugnis")
}

model noten_zeugnis_pdf {
  zeugnis              BigInt  @id @default(0)
  seiten               Int     @default(1) @db.TinyInt
  layout               Int     @default(0) @db.TinyInt
  width_code           Float   @default(0) @db.Float
  width_course         Float   @default(70) @db.Float
  width_result         Float   @default(15) @db.Float
  width_term           Float   @default(0) @db.Float
  width_points         Float   @default(0) @db.Float
  width_credits        Float   @default(0) @db.Float
  width_grade          Float   @default(0) @db.Float
  spaltenabstand       Float   @default(8) @db.Float
  wholepage            Int     @default(1) @db.TinyInt
  fachbereich_space    Int     @default(0) @db.TinyInt
  fachbereich_print    Int     @default(0) @db.TinyInt
  fachbereich_finalize Int     @default(0) @db.TinyInt
  format               String? @db.VarChar(16)
  result_bgcolor       String? @db.VarChar(7)
  font                 String? @db.VarChar(16)
  fontsize             Int     @default(0) @db.TinyInt
  lineheight           Float   @default(5) @db.Float
  page                 Int     @default(1) @db.TinyInt
  position             Int     @default(0) @db.TinyInt
  space_prev           Float   @default(0) @db.Float
  space_next           Float   @default(0) @db.Float
  spalte_code          String? @db.VarChar(32)
  spalte_course        String? @db.VarChar(32)
  spalte_result        String? @db.VarChar(32)
  spalte_term          String? @db.VarChar(32)
  spalte_points        String? @db.VarChar(32)
  spalte_credits       String? @db.VarChar(32)
  spalte_grade         String? @db.VarChar(32)
  average_all          Int     @default(2) @db.TinyInt
  gpa_all              Int     @default(3) @db.TinyInt
}

model notification_banner {
  id     BigInt  @id @default(autoincrement())
  text   String? @db.Text
  active Boolean @default(false)
  type   BigInt
  icon   BigInt
}

model oauth_access_token {
  id                  String                @id @db.VarChar(255)
  client_id           String                @db.VarChar(255)
  scopes              String?               @db.Text
  revoked             Boolean
  created_at          DateTime              @db.DateTime(0)
  updated_at          DateTime?             @db.DateTime(0)
  expires_at          DateTime              @db.DateTime(0)
  oauth_client        oauth_client          @relation(fields: [client_id], references: [client_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_oauth_access_token_client_id")
  oauth_refresh_token oauth_refresh_token[]

  @@index([client_id], map: "fk_oauth_access_token_client_id")
}

model oauth_client {
  profile_id         BigInt
  client_id          String               @unique(map: "client_id") @db.VarChar(255)
  client_secret      String               @db.VarChar(255)
  hidden             Boolean
  comment            String?              @db.VarChar(255)
  profil             profil               @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_oauth_client_profile_id")
  oauth_access_token oauth_access_token[]

  @@id([profile_id, client_id])
}

model oauth_key {
  id             BigInt @id
  public_key     String @db.Text
  private_key    String @db.Text
  encryption_key String @db.VarChar(255)
}

model oauth_refresh_token {
  id                 String              @id @db.VarChar(255)
  access_token_id    String?             @db.VarChar(255)
  revoked            Boolean
  expires_at         DateTime            @db.DateTime(0)
  oauth_access_token oauth_access_token? @relation(fields: [access_token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_oauth_refresh_token_access_token_id")

  @@index([access_token_id], map: "fk_oauth_refresh_token_access_token_id")
}

model office365_calendar {
  id                        BigInt   @id @default(autoincrement())
  office_365_calendar_id    String?  @db.VarChar(255)
  office_365_id_has_changed Boolean?
  internal_id               String?  @db.VarChar(255)
  office365_setting_id      BigInt
  mail                      String?  @db.VarChar(255)
}

model office365_calendar_resource_log {
  id                   BigInt   @id @default(autoincrement())
  created_at           DateTime @db.DateTime(0)
  office365_setting_id BigInt
  context              String?  @db.VarChar(255)
  resource_usage_count Int      @default(0)
}

model office365_connect_log {
  id            Int      @id @default(autoincrement()) @db.SmallInt
  profile_id    Int      @db.SmallInt
  type          Int      @db.SmallInt
  changeDate    DateTime @db.DateTime(0)
  office365Mail String   @db.VarChar(255)
  settingId     Int      @db.SmallInt
  applicationId String   @db.VarChar(255)
}

model office365_session_data {
  id                   BigInt    @id @default(autoincrement())
  profile_id           BigInt?
  session_state        String?   @db.Text
  token_type           String?   @db.VarChar(255)
  token_expires        Int?
  access_token         String?   @db.Text
  token_create_time    DateTime? @db.DateTime(0)
  refresh_token        String?   @db.Text
  office365_setting_id BigInt
}

model office365_setting {
  id                         BigInt    @id @default(autoincrement())
  application_id             String?   @db.VarChar(255)
  application_password       String?   @db.VarChar(255)
  auth_code                  String?   @db.Text
  scope                      String?   @db.VarChar(255)
  failed_connection_counter  Int       @default(0) @db.TinyInt
  notification_email_sent_at DateTime? @db.DateTime(0)
  mail                       String?   @db.VarChar(255)
}

model office365_setting_health_status {
  id                         BigInt    @id @default(autoincrement())
  notification_email_address String?   @db.VarChar(255)
  notification_email_sent_at DateTime? @db.DateTime(0)
}

model online_exam_lock_out_reason {
  id             BigInt           @id @default(autoincrement())
  label_de       String?          @db.VarChar(255)
  label_en       String?          @db.VarChar(255)
  profil_studium profil_studium[]
}

model online_exam_module_enrolment {
  id                   BigInt              @id @default(autoincrement())
  module_version_id    BigInt?
  subject_version_id   BigInt?
  booking_id           BigInt
  enrolment_date       DateTime            @db.DateTime(0)
  exam_start_date_time DateTime?           @db.DateTime(0)
  exam_end_date_time   DateTime?           @db.DateTime(0)
  profil_studium       profil_studium      @relation(fields: [booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "online_exam_module_enrolment_booking_id")
  noten_modul_desc     noten_modul_desc?   @relation(fields: [module_version_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "online_exam_module_enrolment_module_version_id")
  noten_faecher_desc   noten_faecher_desc? @relation(fields: [subject_version_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_online_exam_module_enrolment_subject_version_id")

  @@index([subject_version_id], map: "fk_online_exam_module_enrolment_subject_version_id")
  @@index([enrolment_date], map: "idx_enrolment_date")
  @@index([booking_id], map: "online_exam_module_enrolment_booking_id")
  @@index([module_version_id], map: "online_exam_module_enrolment_module_version_id")
}

model online_exam_settings {
  id                    BigInt  @id @default(autoincrement())
  accept_guidelines     Boolean
  accept_privacy_policy Boolean
  guidelines_de         String? @db.Text
  guidelines_en         String? @db.Text
  privacy_policy_de     String? @db.Text
  privacy_policy_en     String? @db.Text
  opt_in                Boolean
  link                  String? @db.VarChar(255)
  cancellation_allowed  Int     @default(1) @db.TinyInt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model overlapping {
  id                BigInt    @default(0)
  tmpint            String?   @db.VarChar(50)
  vorname           String?   @db.VarChar(200)
  nachname          String?   @db.VarChar(200)
  rufname           String?   @db.VarChar(200)
  geburtsname       String?   @db.VarChar(200)
  geburtsdatum      DateTime? @db.DateTime(0)
  geburtsort        String?   @db.VarChar(100)
  geburtsland       Int?
  sterbedatum       DateTime? @db.DateTime(0)
  geschlecht        Int?
  sagh1             Int?
  sagh2             Int?
  atitel            Int?
  titelvor          String?   @db.VarChar(100)
  titelmitte        String?   @db.VarChar(100)
  titelnach         String?   @db.VarChar(100)
  konfession        Int?
  famstand          Int?
  sprache           Int?
  anrede            String?   @db.Text
  vater             String?   @db.Text
  mutter            String?   @db.Text
  partner           String?   @db.Text
  referenz          String?   @db.VarChar(200)
  akte              String?   @db.VarChar(100)
  bild              String?   @db.VarChar(200)
  blacklist         String?   @db.Text
  bemerkung         String?   @db.Text
  datum_ds          DateTime? @db.DateTime(0)
  datum_la          DateTime? @db.DateTime(0)
  pers_ds           String?   @db.VarChar(100)
  pers_la           String?   @db.VarChar(100)
  comp_ds           String?   @db.VarChar(100)
  comp_la           String?   @db.VarChar(100)
  cpers_ds          String?   @db.VarChar(100)
  cpers_la          String?   @db.VarChar(100)
  freigabe          Int?
  anschriftenzusatz String?   @db.VarChar(200)

  @@ignore
}

model periodical_calendar {
  id              BigInt   @id @default(autoincrement())
  group_id        BigInt?
  study_course_id BigInt?
  cohort_id       BigInt?
  site_id         BigInt
  created_at      DateTime @db.DateTime(0)
  label           String?  @db.VarChar(255)
  is_academical   BigInt   @default(0)
}

model periodical_calendar_event {
  id                               BigInt    @id @default(autoincrement())
  parent_calendar_event_id         BigInt?
  calendar_id                      BigInt?
  start_date                       DateTime  @db.DateTime(0)
  end_date                         DateTime  @db.DateTime(0)
  title_en                         String?   @db.VarChar(255)
  title_de                         String?   @db.VarChar(255)
  text_en                          String?   @db.Text
  text_de                          String?   @db.Text
  event_length                     BigInt?
  recurring_type                   String?   @db.VarChar(255)
  recurring_count                  String?   @db.VarChar(255)
  recurring_day                    String?   @db.VarChar(255)
  recurring_count2                 String?   @db.VarChar(255)
  recurring_days                   String?   @db.VarChar(255)
  recurring_extra                  String?   @db.VarChar(255)
  recurring_value_day_type         String?   @db.VarChar(255)
  recurring_value_day_count        String?   @db.VarChar(255)
  recurring_value_week_day         String?   @db.VarChar(255)
  recurring_value_week_count       String?   @db.VarChar(255)
  recurring_value_month_type       String?   @db.VarChar(255)
  recurring_value_month_day        String?   @db.VarChar(255)
  recurring_value_month_count      String?   @db.VarChar(255)
  recurring_value_month_week2      String?   @db.VarChar(255)
  recurring_value_month_day2       String?   @db.VarChar(255)
  recurring_value_month_count2     String?   @db.VarChar(255)
  recurring_value_year_type        String?   @db.VarChar(255)
  recurring_value_year_day         String?   @db.VarChar(255)
  recurring_value_year_month       String?   @db.VarChar(255)
  recurring_value_year_week2       String?   @db.VarChar(255)
  recurring_value_year_day2        String?   @db.VarChar(255)
  recurring_value_year_month2      String?   @db.VarChar(255)
  recurring_value_end              String?   @db.VarChar(255)
  recurring_value_occurences_count String?   @db.VarChar(255)
  recurring_value_date_of_end      DateTime? @db.DateTime(0)
  periodical_calendar_id           BigInt?
  all_day_event                    Boolean?  @default(false)
}

model periodical_calendar_event_file {
  id                           BigInt   @id @default(autoincrement())
  periodical_calendar_event_id BigInt
  file_name                    String?  @db.VarChar(255)
  created_at                   DateTime @db.DateTime(0)
}

model periodical_calendar_site {
  id                     BigInt @id @default(autoincrement())
  periodical_calendar_id BigInt
  site_id                BigInt
}

model permission_right {
  id          BigInt  @id @default(autoincrement())
  category_id BigInt
  name        String? @unique(map: "name") @db.VarChar(255)
  description String? @db.Text
}

model permission_right_category {
  id   BigInt  @id @default(autoincrement())
  name String? @unique(map: "name") @db.VarChar(255)
}

model permission_role {
  id          BigInt  @id @default(autoincrement())
  name        String? @unique(map: "name") @db.VarChar(255)
  description String? @db.Text
}

model permission_role_group {
  group_id BigInt
  role_id  BigInt

  @@id([group_id, role_id])
}

model permission_role_profile {
  role_id    BigInt
  profile_id BigInt

  @@id([role_id, profile_id])
}

model permission_role_right {
  right_id BigInt
  role_id  BigInt

  @@id([right_id, role_id])
}

model petition {
  id           BigInt   @id @default(autoincrement())
  type         BigInt
  title        String?  @db.VarChar(255)
  profil       BigInt
  created_user BigInt
  created_date DateTime @db.DateTime(0)
  edit_user    BigInt
  edit_date    DateTime @db.DateTime(0)
  closed_user  BigInt
  closed_date  DateTime @db.DateTime(0)
  status       Int      @db.TinyInt

  @@index([type, profil], map: "type")
}

model planning_group {
  id                                        BigInt                                      @id @default(autoincrement())
  name                                      String?                                     @db.VarChar(255)
  active                                    Int                                         @default(1) @db.TinyInt
  permanent                                 Int                                         @default(0) @db.TinyInt
  semester_id                               Int?
  site_id                                   BigInt
  planned_size                              Int?                                        @db.SmallInt
  cohort_id                                 BigInt?
  relevant_for_professor_quota              Boolean                                     @default(false)
  area_of_concentration_id                  BigInt?
  participant_generation_limit              Int?
  studium_schwerpunkte                      studium_schwerpunkte?                       @relation(fields: [area_of_concentration_id], references: [id], onUpdate: NoAction, map: "fk_planning_group_area_of_concentration_id")
  klasse                                    klasse?                                     @relation(fields: [cohort_id], references: [id], onUpdate: NoAction, map: "fk_planning_group_cohort_id")
  ac5_semester                              ac5_semester?                               @relation(fields: [semester_id], references: [id], onUpdate: NoAction, map: "planning_group_semester_id")
  pm_standorte                              pm_standorte                                @relation(fields: [site_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "planning_group_site_id_not_null")
  course_lecture_series_part_planning_group course_lecture_series_part_planning_group[]
  course_lecture_series_planning_group      course_lecture_series_planning_group[]
  event_date_planning_group                 event_date_planning_group[]
  event_series_planning_group               event_series_planning_group[]
  planning_group_participant                planning_group_participant[]

  @@index([area_of_concentration_id], map: "fk_planning_group_area_of_concentration_id")
  @@index([cohort_id], map: "fk_planning_group_cohort_id")
  @@index([semester_id], map: "planning_group_semester_id")
  @@index([site_id], map: "planning_group_site_id_not_null")
}

model planning_group_log {
  id        BigInt    @id @default(autoincrement())
  type      String?   @db.VarChar(255)
  time      DateTime? @db.DateTime(0)
  user_id   BigInt?
  values    String?   @db.Text
  entity_id BigInt?
}

model planning_group_participant {
  planning_group_id BigInt
  profile_id        BigInt
  planning_group    planning_group @relation(fields: [planning_group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "planning_group_participant_ibfk_1")
  profil            profil         @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "planning_group_participant_ibfk_2")

  @@id([planning_group_id, profile_id])
  @@index([profile_id], map: "profile_id")
}

model pm_deleted_classes {
  id                     BigInt   @id @default(autoincrement())
  did                    BigInt   @default(0)
  dday                   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  name                   String?  @db.VarChar(255)
  studium                BigInt   @default(0)
  beginn                 DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  ende                   DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  aktiv                  Int      @default(1) @db.TinyInt
  studiendauer           Int      @default(0)
  studienbeginn_semester Int      @default(3) @db.TinyInt
  studiendauer_einheit   String?  @db.VarChar(12)
  chat                   Int      @default(0) @db.TinyInt
  stid                   BigInt   @default(1)
  gebuehr                Float    @default(0) @db.Float
  waehrung               String?  @db.Char(2)
  abrechnungszeitraum    String?  @db.VarChar(10)
}

model pm_deleted_profiles {
  id                   BigInt    @id @unique(map: "id") @default(autoincrement())
  did                  BigInt    @default(0)
  dday                 DateTime? @db.DateTime(0)
  archiv               Int       @db.TinyInt
  delid                BigInt    @default(0)
  nummer               String?   @db.VarChar(50)
  user                 String?   @db.VarChar(30)
  pw                   String?   @db.VarChar(255)
  anrede               BigInt?
  name                 String?   @db.VarChar(40)
  firma                String?   @db.VarChar(64)
  vorname              String?   @db.VarChar(40)
  middlename           String?   @db.VarChar(64)
  showadress           Int       @default(1) @db.TinyInt
  strasse              String?   @db.VarChar(25)
  strasse2             String?   @db.VarChar(255)
  ortszusatz           String?   @db.VarChar(255)
  land                 BigInt?
  plz                  String?   @db.VarChar(20)
  ort                  String?   @db.VarChar(25)
  showtel              Int       @default(1) @db.TinyInt
  telefon              String?   @db.VarChar(20)
  familienstand        String?   @db.VarChar(20)
  pager                String?   @db.VarChar(255)
  skype                String?   @db.VarChar(255)
  facebook             String?   @db.VarChar(255)
  twitter              String?   @db.VarChar(255)
  linkedin             String?   @db.VarChar(255)
  xing                 String?   @db.VarChar(255)
  blog                 String?   @db.VarChar(255)
  crm_letter           Int?      @db.TinyInt
  crm_email            Int?      @db.TinyInt
  crm_phone            Int?      @db.TinyInt
  crm_newsletter       Int?      @db.TinyInt
  crm_lang             String?   @db.VarChar(255)
  telefon2             String?   @db.VarChar(25)
  showmobil            Int       @default(0) @db.TinyInt
  mobil                String?   @db.VarChar(20)
  showfax              Int       @default(1) @db.TinyInt
  telefax              String?   @db.VarChar(20)
  email                String?   @db.VarChar(50)
  adresszusatz         String?   @db.VarChar(255)
  web                  String?   @db.VarChar(50)
  klasse               BigInt?
  geb                  DateTime? @db.Date
  ekm                  String?   @db.VarChar(4)
  geburtsort           String?   @db.VarChar(30)
  geburtsland          BigInt?
  staatsangehoerigkeit BigInt?
  bundesland           String?   @db.VarChar(255)
  muttersprache        String?   @db.VarChar(255)
  status               String?   @db.VarChar(30)
  login                BigInt    @default(0)
  lastchanged          DateTime? @db.Date
  thislogin            DateTime? @db.DateTime(0)
  lastlogin            DateTime? @db.DateTime(0)
  locked               Int?      @default(0) @db.TinyInt
  grad                 BigInt    @default(0)
  titel                String?   @db.VarChar(30)
  geburtsname          String?   @db.VarChar(40)
  sonstiges            String?   @db.LongText
  sonstiges2           String?   @db.Text
  lang                 String?   @db.VarChar(2)
  ip_folder            BigInt?
  position             String?   @db.VarChar(255)
  mentor               String?   @db.VarChar(255)
  studienzentrum       String?   @db.VarChar(255)
  cms_level            Int?      @db.TinyInt
  affiliation          String?   @db.VarChar(255)
  community            String?   @db.VarChar(255)
  created_user         BigInt?
  created_date         DateTime? @db.Date
  edit_user            BigInt?
  edit_date            DateTime? @db.Date
  defaultSiteId        BigInt?
  key_accounter_id     BigInt?
  customer_identity    String?   @db.VarChar(50)
  name_neu             String?   @db.VarChar(40)
  show_namealtneu      Int       @default(1) @db.TinyInt
  mnr                  String?   @db.VarChar(16)
  studium              BigInt    @default(0)

  @@index([id], map: "id_2")
}

model pm_dokumente {
  id             BigInt  @id @default(autoincrement())
  name           String? @db.VarChar(100)
  kuerzel        String? @db.VarChar(32)
  typ            String? @db.VarChar(100)
  standard       Int     @db.TinyInt
  gruppe         String? @db.VarChar(40)
  groupid        BigInt  @default(0)
  content        String? @db.Text
  link           String? @db.Text
  SETTINGS       Int     @default(0) @db.TinyInt
  einschub_1     String? @db.Text
  einschub_1_set Int     @default(0) @db.TinyInt
  einschub_2     String? @db.Text
  einschub_2_set Int     @default(0) @db.TinyInt
  EINZELDOKUMENT Int     @default(0) @db.TinyInt
  addCount       Int     @default(0) @db.TinyInt
  addFields      Int     @default(0) @db.TinyInt
}

model pm_exchange_data {
  id                BigInt  @id @default(autoincrement())
  pid               BigInt  @default(0)
  wunschland        Int     @default(0)
  wunschuni         String? @db.TinyText
  wunsch_2          String? @db.TinyText
  anmerkung         String? @db.Text
  zeitraum          String? @db.TinyText
  bewerbungsfrist   String? @db.TinyText
  bewerbungsdatum   String? @db.TinyText
  status            String? @db.TinyText
  f37               String? @db.TinyText
  notendatum        String? @db.TinyText
  noten_umgerechnet String? @db.TinyText

  @@index([pid], map: "idx_pid")
}

model pm_exchange_fields {
  id            BigInt  @id @default(autoincrement())
  groupid       BigInt  @default(0)
  name          String? @db.VarChar(64)
  feld          String? @db.VarChar(64)
  typ           String? @db.VarChar(8)
  position      Int     @default(0)
  export        Int     @default(0) @db.TinyInt
  suche         Int     @default(0) @db.TinyInt
  system        Int     @default(0) @db.TinyInt
  gewichtung    Int     @default(1) @db.TinyInt
  ref_table     String? @db.VarChar(32)
  ref_field     String? @db.VarChar(32)
  ref_name      String? @db.VarChar(32)
  ref_param     String? @db.VarChar(255)
  ref_selection String? @db.Text
}

model pm_fields {
  id                                    BigInt                                  @id @default(autoincrement())
  pid                                   BigInt?
  firmenid                              BigInt?
  aktiv                                 Boolean?
  adresstyp                             Int?
  rechnungsadresse                      Boolean?                                @default(false)
  korrespondenzadresse                  Boolean?                                @default(false)
  adresszusatz                          String?                                 @db.VarChar(200)
  adresszusatz_3                        String?                                 @db.VarChar(255)
  adresszusatz_2                        String?                                 @db.VarChar(255)
  strasse                               String?                                 @db.VarChar(255)
  plz                                   String?                                 @db.VarChar(20)
  ort                                   String?                                 @db.VarChar(255)
  ortszusatz                            String?                                 @db.VarChar(255)
  land                                  BigInt?
  bundesland                            String?                                 @db.VarChar(255)
  kreis                                 String?                                 @db.VarChar(10)
  von                                   DateTime?                               @db.DateTime(0)
  bis                                   DateTime?                               @db.DateTime(0)
  typ                                   Int?
  name                                  String?                                 @db.VarChar(50)
  strasse2                              String?                                 @db.VarChar(255)
  fax                                   String?                                 @db.VarChar(255)
  mobil                                 String?                                 @db.VarChar(255)
  tel                                   String?                                 @db.VarChar(255)
  email                                 String?                                 @db.VarChar(255)
  web                                   String?                                 @db.Text
  anschriftid                           BigInt?
  pager                                 String?                                 @db.VarChar(255)
  skype                                 String?                                 @db.VarChar(25)
  valid_until                           DateTime?                               @db.Date
  bundesstaat                           String?                                 @db.VarChar(255)
  valid_from                            DateTime?                               @db.Date
  valid_to                              DateTime?                               @db.Date
  abteilung                             String?                                 @db.VarChar(255)
  province_id                           BigInt?
  office_type                           Int?                                    @db.SmallInt
  financial_cohort_invoice_data_company financial_cohort_invoice_data_company[]
  financial_cohort_invoice_data_profile financial_cohort_invoice_data_profile[]
  financial_course_invoice_data_company financial_course_invoice_data_company[]
  financial_course_invoice_data_profile financial_course_invoice_data_profile[]
  financial_invoice                     financial_invoice[]
  financial_invoice_copy06032020        financial_invoice_copy06032020[]
  pm_fields_online_application          pm_fields_online_application?
  skeleton_address                      skeleton_address[]
  submission_company                    submission_company[]

  @@index([adresstyp], map: "adresstyp")
  @@index([aktiv], map: "aktiv")
  @@index([anschriftid], map: "anschriftid")
  @@index([bundesland], map: "bundesland")
  @@index([email], map: "email")
  @@index([firmenid], map: "firmenid")
  @@index([pid, firmenid], map: "idx_company_address")
  @@index([korrespondenzadresse], map: "korrespondenzadresse")
  @@index([kreis], map: "kreis")
  @@index([land], map: "land")
  @@index([ort], map: "ort")
  @@index([pid], map: "pid")
  @@index([plz], map: "plz")
  @@index([strasse], map: "strasse")
  @@index([typ], map: "typ")
}

model pm_fields_online_application {
  pm_fields_id             BigInt    @id @default(0)
  created_from_application Int       @db.TinyInt
  pm_fields                pm_fields @relation(fields: [pm_fields_id], references: [id], onDelete: Cascade, map: "fk_pm_fields_online_application_pm_fields_id")
}

model pm_grad {
  id                                       BigInt                                     @id @default(autoincrement())
  name                                     String?                                    @db.VarChar(255)
  bez_en                                   String?                                    @db.VarChar(255)
  status                                   String?                                    @db.VarChar(20)
  groupid                                  BigInt
  position                                 Int                                        @default(0)
  wechsel_moeglich                         Boolean                                    @default(true)
  show_in_overview                         Boolean                                    @default(false)
  guest                                    Int                                        @db.TinyInt
  matriculation_complete                   Int                                        @default(1) @db.SmallInt
  color                                    String?                                    @db.VarChar(20)
  application_program_status_ignore_period application_program_status_ignore_period[]
  cms_datasrc_tabs_grad                    cms_datasrc_tabs_grad[]
  enrolment_period_status                  enrolment_period_status[]
  exam_registration_period_booking_status  exam_registration_period_booking_status[]
  pm_grad_applicant                        pm_grad_applicant?
  pm_grad_exchange                         pm_grad_exchange?
  pm_grad_prospective                      pm_grad_prospective?
  pm_grad_student                          pm_grad_student?
}

model pm_grad_applicant {
  id                                     BigInt                                   @id
  relevant_for_admission_procedure       Boolean?
  approved                               Boolean?
  bis_announcement                       Boolean                                  @default(false)
  target_student_status                  BigInt?
  relevant_for_aliquot_distribution      Boolean                                  @default(false)
  pm_grad                                pm_grad                                  @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pm_grad_applicant_ibfk_1")
  application_status_change_confirmation application_status_change_confirmation[]
}

model pm_grad_exchange {
  id      BigInt  @id
  pm_grad pm_grad @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pm_grad_exchange_ibfk_1")
}

model pm_grad_gruende {
  id    BigInt  @id @default(autoincrement())
  typ   Int     @default(1) @db.TinyInt
  gdex  String? @db.Char(2)
  aikz  String? @db.Char(1)
  ktxt  String? @db.VarChar(10)
  de    String? @db.VarChar(25)
  en    String? @db.VarChar(255)
  ltxt  String? @db.VarChar(50)
  astat String? @db.Char(1)
}

model pm_grad_prospective {
  id      BigInt  @id
  pm_grad pm_grad @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pm_grad_prospective_ibfk_1")
}

model pm_grad_student {
  id                                            BigInt                                          @id
  bis_status                                    BigInt?
  trial_study_allowed                           Int                                             @default(0) @db.TinyInt
  pm_grad                                       pm_grad                                         @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pm_grad_student_ibfk_1")
  mobility_online_configuration_mobility_status mobility_online_configuration_mobility_status[]
}

model pm_logs {
  id         BigInt   @id @default(autoincrement())
  bereich    String?  @db.VarChar(20)
  did        BigInt   @default(0)
  datum      DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  user       BigInt   @default(0)
  ip         String?  @db.VarChar(15)
  log        String?  @db.VarChar(255)
  typ        Int      @default(0) @db.TinyInt
  pro_status Int      @default(0) @db.TinyInt
  ref_table  String?  @db.VarChar(32)
  ref_field  String?  @db.VarChar(32)
  ref_id     BigInt   @default(0)

  @@index([bereich, did, datum], map: "bereich")
  @@index([did, datum], map: "did")
}

model pm_logs_comment {
  id      Int     @id @default(autoincrement())
  comment String? @db.Text
  log_id  Int?
}

model pm_mergedletter_custom {
  id        Int     @id @default(autoincrement())
  namespace String? @db.VarChar(255)
}

model pm_mergedletter_fields {
  id                       BigInt  @id @default(autoincrement())
  merged_letter_classname  String? @db.VarChar(255)
  table                    String? @db.VarChar(255)
  field                    String? @db.VarChar(255)
  field_en                 String? @db.VarChar(255)
  field_alias              String? @db.VarChar(255)
  ref_table                String? @db.VarChar(255)
  ref_table_alias          String? @db.VarChar(255)
  ref_field                String? @db.VarChar(255)
  ref_field_target         String? @db.VarChar(255)
  ref_table_join_condition String? @db.Text
  position                 Int?
}

model pm_raeume {
  id                                             BigInt                  @id @default(autoincrement())
  name                                           String?                 @db.VarChar(255)
  standortid                                     BigInt
  standort                                       BigInt
  typ                                            BigInt?
  vorlesungsraum                                 Boolean?
  uebungsraum                                    Boolean?
  plaetze                                        Int?                    @default(0)
  personen_min                                   Int?                    @default(0)
  personen_max                                   Int?                    @default(0)
  show_in_overview                               Boolean?
  sonstiges                                      String?                 @db.Text
  groesse                                        Float?                  @db.Float
  stockwerk                                      String?                 @db.VarChar(255)
  bestuhlung                                     Int?                    @default(0)
  office_ressource                               String?                 @db.VarChar(255)
  in_community_bookable                          Boolean
  hours_in_community_bookable                    Int?
  kb_standorte                                   kb_standorte            @relation(fields: [standort], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pm_raeume_standort")
  building_room_category                         building_room_category? @relation(fields: [typ], references: [id], onUpdate: NoAction, map: "building_room_category")
  event_date_room                                event_date_room[]
  event_series_room                              event_series_room[]
  kb_stundenplan_kb_stundenplan_raumTopm_raeume  kb_stundenplan[]        @relation("kb_stundenplan_raumTopm_raeume")
  kb_stundenplan_kb_stundenplan_raum2Topm_raeume kb_stundenplan[]        @relation("kb_stundenplan_raum2Topm_raeume")
  pm_raeume_ausstattung                          pm_raeume_ausstattung[]
  skeleton                                       skeleton[]

  @@index([typ], map: "building_room_category")
  @@index([standort], map: "pm_raeume_standort")
}

model pm_raeume_ausstattung {
  raum               BigInt             @default(0)
  ausstattung        BigInt             @default(0)
  pm_raumausstattung pm_raumausstattung @relation(fields: [ausstattung], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pm_raeume_ausstattung_ausstattung")
  pm_raeume          pm_raeume          @relation(fields: [raum], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pm_raeume_ausstattung_raum")

  @@id([raum, ausstattung])
  @@index([ausstattung], map: "pm_raeume_ausstattung_ausstattung")
}

model pm_raeume_typ {
  id BigInt  @id @default(autoincrement())
  de String? @db.VarChar(255)
  en String? @db.VarChar(255)
}

model pm_raumausstattung {
  id                    BigInt                  @id @default(autoincrement())
  de                    String?                 @db.VarChar(255)
  en                    String?                 @db.VarChar(255)
  pm_raeume_ausstattung pm_raeume_ausstattung[]
}

model pm_sql {
  sid       String? @db.VarChar(256)
  sql       String? @db.MediumText
  typ       String? @db.VarChar(255)
  id        BigInt  @id @default(autoincrement())
  sql_order String? @db.VarChar(255)
  sql_sort  String? @db.VarChar(255)
  sql_limit String? @db.VarChar(255)
  show      Int
  limit     Int
  limit2set Int     @db.SmallInt
  show2set  Int     @db.SmallInt
  valid     Boolean @default(true)

  @@index([sid(length: 255)], map: "idx_sid")
  @@index([typ], map: "idx_typ")
}

model pm_standorte {
  id                                        BigInt                                      @id @default(autoincrement())
  nummer                                    Int
  name                                      String?                                     @db.VarChar(70)
  name_en                                   String?                                     @db.VarChar(64)
  gesellschaftsform                         String?                                     @db.VarChar(100)
  beschreibung                              String?                                     @db.Text
  bezeichnung                               String?                                     @db.VarChar(255)
  abkuerzung                                String?                                     @db.VarChar(10)
  adresszusatz                              String?                                     @db.VarChar(255)
  strasse                                   String?                                     @db.VarChar(255)
  strasse2                                  String?                                     @db.VarChar(255)
  plz                                       String?                                     @db.VarChar(20)
  ort                                       String?                                     @db.VarChar(60)
  land                                      BigInt                                      @default(0)
  tel                                       String?                                     @db.VarChar(255)
  fax                                       String?                                     @db.VarChar(255)
  email                                     String?                                     @db.VarChar(255)
  internet                                  String?                                     @db.VarChar(255)
  schulleiter                               String?                                     @db.VarChar(255)
  titel                                     String?                                     @db.VarChar(255)
  ktnr                                      String?                                     @db.VarChar(55)
  blz                                       String?                                     @db.VarChar(20)
  iban                                      String?                                     @db.VarChar(255)
  swift                                     String?                                     @db.VarChar(100)
  bankadresse                               String?                                     @db.VarChar(255)
  handelsregister                           String?                                     @db.VarChar(255)
  ustidnr                                   String?                                     @db.VarChar(255)
  standard                                  Int                                         @default(0) @db.TinyInt
  vorheriges_semester_hs                    String?                                     @db.TinyText
  vorheriges_semester_pruefung              String?                                     @db.TinyText
  vorheriges_semester_fach                  String?                                     @db.TinyText
  lesenummernid                             Int                                         @db.SmallInt
  mnr_jahreszaehler                         String?                                     @db.Text
  ip_folder_student                         BigInt
  default_zeitplan                          Int                                         @default(1)
  aktiv                                     Int                                         @default(1) @db.TinyInt
  mnr_zaehler                               Int?
  portal_login                              Int                                         @db.TinyInt
  ac5_login                                 Int                                         @db.TinyInt
  statistic_district                        String?                                     @db.VarChar(255)
  statistic_state                           String?                                     @db.VarChar(255)
  application_site                          application_site[]
  assessment_day                            assessment_day[]
  building_approved_sites                   building_approved_sites[]
  course_enrolment_periods                  course_enrolment_periods[]
  document_generator_document_site          document_generator_document_site[]
  event_planer_setting_site                 event_planer_setting_site[]
  exam                                      exam[]
  exam_registration_period_sites            exam_registration_period_sites[]            @ignore
  health_insurance_reporting_institute_site health_insurance_reporting_institute_site[]
  kb_standorte                              kb_standorte[]
  lecturer_contract                         lecturer_contract[]
  lecturer_contract_employment_relief_site  lecturer_contract_employment_relief_site[]
  mobility_online_configuration_site        mobility_online_configuration_site[]
  moodle_settings_site                      moodle_settings_site[]
  planning_group                            planning_group[]
  profile_archive_file_site                 profile_archive_file_site[]
  profile_archive_settings_site             profile_archive_settings_site[]
  research_area_site                        research_area_site[]
  semester_site_infopool_folder             semester_site_infopool_folder[]
  settings_system_datasource_site           settings_system_datasource_site?
  study_center_site                         study_center_site[]
  submission_assignment_site                submission_assignment_site[]
}

model pm_standorte_adresse {
  id                 BigInt  @id @default(autoincrement())
  siteId             BigInt
  label              String? @db.VarChar(255)
  name               String? @db.VarChar(255)
  street             String? @db.VarChar(255)
  addressSupplement  String? @db.VarChar(255)
  zip                String? @db.VarChar(20)
  city               String? @db.VarChar(255)
  countryId          BigInt?
  tel                String? @db.VarChar(255)
  fax                String? @db.VarChar(255)
  email              String? @db.VarChar(255)
  web                String? @db.VarChar(255)
  customAddressBlock String? @db.Text
  letterHead         String? @db.VarChar(255)
}

model pm_standorte_adresse_user {
  siteId BigInt
  userId BigInt @unique(map: "userId")
}

model pm_statistik {
  id    BigInt  @id @default(autoincrement())
  name  String? @db.VarChar(255)
  pdf   String? @db.VarChar(255)
  excel String? @db.VarChar(255)
}

model pm_statistik_data {
  profileId                                                   BigInt   @id
  firstUniversityUniversitySignature                          String?  @db.VarChar(4)
  firstUniversityMatriculationSemester                        Int?     @db.SmallInt
  firstUniversityMatriculationYear                            Int?
  first_university_count_preparatory_college_semester         Int?
  first_university_study_interrupt_semesters                  Int?
  universitySemesterCount                                     Int?     @db.SmallInt
  universityLeaveSemesterCount                                Int?     @db.SmallInt
  universityWorkExperienceSemesterCount                       Int?     @db.SmallInt
  ddrStudiesSemesterCount                                     Int?     @db.SmallInt
  ddrStudiesType                                              Int?     @db.SmallInt
  otherUniversityUniversitySignature                          String?  @db.VarChar(4)
  otherUniversityGraduationSignature                          String?  @db.VarChar(3)
  otherUniversityFirstCourseSignature                         String?  @db.VarChar(3)
  otherUniversitySecondCourseSignature                        String?  @db.VarChar(3)
  otherUniversityThirdCourseSignature                         String?  @db.VarChar(3)
  prevSemesterFirstStudyProgramUniversitySignature            String?  @db.VarChar(4)
  prevSemesterFirstStudyProgramGraduationSignature            String?  @db.VarChar(3)
  prevSemesterFirstStudyProgramFirstCourseSignature           String?  @db.VarChar(3)
  prevSemesterFirstStudyProgramSecondCourseSignature          String?  @db.VarChar(3)
  prevSemesterFirstStudyProgramThirdCourseSignature           String?  @db.VarChar(3)
  prevSemesterSecondStudyProgramUniversitySignature           String?  @db.VarChar(4)
  prevSemesterSecondStudyProgramGraduationSignature           String?  @db.VarChar(3)
  prevSemesterSecondStudyProgramFirstCourseSignature          String?  @db.VarChar(3)
  prevSemesterSecondStudyProgramSecondCourseSignature         String?  @db.VarChar(3)
  prevSemesterSecondStudyProgramThirdCourseSignature          String?  @db.VarChar(3)
  foreignStudiesFirstCountrySignature                         String?  @db.VarChar(3)
  foreignStudiesFirstMonthCount                               Int?     @db.SmallInt
  foreignStudiesSecondCountrySignature                        String?  @db.VarChar(3)
  foreignStudiesSecondMonthCount                              Int?     @db.SmallInt
  lastExamGraduationSignature                                 String?  @db.VarChar(3)
  lastExamFirstCourseSignature                                String?  @db.VarChar(3)
  lastExamSecondCourseSignature                               String?  @db.VarChar(3)
  lastExamThirdCourseSignature                                String?  @db.VarChar(3)
  lastExamMonth                                               Int?     @db.SmallInt
  lastExamYear                                                Int?
  lastExamResult                                              Int?     @db.SmallInt
  lastExamMark                                                Decimal? @db.Decimal(3, 2)
  lastNextExamGraduationSignature                             String?  @db.VarChar(3)
  lastNextExamFirstCourseSignature                            String?  @db.VarChar(3)
  lastNextExamSecondCourseSignature                           String?  @db.VarChar(3)
  lastNextExamThirdCourseSignature                            String?  @db.VarChar(3)
  lastNextExamMonth                                           Int?     @db.SmallInt
  lastNextExamYear                                            Int?
  lastNextExamResult                                          Int?     @db.SmallInt
  lastNextExamMark                                            Decimal? @db.Decimal(3, 2)
  universityEntranceExamYear                                  Int?
  universityEntranceExamSignature                             String?  @db.VarChar(2)
  universityEntranceExamStateSignature                        String?  @db.VarChar(3)
  universityEntranceExamDistrictSignature                     String?  @db.VarChar(5)
  practicalExperienceApprenticeship                           Int?     @db.SmallInt
  practicalExperienceInternship                               Int?     @db.SmallInt
  university_related_semester_count                           Int?
  firstUniversityUniversitySignatureStateInput                String?  @db.VarChar(4)
  otherUniversityUniversitySignatureStateInput                String?  @db.VarChar(4)
  prevSemesterFirstStudyProgramUniversitySignatureStateInput  String?  @db.VarChar(4)
  prevSemesterSecondStudyProgramUniversitySignatureStateInput String?  @db.VarChar(4)
  lastExamUniversitySignatureStateInput                       String?  @db.VarChar(4)
  lastNextExamUniversitySignatureStateInput                   String?  @db.VarChar(4)
  lastExamUniversitySignature                                 String?  @db.VarChar(4)
  lastNextExamUniversitySignature                             String?  @db.VarChar(4)
  interruptionSemesters                                       String?  @db.VarChar(4)
  firstExamHabitationCountry1                                 String?  @db.VarChar(255)
  firstExamHabitationDuration1                                String?  @db.VarChar(255)
  firstExamHabitationType1                                    String?  @db.VarChar(255)
  firstExamHabitationMobilityProgramType1                     String?  @db.VarChar(255)
  firstExamHabitationCountry2                                 String?  @db.VarChar(255)
  firstExamHabitationDuration2                                String?  @db.VarChar(255)
  firstExamHabitationType2                                    String?  @db.VarChar(255)
  firstExamHabitationMobilityProgramType2                     String?  @db.VarChar(255)
  firstExamHabitationCountry3                                 String?  @db.VarChar(255)
  firstExamHabitationDuration3                                String?  @db.VarChar(255)
  firstExamHabitationType3                                    String?  @db.VarChar(255)
  firstExamHabitationMobilityProgramType3                     String?  @db.VarChar(255)
  siteOfExamDistrictSignature                                 String?  @db.VarChar(255)
  siteOfExamStateSignature                                    String?  @db.VarChar(255)
  secondExamHabitationCountry1                                String?  @db.VarChar(255)
  secondExamHabitationDuration1                               String?  @db.VarChar(255)
  secondExamHabitationType1                                   String?  @db.VarChar(255)
  secondExamHabitationMobilityProgramType1                    String?  @db.VarChar(255)
  secondExamHabitationCountry2                                String?  @db.VarChar(255)
  secondExamHabitationDuration2                               String?  @db.VarChar(255)
  secondExamHabitationType2                                   String?  @db.VarChar(255)
  secondExamHabitationMobilityProgramType2                    String?  @db.VarChar(255)
  secondExamHabitationCountry3                                String?  @db.VarChar(255)
  secondExamHabitationDuration3                               String?  @db.VarChar(255)
  secondExamHabitationType3                                   String?  @db.VarChar(255)
  secondExamHabitationMobilityProgramType3                    String?  @db.VarChar(255)
  firstExamPromotionType                                      String?  @db.VarChar(255)
  secondExamPromotionType                                     String?  @db.VarChar(255)
}

model pm_status {
  id      Int     @id @default(autoincrement())
  name_de String? @db.VarChar(20)
  name_en String? @db.VarChar(20)
  groupid Int     @default(0) @db.TinyInt
}

model pm_studiensparte {
  id         Int     @id @default(autoincrement())
  name       String? @db.VarChar(255)
  en         String? @db.VarChar(64)
  typ        Int     @default(1) @db.SmallInt
  curriculum Int     @default(1) @db.TinyInt
  seminar    Int     @default(1) @db.TinyInt
}

model pm_studientyp {
  id   Int     @unique(map: "id") @default(0)
  name String? @db.VarChar(100)
  en   String? @db.VarChar(64)
}

model pm_studium {
  id                                        BigInt   @id @default(0)
  ersteller                                 BigInt   @default(0)
  datum                                     DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  groupid                                   BigInt   @default(0)
  stid                                      BigInt   @default(0)
  lebenslauf_vorhanden                      String?  @db.VarChar(20)
  letter_of_motivation_vorhanden            String?  @db.VarChar(20)
  lichtbild_vorhanden                       String?  @db.VarChar(20)
  staatsbuergerschaft_1_nachweis_vorliegend String?  @db.VarChar(20)
  staatsbuergerschaft_2_nachweis_vorhanden  String?  @db.VarChar(20)
  staatsbuergerschaft_3_nachweis_vorhanden  String?  @db.VarChar(20)
  aufenthaltstitel_vorhanden                String?  @db.VarChar(20)
  krankenkasse_vorhanden                    String?  @db.VarChar(20)
  hzb_vorhanden                             String?  @db.VarChar(20)
  englischkenntnisse_vorhanden              String?  @db.VarChar(20)
  exmatrikulationsbescheinigung_vorhanden   String?  @db.VarChar(20)
  einschreibungsantrag_vorhanden            String?  @db.VarChar(20)
  unterrichtsvertrag_vorhanden              String?  @db.VarChar(20)
  schuldbeitrittserklaerung_vorhanden       String?  @db.VarChar(20)
  fh_pruefung_ergebnis                      String?  @db.TinyText
  sprachwahl_vorhanden                      String?  @db.TinyText
  englischnachweis_test                     String?  @db.TinyText
  englischnachweis_score                    String?  @db.TinyText
  englischnachweis_testtermin               DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  beruf_ausbildungsbeginn                   DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  beruf_ausbildungsende                     DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  beruf_praxisdauer                         String?  @db.TinyText
  beruf_ausbildungsziel                     String?  @db.TinyText
  beruf_note                                String?  @db.TinyText
  beruf_ausbildungsbetrieb                  String?  @db.TinyText
  beruf_ausbildungsort                      String?  @db.TinyText
  beruf_branche                             String?  @db.TinyText
  antrag_auf_einschreibung_erhalten_am      DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  print_studienausweis                      Int      @default(0)
  temporaer_immatrikuliert                  String?  @db.VarChar(20)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model pm_studium_fieldgroups {
  fieldid Int     @default(0)
  groupid BigInt?

  @@ignore
}

model pm_studium_fields {
  id                      BigInt  @id @default(autoincrement())
  kategorie               BigInt  @default(1)
  name                    String? @db.VarChar(64)
  feld                    String? @db.VarChar(64)
  typ                     String? @db.VarChar(8)
  statuswechsel           Int     @default(0) @db.SmallInt
  statuswechsel_bedingung String? @db.VarChar(255)
  spalte                  BigInt  @default(1)
  position                Int     @default(0)
  export                  Int     @default(0) @db.TinyInt
  suche                   Int     @default(0) @db.TinyInt
  system                  Int     @default(0) @db.TinyInt
  show                    Int     @default(1) @db.TinyInt
  gewichtung              Int     @default(1) @db.TinyInt
  sel_table               String? @db.VarChar(64)
  ref_table               String? @db.VarChar(32)
  ref_table_as            String? @db.VarChar(64)
  ref_field               String? @db.VarChar(32)
  ref_name                String? @db.VarChar(32)
  ref_selection           String? @db.Text
  include_text            String? @db.Text
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model pm_studium_kategorien {
  id     BigInt  @default(0)
  grad   Int     @default(0) @db.SmallInt
  bez_de String? @db.VarChar(255)
  bez_en String? @db.VarChar(255)

  @@ignore
}

model pm_zeitplan {
  id                         BigInt    @id @default(autoincrement())
  klasse                     BigInt
  klassenbezeichnung         String?   @db.VarChar(255)
  studium                    BigInt
  semester                   Int       @default(0) @db.TinyInt
  typ                        Int       @default(0) @db.TinyInt
  statustyp                  Int       @default(0) @db.TinyInt
  beginn                     DateTime? @db.Date
  ende                       DateTime? @db.Date
  bezeichnung                String?   @db.VarChar(255)
  bezeichnung_en             String?   @db.VarChar(255)
  term                       Int       @default(1) @db.TinyInt
  zpid                       BigInt    @default(1)
  jahr                       Int?      @db.SmallInt
  studienabschnitt           Int
  mode                       Int       @default(1) @db.SmallInt
  klasse_klasseTopm_zeitplan klasse    @relation(fields: [klasse], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pm_zeitplan_klasse_klasse_id")

  @@index([klasse, semester], map: "klasse")
}

model praktikum {
  id                 BigInt   @id @default(autoincrement())
  pid                BigInt   @default(0)
  datum              DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  firma              String?  @db.VarChar(30)
  f_aktivitaet       String?  @db.VarChar(40)
  abteilung          String?  @db.VarChar(255)
  a_aktivitaet       String?  @db.VarChar(40)
  arbeitssprache     String?  @db.VarChar(25)
  ansprechpartner    String?  @db.VarChar(40)
  anschrift1         String?  @db.VarChar(50)
  anschrift2         String?  @db.VarChar(50)
  plz                String?  @db.VarChar(10)
  ort                String?  @db.VarChar(30)
  land               String?  @db.VarChar(35)
  telefon            String?  @db.VarChar(25)
  web                String?  @db.VarChar(50)
  von                DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  bis                DateTime @default(dbgenerated("'0000-00-00'")) @db.Date
  taetigkeit         String?  @db.Text
  mietverhaeltnis    Int      @default(0) @db.TinyInt
  ws_ansprechpartner String?  @db.VarChar(35)
  ws_anschrift1      String?  @db.VarChar(35)
  ws_anschrift2      String?  @db.VarChar(50)
  ws_plz             String?  @db.VarChar(5)
  ws_ort             String?  @db.VarChar(35)
  ws_telefon         String?  @db.VarChar(25)
  ws_email           String?  @db.VarChar(35)
  wohnsituation      String?  @db.Text
  bewertung_wg       Int      @default(0) @db.TinyInt
  bewertung_mv       Int      @default(0) @db.TinyInt
  bewertung          Int      @default(0) @db.TinyInt
  begruendung        String?  @db.Text
  tipps              String?  @db.Text
  abgabe_done        Int      @default(0) @db.TinyInt
  abgabe_will        Int      @default(0) @db.TinyInt
  p_write            Int      @default(0) @db.TinyInt
  bericht            Int      @default(0) @db.TinyInt
  bestaetigung       Int      @default(0) @db.TinyInt
  benachrichtigt     Int      @default(0) @db.TinyInt
  gelesen            Int      @default(0) @db.TinyInt
}

model praktikum_fields {
  id                 BigInt   @id @default(autoincrement())
  groupid            BigInt?  @default(0)
  groupname          String?  @db.VarChar(255)
  name               String?  @db.VarChar(255)
  name_php           String?  @db.VarChar(255)
  feldtyp            String?  @db.VarChar(255)
  skipleft           Boolean? @default(false)
  praktikumstyp      String?  @db.VarChar(8)
  show               Int?     @default(1) @db.TinyInt
  com_show           Boolean?
  position           Int?     @default(0)
  ref_table          String?  @db.VarChar(32)
  ref_field          String?  @db.VarChar(32)
  ref_name           String?  @db.VarChar(255)
  search             Boolean? @default(false)
  meta               Boolean? @default(false)
  datatype           String?  @db.VarChar(255)
  call_before        String?  @db.VarChar(255)
  call_after         String?  @db.VarChar(255)
  call_on_set        String?  @db.VarChar(255)
  call_before_params String?  @db.VarChar(255)
  call_on_set_params String?  @db.VarChar(255)
  onkeyup            String?  @db.VarChar(255)
  incl_com_search    Boolean? @default(false)
  incl_search        Boolean? @default(false)
  default_value      String?  @db.VarChar(255)
  sel_table          String?  @db.VarChar(128)
  required           Int?     @default(0)
}

model praktikum_fields_werte {
  praktikumid        Int?
  praktikum_fieldsid Int?
  wert               String? @db.Text
  pid                BigInt?
  id                 BigInt  @id @default(autoincrement())
}

model praktikum_files {
  praktikumid        Int?
  praktikum_fieldsid Int?
  folderid           Int?
  ip_objectid        Int?
  ip_dataid          Int?
  name               String? @db.VarChar(255)
  groesse            String? @db.VarChar(255)
  typ                String? @db.VarChar(255)
  file               String? @db.VarChar(255)
  id                 Int     @id @default(autoincrement())
}

model praktikum_typ {
  id                 Int      @id @default(autoincrement())
  name               String?  @db.VarChar(255)
  pos                Int?
  include_before     String?  @db.VarChar(255)
  include_after      String?  @db.VarChar(255)
  show_for_selection Boolean? @default(true)
  show               Boolean? @default(false)
}

model praktikum_typ_row {
  id                 Int      @id @default(autoincrement())
  praktikum_fieldsid Int?
  praktikum_typ_id   Int?     @default(0)
  width              String?  @db.VarChar(255)
  pos                Int?
  com_show           Boolean? @default(true)
  area               Int?
}

model private_room {
  id                      BigInt                @id @default(autoincrement())
  lessor_id               BigInt?
  status_id               Int?                  @db.UnsignedInt
  type_id                 Int
  available               Boolean
  size                    Int
  street                  String?               @db.VarChar(255)
  zip                     Int?
  city                    String?               @db.VarChar(255)
  kitchen_id              Int?
  facility_id             Int?
  furniture_id            Int?
  other_id                Int?
  parking_id              Int?
  smoke_id                Int?
  television_id           Int?
  available_from          DateTime?             @db.DateTime(0)
  available_to            DateTime?             @db.DateTime(0)
  description             String?               @db.Text
  room_amount             Int?
  floor                   String?               @db.VarChar(255)
  accessibility           Boolean?
  longitude               String?               @db.VarChar(255)
  latitude                String?               @db.VarChar(255)
  phone                   String?               @db.VarChar(255)
  internet                String?               @db.VarChar(255)
  hasShower               Boolean?
  hasBath                 Boolean?
  deposit                 Int?
  otherCost               Int?
  cost                    Int?
  sidecost                Int?
  searched_sex            Int?                  @db.TinyInt
  description_intern      String?               @db.Text
  university_distance     Int?
  bath_id                 BigInt?
  person_amount           Int?
  currency_id             BigInt?
  cost_node               String?               @db.Text
  country_id              BigInt?
  label                   String?               @db.VarChar(255)
  residential_building_id BigInt?
  private_room_lessor     private_room_lessor?  @relation(fields: [lessor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "private_room_lessor")
  private_room_status     private_room_status?  @relation(fields: [status_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_private_room_status_id_private_room_status_id")
  private_room_renter     private_room_renter[]

  @@index([status_id], map: "fk_private_room_status_id_private_room_status_id")
  @@index([lessor_id], map: "private_room_lessor")
}

model private_room_bath {
  id      Int     @id @default(autoincrement()) @db.UnsignedInt
  labelDe String? @db.VarChar(255)
  labelEn String? @db.VarChar(255)
}

model private_room_facility {
  id      Int     @id @default(autoincrement()) @db.UnsignedInt
  labelDe String? @db.VarChar(255)
  labelEn String? @db.VarChar(255)
}

model private_room_furniture {
  id      Int     @id @default(autoincrement()) @db.UnsignedInt
  labelDe String? @db.VarChar(255)
  labelEn String? @db.VarChar(255)
}

model private_room_image {
  id             Int     @id @default(autoincrement()) @db.UnsignedInt
  room_id        Int
  name           String? @db.VarChar(255)
  file_extension String? @db.VarChar(255)
  description    String? @db.Text
}

model private_room_kitchen {
  id      Int     @id @default(autoincrement()) @db.UnsignedInt
  labelDe String? @db.VarChar(255)
  labelEn String? @db.VarChar(255)
}

model private_room_lessor {
  id               BigInt         @id @default(autoincrement())
  profile_id       BigInt
  show_email       Boolean
  show_phone       Boolean
  availability     String?        @db.VarChar(255)
  address_block_id Int?
  email_block_id   Int?
  phone_block_id   Int?
  private_room     private_room[]
}

model private_room_option {
  id                   Int     @id @default(autoincrement()) @db.UnsignedInt
  previewLink          String? @db.VarChar(255)
  previewRoomParameter String? @db.VarChar(255)
}

model private_room_other {
  id      Int     @id @default(autoincrement()) @db.UnsignedInt
  labelDe String? @db.VarChar(255)
  labelEn String? @db.VarChar(255)
}

model private_room_parking {
  id      Int     @id @default(autoincrement()) @db.UnsignedInt
  labelDe String? @db.VarChar(255)
  labelEn String? @db.VarChar(255)
}

model private_room_renter {
  id           Int          @id @default(autoincrement()) @db.UnsignedInt
  profil_id    BigInt?
  room_id      BigInt
  rent_from    DateTime?    @db.DateTime(0)
  rent_to      DateTime?    @db.DateTime(0)
  rent_amount  Int?
  lock_room    Boolean      @default(false)
  private_room private_room @relation(fields: [room_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "private_room_renter_room_id")

  @@index([room_id], map: "private_room_renter_room_id")
}

model private_room_residential_area {
  id                    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  label                 String  @default("") @db.VarChar(255)
  responsible_person_id BigInt?
}

model private_room_residential_building {
  id                  BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  residential_area_id BigInt?
  label               String? @db.VarChar(255)
  street              String  @db.VarChar(255)
  zip                 Int
  city                String  @db.VarChar(255)
  country_id          BigInt
}

model private_room_room_facility {
  id          Int @id @default(autoincrement()) @db.UnsignedInt
  room_id     Int
  facility_id Int
}

model private_room_room_other {
  id       Int @id @default(autoincrement()) @db.UnsignedInt
  room_id  Int
  other_id Int
}

model private_room_smoke {
  id      Int     @id @default(autoincrement()) @db.UnsignedInt
  labelDe String? @db.VarChar(255)
  labelEn String? @db.VarChar(255)
}

model private_room_status {
  id               Int            @id @default(autoincrement()) @db.UnsignedInt
  labelDe          String?        @db.VarChar(255)
  labelEn          String?        @db.VarChar(255)
  show_in_frontend Boolean?
  private_room     private_room[]
}

model private_room_television {
  id      Int     @id @default(autoincrement()) @db.UnsignedInt
  labelDe String? @db.VarChar(255)
  labelEn String? @db.VarChar(255)
}

model private_room_type {
  id      Int     @id @default(autoincrement()) @db.UnsignedInt
  labelDe String? @db.VarChar(255)
  labelEn String? @db.VarChar(255)
}

model profil {
  id                                                                       BigInt                                        @id @default(autoincrement())
  mnr                                                                      String?                                       @db.VarChar(12)
  studium                                                                  BigInt                                        @default(0)
  vorname                                                                  String?                                       @db.VarChar(50)
  middlename                                                               String?                                       @db.VarChar(64)
  name                                                                     String?                                       @db.VarChar(50)
  firma                                                                    String?                                       @db.VarChar(64)
  user                                                                     String?                                       @unique(map: "user_2") @db.VarChar(100)
  email                                                                    String?                                       @db.VarChar(64)
  email_2                                                                  String?                                       @db.VarChar(64)
  adresszusatz                                                             String?                                       @db.VarChar(255)
  strasse                                                                  String?                                       @db.VarChar(255)
  strasse2                                                                 String?                                       @db.VarChar(255)
  plz                                                                      String?                                       @db.VarChar(20)
  ort                                                                      String?                                       @db.VarChar(64)
  ortszusatz                                                               String?                                       @db.VarChar(255)
  land                                                                     BigInt?
  telefon                                                                  String?                                       @db.VarChar(50)
  familienstand                                                            String?                                       @db.VarChar(20)
  klasse                                                                   BigInt                                        @default(0)
  nummer                                                                   String?                                       @db.VarChar(50)
  pw                                                                       String?                                       @db.VarChar(255)
  anrede                                                                   Int?                                          @db.SmallInt
  telefon2                                                                 String?                                       @db.VarChar(25)
  mobil                                                                    String?                                       @db.VarChar(50)
  pager                                                                    String?                                       @db.VarChar(255)
  skype                                                                    String?                                       @db.VarChar(255)
  facebook                                                                 String?                                       @db.VarChar(128)
  twitter                                                                  String?                                       @db.VarChar(128)
  linkedin                                                                 String?                                       @db.VarChar(128)
  xing                                                                     String?                                       @db.VarChar(128)
  blog                                                                     String?                                       @db.VarChar(128)
  crm_letter                                                               Int                                           @db.TinyInt
  crm_email                                                                Int                                           @db.TinyInt
  crm_phone                                                                Int                                           @db.TinyInt
  crm_newsletter                                                           Int                                           @db.TinyInt
  crm_lang                                                                 String?                                       @db.VarChar(2)
  telefax                                                                  String?                                       @db.VarChar(50)
  web                                                                      String?                                       @db.VarChar(128)
  showweb                                                                  Int                                           @default(2) @db.TinyInt
  geb                                                                      DateTime?                                     @db.Date
  ekm                                                                      String?                                       @db.VarChar(4)
  geburtsort                                                               String?                                       @db.VarChar(100)
  geburtsland                                                              BigInt?
  staatsangehoerigkeit                                                     BigInt?                                       @default(0)
  bundesland                                                               String?                                       @db.VarChar(100)
  muttersprache                                                            String?                                       @db.VarChar(100)
  login                                                                    BigInt                                        @default(0)
  lastchanged                                                              DateTime?                                     @db.DateTime(0)
  thislogin                                                                DateTime?                                     @db.DateTime(0)
  lastlogin                                                                DateTime?                                     @db.DateTime(0)
  created_user                                                             BigInt?
  created_date                                                             DateTime?                                     @db.DateTime(0)
  edit_user                                                                BigInt?
  edit_date                                                                DateTime?                                     @db.DateTime(0)
  view_user                                                                BigInt?
  view_date                                                                DateTime?                                     @db.DateTime(0)
  aktiv                                                                    Boolean                                       @default(true)
  locked                                                                   Boolean                                       @default(false)
  login_trials                                                             Int                                           @default(0) @db.SmallInt
  login_deny                                                               DateTime?                                     @db.DateTime(0)
  login_ticket                                                             String?                                       @db.VarChar(32)
  status                                                                   String?                                       @db.VarChar(20)
  grad                                                                     Int                                           @default(1)
  titel                                                                    String?                                       @db.VarChar(100)
  geburtsname                                                              String?                                       @db.VarChar(50)
  name_neu                                                                 String?                                       @db.VarChar(50)
  show_namealtneu                                                          Int                                           @default(1) @db.TinyInt
  sonstiges                                                                String?                                       @db.LongText
  sonstiges2                                                               String?                                       @db.Text
  lang                                                                     String?                                       @db.Char(2)
  abteilung                                                                String?                                       @db.VarChar(100)
  anfragedatum                                                             DateTime                                      @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  EDIT                                                                     DateTime?                                     @db.DateTime(0)
  EDIT_BY                                                                  BigInt                                        @default(0)
  ip_folder                                                                BigInt?
  raum                                                                     String?                                       @db.VarChar(100)
  adressbuch                                                               Int                                           @default(1) @db.TinyInt
  fakultaet                                                                BigInt                                        @default(0)
  first_contact_date                                                       DateTime                                      @default(dbgenerated("'0000-00-00'")) @db.Date
  schulbabschluss                                                          String?                                       @db.TinyText
  religion                                                                 String?                                       @db.TinyText
  telefon_2                                                                String?                                       @db.TinyText
  honors                                                                   String?                                       @db.VarChar(64)
  SupplMath                                                                String?                                       @db.VarChar(32)
  nb_kommentar                                                             String?                                       @db.Text
  position                                                                 String?                                       @db.VarChar(100)
  tree_items                                                               String?                                       @db.Text
  mentor                                                                   String?                                       @db.VarChar(80)
  studienzentrum                                                           String?                                       @db.VarChar(80)
  standort                                                                 Int                                           @default(0)
  cms_level                                                                Int                                           @default(3) @db.TinyInt
  affiliation                                                              String?                                       @db.VarChar(255)
  zusatz                                                                   String?                                       @db.VarChar(255)
  camsid                                                                   Int?
  community                                                                Boolean                                       @default(false)
  beruf                                                                    String?                                       @db.VarChar(255)
  staatsangehoerigkeit_2                                                   Int?
  sms                                                                      Int                                           @default(1) @db.TinyInt
  kuerzel                                                                  String?                                       @db.VarChar(16)
  defaultSiteId                                                            BigInt?
  name_arabic                                                              String?                                       @db.VarChar(256)
  geb_arabic                                                               DateTime?                                     @db.Date
  key_accounter_id                                                         BigInt?
  customer_identity                                                        String?                                       @db.VarChar(50)
  amount_per_unit                                                          Float?                                        @db.Float
  amount_per_exam                                                          Float?                                        @db.Float
  new_navigation                                                           Boolean                                       @default(false)
  title_postposed                                                          String?                                       @db.VarChar(100)
  selectedSiteId                                                           Int                                           @default(0)
  absence                                                                  absence[]
  access_groups_user                                                       access_groups_user[]
  admission_procedure_part_lecturer                                        admission_procedure_part_lecturer[]           @ignore
  admission_procedure_profile_result                                       admission_procedure_profile_result[]
  assessment_day_procedure_part_lecturers                                  assessment_day_procedure_part_lecturers[]
  assessment_day_procedure_part_profile                                    assessment_day_procedure_part_profile[]
  ba_statistic_profile                                                     ba_statistic_profile?
  bis_profile                                                              bis_profile[]
  bis_profile_property                                                     bis_profile_property?
  column_configuration                                                     column_configuration[]
  communicator_participant                                                 communicator_participant[]
  course_export                                                            course_export[]
  course_lecture_series_lecturer                                           course_lecture_series_lecturer[]
  course_report_budget_plan_export                                         course_report_budget_plan_export[]
  credited_achievement_reason                                              credited_achievement_reason[]
  dashboard                                                                dashboard[]
  dashboard_user                                                           dashboard_user[]
  digital_signature_document                                               digital_signature_document[]
  email_tracking                                                           email_tracking[]
  enrolment_period_prioritisation                                          enrolment_period_prioritisation[]
  enrolment_period_profile_score                                           enrolment_period_profile_score[]
  erfahrungen                                                              erfahrungen[]
  event_date_lecturer                                                      event_date_lecturer[]
  event_date_participant                                                   event_date_participant[]
  event_planer_user_setting                                                event_planer_user_setting?
  event_series_lecturer                                                    event_series_lecturer[]
  event_series_participant                                                 event_series_participant[]
  exam_assessor                                                            exam_assessor[]
  exam_lecturer                                                            exam_lecturer[]
  exam_part_assessor                                                       exam_part_assessor[]
  filter_configuration                                                     filter_configuration[]
  filter_manager                                                           filter_manager[]
  financial_cohort_invoice_data_profile                                    financial_cohort_invoice_data_profile[]
  financial_course_invoice_data_profile                                    financial_course_invoice_data_profile[]
  financial_invoice                                                        financial_invoice[]
  financial_invoice_copy06032020                                           financial_invoice_copy06032020[]
  health_insurance_profile_communication_log                               health_insurance_profile_communication_log[]
  instrument_lecturer                                                      instrument_lecturer[]
  internship_form_profile                                                  internship_form_profile[]
  kb_stundenplan_kb_stundenplan_didToprofil                                kb_stundenplan[]                              @relation("kb_stundenplan_didToprofil")
  kb_stundenplan_kb_stundenplan_did2Toprofil                               kb_stundenplan[]                              @relation("kb_stundenplan_did2Toprofil")
  lecturer_contract                                                        lecturer_contract[]
  lectureship                                                              lectureship[]
  list_search_filter                                                       list_search_filter[]
  merged_letter_data_source_token                                          merged_letter_data_source_token[]
  mobility_online_configuration                                            mobility_online_configuration[]
  module_version_additional_assignee                                       module_version_additional_assignee[]          @ignore
  news                                                                     news[]
  oauth_client                                                             oauth_client[]
  planning_group_participant                                               planning_group_participant[]
  profil_verteiler                                                         profil_verteiler[]
  profile_application_data_protection_version                              profile_application_data_protection_version[]
  profile_portal_login_token_profilToprofile_portal_login_token_assumer_id profile_portal_login_token[]                  @relation("profilToprofile_portal_login_token_assumer_id")
  profile_portal_login_token_profilToprofile_portal_login_token_profile_id profile_portal_login_token[]                  @relation("profilToprofile_portal_login_token_profile_id")
  property_user_value                                                      property_user_value[]
  push_subscription                                                        push_subscription[]
  research_comment                                                         research_comment[]
  research_project_member                                                  research_project_member[]
  research_project_partners                                                research_project_partners[]
  seminar_partner                                                          seminar_partner[]
  subject_version_additional_assignee                                      subject_version_additional_assignee[]         @ignore
  submission_profilTosubmission_first_lecturer_id                          submission[]                                  @relation("profilTosubmission_first_lecturer_id")
  submission_profilTosubmission_second_lecturer_id                         submission[]                                  @relation("profilTosubmission_second_lecturer_id")
  submission_company                                                       submission_company[]
  submission_log                                                           submission_log[]
  system_usability_scale                                                   system_usability_scale[]

  @@index([customer_identity], map: "customer_identity")
  @@index([edit_date, id], map: "edit_date_id")
  @@index([email], map: "email")
  @@index([grad], map: "grad")
  @@index([key_accounter_id], map: "key_accounter_id")
  @@index([klasse], map: "klasse")
  @@index([land], map: "land")
  @@index([name, vorname], map: "name")
  @@index([staatsangehoerigkeit], map: "staatsangehoerigkeit")
  @@index([studium], map: "studium")
  @@index([user], map: "user")
  @@index([vorname], map: "vorname")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model profil_config {
  list_count        Int     @default(30)
  img_dir           String? @db.VarChar(128)
  img_small_width   Int     @default(0)
  img_small_height  Int     @default(0)
  img_medium_width  Int     @default(0)
  img_medium_height Int     @default(0)
  img_big_width     Int     @default(0)
  img_big_height    Int     @default(0)

  @@ignore
}

model profil_dokumente {
  id      Int      @id @default(autoincrement())
  pid     BigInt?
  session Int      @default(0)
  endung  String?  @db.VarChar(255)
  name    String?  @db.VarChar(255)
  typ     Int      @default(0) @db.TinyInt
  datum   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  dataid  BigInt
}

model profil_dokumente_typen {
  id      BigInt  @id @default(autoincrement())
  name_de String? @db.VarChar(100)
  name_en String? @db.VarChar(100)
  pflicht Int     @default(0) @db.TinyInt
}

model profil_fields {
  id                  BigInt   @id @default(autoincrement())
  groupid             BigInt   @default(0)
  name                String?  @db.VarChar(64)
  en                  String?  @db.VarChar(64)
  feld                String?  @db.VarChar(64)
  feldid              BigInt   @default(0)
  typ                 String?  @db.VarChar(8)
  show                Int      @default(1) @db.TinyInt
  position            Int      @default(0)
  box                 Int      @default(1) @db.SmallInt
  row                 Int      @default(1) @db.SmallInt
  export              Int      @default(0) @db.TinyInt
  datenquelle         Int      @default(0) @db.TinyInt
  conjunction         Int      @default(0) @db.TinyInt
  ebenen              Int      @default(1) @db.TinyInt
  suche               Int      @default(0) @db.TinyInt
  system              Int      @default(1) @db.TinyInt
  duplikat            Int      @db.TinyInt
  sel_table           String?  @db.VarChar(50)
  sel_feld            String?  @db.VarChar(40)
  gewichtung          Int      @default(1) @db.TinyInt
  ref_table           String?  @db.VarChar(32)
  ref_table_as        String?  @db.VarChar(50)
  refSelection        Int      @default(1) @db.TinyInt
  ref_field           String?  @db.VarChar(32)
  ref_name            String?  @db.VarChar(32)
  ref_ref_table       String?  @db.VarChar(40)
  ref_ref_table_as    String?  @db.VarChar(100)
  ref_refSelection    Int      @default(1) @db.TinyInt
  ref_ref_name        String?  @db.VarChar(100)
  ref_ref_field       String?  @db.VarChar(100)
  ref_ref_conjunction Int      @default(0) @db.TinyInt
  ref_selection       String?  @db.Text
  profil_suche        Boolean?
  refSQL              String?  @db.Text
  function            String?  @db.VarChar(255)
  accessgroup         Int?
}

model profil_filter_fields {
  id           BigInt  @id @default(autoincrement())
  groupid      BigInt  @default(0)
  de           String? @db.VarChar(64)
  en           String? @db.VarChar(64)
  feld         String? @db.VarChar(64)
  feldid       BigInt  @default(0)
  typ          String? @db.VarChar(8)
  position     Int     @default(0)
  width        Int     @db.SmallInt
  conjunction  Int     @default(0) @db.TinyInt
  sel_table    String? @db.VarChar(50)
  sel_feld     String? @db.VarChar(40)
  ref_table    String? @db.VarChar(32)
  ref_table_as String? @db.VarChar(50)
  ref_field    String? @db.VarChar(32)
  ref_name     String? @db.VarChar(32)
}

model profil_groups {
  pid     BigInt @default(0)
  groupid BigInt @default(0)
  access  Int    @default(0) @db.TinyInt

  @@id([pid, groupid, access])
}

model profil_import {
  id                   BigInt   @id @default(autoincrement())
  filetype             String?  @db.VarChar(5)
  created_date         DateTime @db.DateTime(0)
  created_user         BigInt
  sessionid            String?  @db.VarChar(32)
  imported_fields      String?  @db.Text
  imported_rows        Int
  status               Int      @default(0) @db.TinyInt
  distribution_list    BigInt?
  keywords             String?  @db.VarChar(1000)
  formatStrings        Boolean? @default(true)
  has_hashed_passwords Boolean  @default(false)

  @@index([sessionid], map: "sessionid")
}

model profil_import_alias {
  id    BigInt  @id @default(autoincrement())
  alias String? @db.VarChar(64)
  feld  BigInt

  @@index([alias], map: "alias")
}

model profil_import_row {
  id          BigInt  @id @default(autoincrement())
  import_id   BigInt?
  tablename   String? @db.VarChar(255)
  inserted_id BigInt?
  id_column   String? @db.VarChar(255)
  comment     String? @db.TinyText
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model profil_klassengruppen {
  groupid BigInt @default(0)
  userid  BigInt @default(0)

  @@ignore
}

model profil_kontakthistorie {
  id                      BigInt    @id @default(autoincrement())
  betreff                 String?   @db.VarChar(255)
  inhalt                  String?   @db.Text
  typ                     Int?
  create_date             DateTime? @db.DateTime(0)
  create_user             BigInt?
  edit_user               BigInt?
  edit_date               DateTime? @db.Date
  delete_user             BigInt?
  delete_date             DateTime? @db.Date
  deleted                 Boolean   @default(false)
  views                   Int       @default(0)
  last_view               DateTime? @db.DateTime(0)
  tabelle                 String?   @db.VarChar(255)
  data_id                 BigInt
  date_of_contact         DateTime? @db.Date
  communication_direction Int       @default(2) @db.SmallInt

  @@index([data_id, tabelle], map: "dataid_area")
}

model profil_kontakthistorie_doc_link {
  id                             BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  profil_kontakthistorie_id      BigInt
  profil_kontakthistorie_docs_id BigInt

  @@unique([profil_kontakthistorie_id, profil_kontakthistorie_docs_id], map: "uidx_profil_kontakthistorie_link")
}

model profil_kontakthistorie_docs {
  id             BigInt    @id @default(autoincrement())
  eintrag        Int?      @default(0)
  name           String?   @db.VarChar(180)
  file           String?   @db.VarChar(255)
  size           BigInt?   @default(0)
  format         String?   @db.VarChar(5)
  type           String?   @db.VarChar(255)
  create_user    BigInt?
  create_date    DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  edit_user      BigInt?
  edit_date      DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  delete_user    BigInt?
  delete_date    DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  views          Int?      @default(0)
  last_view      DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  last_viewed_by Int?      @default(0)
  deleted        Boolean?  @default(false)
  dokumenttyp    Int?
  pw             String?   @db.VarChar(255)
}

model profil_kontakthistorie_suche_fields {
  id                 BigInt   @id @default(autoincrement())
  ref_field          String?  @db.VarChar(255)
  ref_field_label    String?  @db.VarChar(255)
  ref_table          String?  @db.VarChar(255)
  aktiv              Boolean? @default(true)
  typ                String?  @db.VarChar(255)
  dsrc_ref_field     String?  @db.VarChar(255)
  dsrc_ref_table     String?  @db.VarChar(255)
  comparable         Boolean? @default(true)
  datentyp           String?  @db.VarChar(255)
  ref_field_label_en String?  @db.VarChar(255)
}

model profil_links_categories {
  id                   BigInt  @id @default(autoincrement())
  de                   String? @db.VarChar(64)
  en                   String? @db.VarChar(64)
  color                String? @db.VarChar(7)
  show_in_company_tree Int     @default(0) @db.TinyInt
}

model profil_links_keywords {
  id                                               BigInt                                             @id @default(autoincrement())
  cat                                              BigInt?
  keyword                                          String?                                            @db.VarChar(128)
  course_enrolment_period_excluded_profile_keyword course_enrolment_period_excluded_profile_keyword[]

  @@index([cat, id], map: "cat")
  @@index([keyword, id], map: "keyword")
}

model profil_links_relations {
  id           BigInt    @id @default(autoincrement())
  profil       BigInt?
  keyword      BigInt?
  created_date DateTime? @db.DateTime(0)
  created_user BigInt?

  @@unique([keyword, profil], map: "keyword")
  @@index([created_user], map: "created_user")
  @@index([profil, keyword], map: "idx_profile_keyword")
}

model profil_semester {
  id                           BigInt    @id @default(autoincrement())
  sid                          BigInt    @default(0)
  pid                          BigInt    @default(0)
  semester                     Int       @default(1) @db.TinyInt
  rueckmeldung_am              DateTime? @db.Date
  typ                          Int       @default(1) @db.TinyInt
  partner                      BigInt    @default(0)
  aktiv                        Int       @default(0) @db.TinyInt
  term                         Int       @default(0) @db.TinyInt
  jahr                         Int       @default(0) @db.SmallInt
  status                       Int       @default(1)
  grad                         Int       @default(1)
  hochschulsemester            Int       @default(0) @db.TinyInt
  urlaubssemester              Int       @default(0) @db.TinyInt
  as_gesamt                    Int       @default(0) @db.TinyInt
  as_aus_studienleistung       Int       @default(0) @db.TinyInt
  as_aus_beruf                 Int       @default(0) @db.TinyInt
  as_aus_ausland               Int       @default(0) @db.TinyInt
  studienstatus                Int       @default(0) @db.TinyInt
  beurlaubungsgrund            Int       @default(0)
  sonstiges                    String?   @db.VarChar(100)
  semester_ticket              Int       @default(0) @db.TinyInt
  semester_hash                String?   @db.VarChar(10)
  area                         BigInt    @default(0)
  academic_year                Int
  klasse_manuell               String?   @db.VarChar(128)
  finance_regular              String?   @db.VarChar(64)
  finance_factual              String?   @db.VarChar(64)
  finance_living               String?   @db.VarChar(64)
  finance_semester_ticket      String?   @db.VarChar(64)
  finance_comment              String?   @db.VarChar(64)
  finance_downpayment_regular  Float     @default(0) @db.Float
  finance_downpayment_ist      Float     @default(0) @db.Float
  mode                         Int?      @db.SmallInt
  suspensionReason             Int?      @db.SmallInt
  credits_per_term             Int       @db.SmallInt
  credits_available            Int       @db.SmallInt
  internship_semester_count    Int       @default(0) @db.SmallInt
  finance_campus_fee_soll      Float?    @db.Float
  finance_campus_fee_ist       Float?    @db.Float
  finance_admin_fee_soll       Float?    @db.Float
  finance_admin_fee_ist        Float?    @db.Float
  finance_semester_ticket_soll Float?    @db.Float
  finance_semester_ticket_ist  Float?    @db.Float
  hours_per_week               Int?
  bis_semester                 Int?      @db.TinyInt
  automated_re_registration    Boolean   @default(false)

  @@unique([sid, term, jahr], map: "sid")
  @@index([pid], map: "pid")
  @@index([semester_hash], map: "semester_hash")
}

model profil_session {
  id          BigInt    @id @default(autoincrement())
  pid         BigInt    @default(0)
  name        String?   @db.VarChar(255)
  vorname     String?   @db.VarChar(255)
  email       String?   @db.VarChar(255)
  pwd         String?   @db.VarChar(255)
  datum       DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  beworben    DateTime? @db.DateTime(0)
  merken      String?   @db.LongText
  studiengang String?   @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model profil_sprachgruppen {
  groupid BigInt @default(0)
  userid  BigInt @default(0)

  @@index([groupid], map: "groupid")
  @@index([groupid], map: "groupid_2")
  @@index([userid], map: "userid")
  @@index([userid], map: "userid_2")
  @@ignore
}

model profil_standorte {
  pid      BigInt @default(0)
  standort BigInt @default(0)

  @@id([pid, standort])
  @@unique([standort, pid], map: "site_profiles")
}

model profil_stelle {
  id       BigInt    @id @default(autoincrement())
  profilid BigInt?
  datum    DateTime? @db.Date
  status   Int?
  stelle   BigInt?
}

model profil_studium {
  id                                                                      BigInt                                   @id @default(autoincrement())
  pid                                                                     BigInt
  pid_sonstige                                                            BigInt
  klasse                                                                  BigInt?
  studium                                                                 BigInt?
  schwerpunkt_1                                                           BigInt?
  schwerpunkt_2                                                           BigInt?
  schwerpunkt_3                                                           BigInt?
  studienrichtung                                                         BigInt?
  instrument                                                              BigInt?
  minor_instrument                                                        BigInt?
  lehrer                                                                  BigInt?
  studienbeginn                                                           DateTime?                                @db.Date
  studienende                                                             DateTime?                                @db.Date
  semester                                                                Int?                                     @db.SmallInt
  semester_2                                                              Int                                      @default(1) @db.TinyInt
  praxissemester                                                          Int                                      @default(0) @db.TinyInt
  urlaubssemester                                                         Int                                      @default(0) @db.TinyInt
  hochschulsemester                                                       Int                                      @default(0) @db.TinyInt
  kollegsemester                                                          Int                                      @default(0) @db.TinyInt
  studienabschnitt                                                        Int
  academic_year                                                           Int
  auslandssemester                                                        Int                                      @default(0) @db.SmallInt
  zusatzsemester                                                          Int                                      @db.SmallInt
  immatrikulationsdatum                                                   DateTime?                                @db.Date
  exmatrikulationsdatum                                                   DateTime?                                @db.Date
  mnr                                                                     String?                                  @db.VarChar(100)
  lesenummer                                                              String?                                  @db.VarChar(64)
  grad                                                                    Int                                      @default(1)
  status                                                                  String?                                  @db.VarChar(15)
  aktiv                                                                   Int?                                     @default(1) @db.TinyInt
  application_for_application_id                                          BigInt?
  application_for_data_source_id                                          BigInt?
  application_for_program                                                 BigInt?
  application_for_spec                                                    BigInt?                                  @default(0)
  application_for_cohort                                                  BigInt                                   @default(0)
  application_for_year                                                    Int?                                     @db.SmallInt
  application_for_trimester                                               Int?                                     @db.SmallInt
  application_for_date                                                    DateTime?                                @db.Date
  application_for_standort                                                Int?
  application_for_standort2                                               Int?
  application_for_semester_1                                              Int?                                     @db.SmallInt
  application_for_semester_2                                              Int?                                     @db.SmallInt
  application_created                                                     DateTime?                                @db.Date
  application_submitted                                                   DateTime?                                @db.DateTime(0)
  application_tabs_progress                                               Int?                                     @db.TinyInt
  application_tabs_completed                                              Int?                                     @db.TinyInt
  application_priority                                                    Int?                                     @db.SmallInt
  DELETED                                                                 DateTime?                                @db.DateTime(0)
  anfragedatum                                                            DateTime?                                @db.Date
  bafoeg                                                                  Int                                      @default(1) @db.TinyInt
  unterbrechung_beginn                                                    DateTime?                                @db.Date
  unterbrechung_ende                                                      DateTime?                                @db.Date
  exmatrikulation_grund                                                   String?                                  @db.VarChar(4)
  unterbrechung_grund                                                     Int                                      @default(0) @db.TinyInt
  hoererstatus                                                            String?                                  @db.VarChar(1)
  korrespondenzstandort                                                   BigInt?
  courseEnrollmentApproval                                                Boolean
  info_material                                                           DateTime?                                @db.Date
  inquiry_start_1                                                         DateTime?                                @db.Date
  inquiry_start_2                                                         DateTime?                                @db.Date
  inquiry_source                                                          BigInt?
  inquiry_route                                                           BigInt?
  inquiry_comment                                                         String?                                  @db.VarChar(255)
  reason_cancellation                                                     Int?                                     @default(0)
  reason_dropout                                                          BigInt?
  date_cancellation                                                       DateTime?                                @db.Date
  previous_booking_id                                                     BigInt?
  statistic_graduation_signature                                          String?                                  @db.VarChar(3)
  color_category_id                                                       BigInt?
  online_exam_enabled                                                     Boolean                                  @default(true)
  online_exam_lock_out_reason                                             BigInt?
  graduation_date                                                         DateTime?                                @db.Date
  ects_booking                                                            Int                                      @default(0) @db.TinyInt
  applicant_group_id                                                      BigInt?
  diploma_supplement_de                                                   String?                                  @db.Text
  diploma_supplement_en                                                   String?                                  @db.Text
  admission_procedure_user_group                                          admission_procedure_user_group?          @relation(fields: [applicant_group_id], references: [id], onUpdate: NoAction, map: "fk_applicant_group")
  cms_datasrc                                                             cms_datasrc?                             @relation(fields: [application_for_data_source_id], references: [id], onUpdate: NoAction, map: "fk_profil_studium_application_for_data_source_id")
  studium_profil_studium_application_for_programTostudium                 studium?                                 @relation("profil_studium_application_for_programTostudium", fields: [application_for_program], references: [id], onUpdate: NoAction, map: "profil_studium_application_for_program")
  profil_studium_inquiry_source                                           profil_studium_inquiry_source?           @relation(fields: [inquiry_source], references: [id], onUpdate: NoAction, map: "profil_studium_inquiry_source")
  klasse_klasseToprofil_studium                                           klasse?                                  @relation(fields: [klasse], references: [id], onUpdate: NoAction, map: "fk_profil_studium_klasse")
  instrument_instrumentToprofil_studium                                   instrument?                              @relation(fields: [minor_instrument], references: [id], onUpdate: NoAction, map: "ps_minor_instrument")
  online_exam_lock_out_reason_online_exam_lock_out_reasonToprofil_studium online_exam_lock_out_reason?             @relation(fields: [online_exam_lock_out_reason], references: [id], onUpdate: NoAction, map: "booking_online_exam_lock_out_reason")
  studium_profil_studium_studiumTostudium                                 studium?                                 @relation("profil_studium_studiumTostudium", fields: [studium], references: [id], onUpdate: NoAction, map: "profil_studium_studium")
  absence_quota                                                           absence_quota[]
  admission_procedure_booking_result                                      admission_procedure_booking_result[]
  application_booking_order                                               application_booking_order?
  application_document_confirmation                                       application_document_confirmation?
  application_status_change_confirmation                                  application_status_change_confirmation[]
  bis_profile                                                             bis_profile[]
  booking_draw_removal                                                    booking_draw_removal[]
  booking_study_time_model                                                booking_study_time_model?
  course_series_draw_priority                                             course_series_draw_priority[]
  financial_cohort_invoice_data_company                                   financial_cohort_invoice_data_company[]
  financial_cohort_invoice_data_profile                                   financial_cohort_invoice_data_profile[]
  grade_sheet_module_log                                                  grade_sheet_module_log[]
  grade_sheet_subject_log                                                 grade_sheet_subject_log[]
  online_exam_module_enrolment                                            online_exam_module_enrolment[]
  referee                                                                 referee[]
  study_center_exam_enrolments                                            study_center_exam_enrolments[]
  submission                                                              submission[]

  @@index([DELETED], map: "DELETED")
  @@index([DELETED, aktiv, pid], map: "DELETED_2")
  @@index([klasse, DELETED], map: "Klasse_Deleted")
  @@index([klasse, grad, DELETED], map: "Klasse_Grad_Deleted")
  @@index([aktiv], map: "aktiv")
  @@index([anfragedatum], map: "anfragedatum")
  @@index([online_exam_lock_out_reason], map: "booking_online_exam_lock_out_reason")
  @@index([applicant_group_id], map: "fk_applicant_group")
  @@index([application_for_data_source_id], map: "fk_profil_studium_application_for_data_source_id")
  @@index([grad], map: "grad")
  @@index([hoererstatus], map: "hoererstatus")
  @@index([aktiv, DELETED, exmatrikulationsdatum, status], map: "idx_aktiv_DELETED_exmatrikulationsdatum_status")
  @@index([grad, status, DELETED, aktiv, pid], map: "idx_grad_status_DELETED_aktiv_pid")
  @@index([inquiry_source], map: "inquiry_source")
  @@index([inquiry_start_1, inquiry_start_2], map: "inquiry_start_1")
  @@index([klasse], map: "klasse")
  @@index([lesenummer], map: "lesenummer")
  @@index([pid], map: "pid")
  @@index([application_for_program], map: "profil_studium_application_for_program")
  @@index([grad, aktiv, DELETED, pid], map: "prospective_search")
  @@index([minor_instrument], map: "ps_minor_instrument")
  @@index([reason_cancellation], map: "reason_cancellation")
  @@index([status], map: "status")
  @@index([studium], map: "studium")
}

model profil_studium_additional {
  id                             BigInt @id @default(autoincrement())
  parent                         BigInt
  application_for_program        BigInt
  application_for_specialization BigInt
}

model profil_studium_color_category {
  id    Int     @id @default(autoincrement()) @db.UnsignedInt
  name  String? @db.VarChar(255)
  color String? @db.VarChar(255)
}

model profil_studium_inquiry_category {
  id       BigInt  @id @default(autoincrement())
  label_de String? @db.VarChar(255)
  label_en String? @db.VarChar(255)
}

model profil_studium_inquiry_route {
  id       BigInt  @id @default(autoincrement())
  name_de  String? @db.VarChar(255)
  name_en  String? @db.VarChar(255)
  position Int     @default(1)
}

model profil_studium_inquiry_source {
  id             BigInt           @id @default(autoincrement())
  name_de        String?          @db.VarChar(255)
  name_en        String?          @db.VarChar(255)
  position       Int              @default(1)
  category_id    BigInt?
  profil_studium profil_studium[]
}

model profil_studium_reason_cancellation {
  id       BigInt @id @default(autoincrement())
  name_de  String @db.VarChar(255)
  name_en  String @db.VarChar(255)
  position Int    @default(1)
}

model profil_studium_reason_dropout {
  id                    BigInt  @id @default(autoincrement())
  name_de               String? @db.VarChar(255)
  name_en               String? @db.VarChar(255)
  position              Int     @default(1)
  notification_relevant Boolean @default(true)
}

model profil_suche_fields {
  id                             BigInt   @id @default(autoincrement())
  tabelle                        String?  @db.VarChar(255)
  tabelle_alias                  String?  @db.VarChar(255)
  feld                           String?  @db.VarChar(255)
  name                           String?  @db.VarChar(255)
  name_en                        String?  @db.VarChar(255)
  system                         Boolean?
  aktiv                          Boolean? @default(false)
  type                           String?  @db.VarChar(255)
  fieldselect_type               String?  @db.VarChar(255)
  ref_table                      String?  @db.VarChar(255)
  ref_field                      String?  @db.VarChar(255)
  export_field                   Boolean? @default(false)
  ref_id                         String?  @db.VarChar(255)
  pos                            Int?
  compare_field                  Boolean?
  include_in_general_search      Boolean? @default(false)
  zero_counts_empty              Boolean? @default(false)
  compare_with_ref_table         Boolean? @default(false)
  datasrcid                      String?  @db.VarChar(11)
  duplikat                       Int      @db.TinyInt
  duplicate                      Boolean? @default(false)
  duplicatename                  String?  @db.VarChar(255)
  group                          Int?
  groupname                      String?  @db.VarChar(255)
  groupname_en                   String?  @db.VarChar(64)
  ref_field_var                  String?  @db.VarChar(255)
  ref_field_en                   String?  @db.VarChar(255)
  ref_table_order                String?  @db.VarChar(255)
  ref_field_order_pos            String?  @db.VarChar(6)
  join_ref_field                 String?  @db.VarChar(255)
  join_field                     String?  @db.VarChar(255)
  join_table                     String?  @db.VarChar(255)
  grouppos                       Int?
  multicol_ref_field             String?  @db.VarChar(255)
  multicol_ref_field_label       String?  @db.VarChar(255)
  multicol_ref_field_value_array String?  @db.VarChar(255)
  show_in_import                 Boolean? @default(false)
  duplicateChecked               Int?     @default(0) @db.TinyInt
  description_de                 String?  @db.VarChar(400)
  description_en                 String?  @db.VarChar(400)
  accessgroup                    Int?

  @@index([show_in_import], map: "show_in_import")
}

model profil_suche_fields_vorlage {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(255)
}

model profil_suche_fields_vorlage_field {
  id                             Int     @id @default(autoincrement())
  name                           String? @db.VarChar(255)
  profil_suche_fields_id         Int
  profil_suche_fields_vorlage_id Int
  pos                            Int
}

model profil_suche_groups {
  id           Int     @id @default(autoincrement())
  groupname    String? @db.VarChar(255)
  groupname_en String? @db.VarChar(255)
  position     Int?
  grouptype    String? @db.VarChar(255)
  show_group   Int?
}

model profil_suche_ref_fields {
  id        BigInt  @id @default(autoincrement())
  field_id  BigInt  @default(0)
  ref_field String? @db.VarChar(255)
  ref_value String? @db.VarChar(255)
}

model profil_suche_ref_tables {
  id        BigInt  @id @default(autoincrement())
  feldid    BigInt
  ref_table String? @db.VarChar(255)
  ref_id    String? @db.VarChar(255)
  ref_field String? @db.VarChar(255)
}

model profil_tabs_groups {
  tab     String @default("") @db.VarChar(32)
  groupid BigInt @default(0)

  @@id([tab, groupid])
}

model profil_verteiler {
  id              BigInt          @id @default(autoincrement())
  pid             BigInt
  verteilerid     BigInt
  datum           DateTime?       @db.DateTime(0)
  profil          profil          @relation(fields: [pid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "profil_verteiler_pid")
  admin_verteiler admin_verteiler @relation(fields: [verteilerid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "profil_verteiler_verteilerid")

  @@unique([pid, verteilerid], map: "pid")
  @@index([verteilerid], map: "verteilerid")
}

model profil_view {
  profil BigInt
  view   String  @default("") @db.VarChar(32)
  fields String? @db.VarChar(255)
  sort   String? @db.VarChar(32)

  @@id([profil, view])
}

model profil_weitere_data {
  id                           BigInt    @id @default(autoincrement())
  aktiv                        Int       @default(1) @db.TinyInt
  login_trials                 Int       @default(0) @db.TinyInt
  login_deny                   DateTime? @db.DateTime(0)
  firma                        String?   @db.VarChar(64)
  zusatz                       String?   @db.VarChar(64)
  schulabschluss               String?   @db.VarChar(64)
  religion                     Int
  cms_level                    Int       @default(1) @db.TinyInt
  suffix                       String?   @db.VarChar(255)
  department                   String?   @db.VarChar(255)
  jobtitle                     String?   @db.VarChar(255)
  taetig_seit                  String?   @db.VarChar(255)
  stundensatz_in               String?   @db.VarChar(255)
  fahrkosten_auto_pro_km       String?   @db.VarChar(255)
  fahrkosten_oepnv             String?   @db.VarChar(255)
  titelvor                     String?   @db.VarChar(100)
  titelmitte                   String?   @db.VarChar(100)
  titelnach                    String?   @db.VarChar(100)
  recruitment                  Int       @default(0) @db.TinyInt
  staatsangehoerigkeit_2       String?   @db.VarChar(255)
  sprachwahl_1                 BigInt    @default(0)
  sprachwahl_2                 BigInt    @default(0)
  titel_sonstiges              String?   @db.VarChar(255)
  reading_team                 String?   @db.TinyText
  briefanrede_sonstige         String?   @db.Text
  briefanschrift_sonstige      String?   @db.Text
  briefanrede_sonstige_engl    String?   @db.Text
  briefanschrift_sonstige_engl String?   @db.Text
  behindert                    Int       @default(0) @db.TinyInt
  date_application_complete    DateTime? @db.Date
  ausland                      String?   @db.VarChar(255)
  familienstand                Int
  diozese                      String?   @db.TinyText
  orden                        String?   @db.TinyText
  kinderzahl                   String?   @db.TinyText
  index1_gesamt                Int?
  position                     Int?
  name_druck                   String?   @db.VarChar(64)

  @@index([recruitment], map: "recruitment")
}

model profile_absence {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  profileId       BigInt
  bookingId       BigInt
  beginDate       DateTime? @db.DateTime(0)
  endDate         DateTime? @db.DateTime(0)
  absenceReasonId BigInt?
  hasAttest       Boolean
  reportDate      DateTime? @db.DateTime(0)
  responseDate    DateTime? @db.DateTime(0)
  comment         String?   @db.Text
}

model profile_absence_reason {
  id      BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  name_de String? @db.VarChar(255)
  name_en String? @db.VarChar(255)
}

model profile_application_data_protection_version {
  profile_id                             BigInt
  application_data_protection_version_id BigInt
  application_data_protection_version    application_data_protection_version @relation(fields: [application_data_protection_version_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_profile_application_data_protection_version_id")
  profil                                 profil                              @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_profile_application_data_protection_version_profile_id")

  @@id([profile_id, application_data_protection_version_id])
  @@index([application_data_protection_version_id], map: "fk_profile_application_data_protection_version_id")
}

model profile_archive {
  profile_id           BigInt                 @id
  first_name           String?                @db.VarChar(255)
  middle_name          String?                @db.VarChar(255)
  last_name            String                 @db.VarChar(255)
  archive_date         DateTime?              @db.DateTime(0)
  archive_profile_id   BigInt?
  profile_archive_file profile_archive_file[]
  profile_archive_site profile_archive_site[]
}

model profile_archive_file {
  id                        BigInt                      @id @default(autoincrement())
  booking_id                BigInt?
  profile_id                BigInt
  type                      String                      @db.VarChar(255)
  author_id                 BigInt
  create_date_time          DateTime                    @db.DateTime(0)
  reference_date            DateTime                    @db.DateTime(0)
  profile_archive           profile_archive             @relation(fields: [profile_id], references: [profile_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_profile_archive_profile_archive_file")
  profile_archive_file_site profile_archive_file_site[]

  @@index([profile_id], map: "fk_profile_archive_profile_archive_file")
}

model profile_archive_file_site {
  profile_archive_file_id BigInt
  site_id                 BigInt
  profile_archive_file    profile_archive_file @relation(fields: [profile_archive_file_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_profile_archive_file_profile_archive_file_site")
  pm_standorte            pm_standorte         @relation(fields: [site_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_pm_standorte_profile_archive_file_site")

  @@id([profile_archive_file_id, site_id])
  @@index([site_id], map: "fk_pm_standorte_profile_archive_file_site")
}

model profile_archive_log {
  id        BigInt    @id @default(autoincrement())
  type      String?   @db.VarChar(255)
  time      DateTime? @db.DateTime(0)
  user_id   BigInt?
  values    String?   @db.Text
  entity_id BigInt?
}

model profile_archive_settings {
  id                                BigInt                              @id @default(autoincrement())
  name                              String                              @db.VarChar(255)
  default                           Boolean                             @default(false)
  profile_archive_settings_interval profile_archive_settings_interval[]
  profile_archive_settings_site     profile_archive_settings_site[]

  @@index([default], map: "idx_default")
}

model profile_archive_settings_interval {
  settings_id              BigInt
  type                     String                   @db.VarChar(255)
  interval                 String                   @db.VarChar(255)
  start_option             Int
  manual_delete            Boolean                  @default(false)
  profile_archive_settings profile_archive_settings @relation(fields: [settings_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_profile_archive_settings_interval_settings_id")

  @@id([settings_id, type])
}

model profile_archive_settings_site {
  profile_archive_settings_id BigInt
  site_id                     BigInt
  profile_archive_settings    profile_archive_settings @relation(fields: [profile_archive_settings_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_profile_archive_settings_site_settings_id")
  pm_standorte                pm_standorte             @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_profile_archive_settings_site_site_id")

  @@id([profile_archive_settings_id, site_id])
  @@index([site_id], map: "fk_profile_archive_settings_site_site_id")
}

model profile_archive_site {
  profile_id      BigInt
  site_id         BigInt
  profile_archive profile_archive @relation(fields: [profile_id], references: [profile_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_profile_archive_site_profile_id")

  @@id([profile_id, site_id])
}

model profile_column_settings {
  id        BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  profileId BigInt @default(0) @db.UnsignedBigInt
  table     Int
  column    Int
  isVisible Int    @default(0)
  position  Int    @default(0)
  width     Int    @default(0)
}

model profile_custom_function {
  id                              BigInt  @id @default(autoincrement())
  profile_id                      BigInt
  profile_custom_function_code_id BigInt
  study_program_id                BigInt?
}

model profile_custom_function_code {
  id          BigInt @id @default(autoincrement())
  label_de    String @db.VarChar(255)
  label_en    String @db.VarChar(255)
  unique_name String @unique(map: "idx_unique_unique_name") @db.VarChar(255)
}

model profile_document {
  id        Int     @id @default(autoincrement())
  name      String? @db.VarChar(255)
  className String? @db.VarChar(255)
}

model profile_finance {
  profile_id             BigInt   @id
  institution            String?  @db.VarChar(255)
  bank_code              String?  @db.VarChar(255)
  account_number         String?  @db.VarChar(255)
  account_holder         String?  @db.VarChar(255)
  iban                   String?  @db.VarChar(255)
  bic                    String?  @db.VarChar(255)
  organisator_contract   String?  @db.Text
  organisator_profit     Decimal? @db.Decimal(10, 2)
  tutor_dayrate          Decimal? @db.Decimal(10, 2)
  tutor_agreement        String?  @db.Text
  tutor_dayrate_currency Int?
  discount_id            BigInt?
}

model profile_group {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(255)
}

model profile_log {
  id        BigInt    @id @default(autoincrement())
  type      String?   @db.VarChar(255)
  time      DateTime? @db.DateTime(0)
  user_id   BigInt?
  values    String?   @db.Text
  entity_id BigInt?
}

model profile_password_change {
  id          BigInt   @id @default(autoincrement())
  profileId   BigInt
  token       String?  @db.VarChar(32)
  used        Int      @default(0) @db.TinyInt
  requestTime DateTime @db.DateTime(0)

  @@index([profileId, token], map: "profileId")
}

model profile_portal_login_token {
  profile_id                                           BigInt
  token                                                String @db.VarChar(255)
  assumer_id                                           BigInt
  profil_profilToprofile_portal_login_token_assumer_id profil @relation("profilToprofile_portal_login_token_assumer_id", fields: [assumer_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_profile_portal_login_token_assumer_id")
  profil_profilToprofile_portal_login_token_profile_id profil @relation("profilToprofile_portal_login_token_profile_id", fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_profile_portal_login_token_profile_id")

  @@id([profile_id, token])
  @@index([assumer_id], map: "fk_profile_portal_login_token_assumer_id")
}

model profile_relation {
  root_profile_id   BigInt
  target_profile_id BigInt
  relation_type_id  BigInt
  valid_from        DateTime? @db.DateTime(0)
  valid_until       DateTime? @db.DateTime(0)

  @@id([root_profile_id, target_profile_id, relation_type_id])
}

model profile_relation_type {
  id                      BigInt  @id @default(autoincrement())
  name_root_target_de     String? @db.VarChar(255)
  name_root_target_en     String? @db.VarChar(255)
  name_target_root_de     String? @db.VarChar(255)
  name_target_root_en     String? @db.VarChar(255)
  access_group_assignment Int?    @db.TinyInt
}

model profile_url {
  id     BigInt  @id @default(autoincrement())
  url    String? @db.VarChar(1000)
  target String? @db.VarChar(50)
  label  String? @db.VarChar(255)
  image  String? @db.VarChar(255)
}

model profile_url_access_group {
  access_group_id BigInt
  profile_url_id  BigInt

  @@id([access_group_id, profile_url_id])
}

model property_user_value {
  user_id BigInt
  key     String  @default("") @db.VarChar(255)
  value   String? @db.VarChar(255)
  profil  profil  @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "property_user_value_ibfk_1")

  @@id([user_id, key])
}

model property_value {
  key   String  @id @default("") @db.VarChar(255)
  value String? @db.VarChar(255)
}

model push_subscription {
  profile_id       BigInt
  endpoint         String        @db.VarChar(255)
  public_key       String        @db.VarChar(255)
  auth_token       String        @db.VarChar(255)
  content_encoding String        @db.VarChar(255)
  created_date     DateTime      @db.DateTime(0)
  domain_id        Int           @db.SmallInt
  cms_community    cms_community @relation(fields: [domain_id], references: [domain_id], onDelete: Cascade, onUpdate: NoAction, map: "push_subscription_community_id")
  profil           profil        @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_push_subscription_profile_id")

  @@id([profile_id, endpoint])
  @@index([domain_id], map: "push_subscription_community_id")
}

model quarter {
  corresponding_term Int      @db.UnsignedInt
  corresponding_year Int      @db.UnsignedInt
  year               Int
  term               Int
  start_date         DateTime @db.Date
  end_date           DateTime @db.Date

  @@id([term, year])
}

model ranking {
  profileId        BigInt
  groupId          BigInt
  accumulatedScore Float?  @db.Float
  score            Float?  @db.Float
  ranking          BigInt?

  @@id([profileId, groupId])
}

model ranking_group {
  id               BigInt    @id @default(autoincrement())
  name             String?   @db.VarChar(255)
  studyProgramId   BigInt?
  semesterId       BigInt?
  rankingDate      DateTime? @db.DateTime(0)
  rankingUser      BigInt?
  publishDate      DateTime? @db.DateTime(0)
  publishUntilDate DateTime? @db.DateTime(0)
  publishUser      BigInt?
  weighting        Int?

  @@unique([studyProgramId, semesterId], map: "studyProgramId")
}

model record {
  id           BigInt    @id @default(autoincrement())
  category_id  BigInt?
  parent_id    BigInt?
  text         String?   @db.Text
  confidential Boolean
  created_date DateTime? @db.DateTime(0)
  created_user BigInt
  modify_user  BigInt?
  modify_date  DateTime? @db.DateTime(0)
}

model record_category {
  id       BigInt  @id @default(autoincrement())
  label_de String? @db.VarChar(255)
  label_en String? @db.VarChar(255)
}

model record_company {
  record_id  BigInt @id
  company_id BigInt
}

model record_files {
  id        BigInt  @id @default(autoincrement())
  record_id BigInt
  filename  String? @db.VarChar(255)
}

model record_profile {
  record_id  BigInt @id
  profile_id BigInt
}

model record_restriction {
  record_id BigInt
  group_id  BigInt

  @@id([record_id, group_id])
}

model referee {
  id             BigInt          @id @unique(map: "id_2") @default(autoincrement())
  sid            BigInt?
  salutationId   Int?            @db.TinyInt
  title          String?         @db.VarChar(255)
  firstname      String?         @db.VarChar(255)
  lastname       String?         @db.VarChar(255)
  email          String?         @db.VarChar(255)
  additional     String?         @db.VarChar(255)
  street         String?         @db.VarChar(255)
  postal_code    String?         @db.VarChar(255)
  city           String?         @db.VarChar(255)
  countryId      Int?
  company        String?         @db.VarChar(255)
  department     String?         @db.VarChar(255)
  position       String?         @db.VarChar(255)
  phone          String?         @db.VarChar(255)
  fax            String?         @db.VarChar(255)
  mobile         String?         @db.VarChar(255)
  relationship   String?         @db.VarChar(255)
  request_date   DateTime?       @db.DateTime(0)
  background     String?         @db.VarChar(255)
  send_by_post   Boolean?
  token          String?         @unique(map: "token") @db.VarChar(64)
  submit_date    DateTime?       @db.DateTime(0)
  profil_studium profil_studium? @relation(fields: [sid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "referee_sid")

  @@index([id], map: "id")
  @@index([sid], map: "referee_sid")
}

model region {
  id    BigInt @id @default(autoincrement())
  label String @db.VarChar(255)

  @@index([label], map: "label")
}

model region_country {
  id         BigInt @id @default(autoincrement())
  country_id BigInt
  region_id  BigInt

  @@unique([country_id, region_id], map: "country_id")
}

model request_form {
  id                                  BigInt   @id @default(autoincrement())
  form_version_id                     BigInt?
  form_id                             BigInt
  label                               String?  @db.VarChar(255)
  published                           Boolean?
  category_id                         BigInt?
  permanent                           Boolean?
  archived                            Boolean?
  created_user_id                     BigInt?
  notification_mail                   String?  @db.VarChar(150)
  is_single_request                   Boolean? @default(false)
  is_use_correspondence_email_address Boolean?

  @@index([category_id], map: "idx_category_id")
}

model request_form_category {
  id    BigInt  @id @default(autoincrement())
  label String? @db.VarChar(255)
}

model request_form_category_group {
  category_id BigInt
  group_id    BigInt

  @@id([category_id, group_id])
}

model request_form_mail {
  id              BigInt  @id @default(autoincrement())
  request_form_id BigInt?
  site_id         BigInt?
  category_id     BigInt?
  name            String? @db.VarChar(150)
}

model request_form_profile {
  id                                 BigInt                               @id @default(autoincrement())
  profile_id                         BigInt
  request_id                         BigInt
  status_id                          Int?
  date                               DateTime?                            @db.DateTime(0)
  form_process_id                    BigInt?
  submit_date                        DateTime?                            @db.DateTime(0)
  grade_partial_request_form_profile grade_partial_request_form_profile[]
  grade_request_form_profile         grade_request_form_profile[]
}

model request_form_profile_comment {
  id                      BigInt    @id @default(autoincrement())
  request_form_profile_id BigInt
  profile_id              BigInt
  text                    String?   @db.Text
  datetime                DateTime? @db.DateTime(0)
  public                  Boolean   @default(false)
  commentFile             String?   @db.VarChar(255)
  commentFileSize         Int?
  commentFileUploadedDate DateTime? @db.DateTime(0)
}

model request_form_profile_status {
  id                  BigInt   @id @default(autoincrement())
  label               String?  @db.VarChar(255)
  refill              Boolean? @default(false)
  is_archived         Boolean  @default(false)
  is_multiple_request Boolean  @default(false)
}

model request_form_site {
  request_form_id BigInt
  site_id         BigInt

  @@id([request_form_id, site_id])
}

model research_area {
  id                  BigInt                @id @default(autoincrement())
  label_de            String?               @db.VarChar(255)
  label_en            String?               @db.VarChar(255)
  research_area_group research_area_group[]
  research_area_site  research_area_site[]
  research_project    research_project[]
}

model research_area_group {
  area_id       BigInt
  group_id      BigInt
  research_area research_area @relation(fields: [area_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "area_group_to_area")
  access_groups access_groups @relation(fields: [group_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "area_group_to_access_groups")

  @@id([area_id, group_id])
  @@index([group_id], map: "area_group_to_access_groups")
}

model research_area_site {
  area_id       BigInt
  site_id       BigInt
  research_area research_area @relation(fields: [area_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "area_site_to_area")
  pm_standorte  pm_standorte  @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "area_site_to_pm_standorte")

  @@id([area_id, site_id])
  @@index([site_id], map: "area_site_to_pm_standorte")
}

model research_comment {
  id               BigInt           @id @default(autoincrement())
  project_id       BigInt
  profile_id       BigInt
  text             String?          @db.Text
  created          DateTime?        @db.DateTime(0)
  profil           profil           @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comment_to_profile")
  research_project research_project @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comment_to_project")

  @@index([profile_id], map: "comment_to_profile")
  @@index([project_id], map: "comment_to_project")
}

model research_profile_role {
  id                      BigInt                    @id @default(autoincrement())
  label_de                String?                   @db.VarChar(255)
  label_en                String?                   @db.VarChar(255)
  position                BigInt?
  research_project_member research_project_member[]
}

model research_project {
  id                                                                                      BigInt                      @id @default(autoincrement())
  status_id                                                                               BigInt?
  area_id                                                                                 BigInt?
  code                                                                                    String?                     @db.VarChar(100)
  title                                                                                   String?                     @db.VarChar(255)
  description                                                                             String?                     @db.Text
  teaser                                                                                  String?                     @db.Text
  notes                                                                                   String?                     @db.Text
  start_date                                                                              DateTime?                   @db.Date
  end_date                                                                                DateTime?                   @db.Date
  funding_id                                                                              BigInt?
  cost_centre_number                                                                      String?                     @db.VarChar(255)
  deleted                                                                                 Boolean
  research_area                                                                           research_area?              @relation(fields: [area_id], references: [id], onUpdate: NoAction, map: "project_to_area")
  research_status                                                                         research_status?            @relation(fields: [status_id], references: [id], onUpdate: NoAction, map: "project_to_status")
  research_comment                                                                        research_comment[]
  research_project_member                                                                 research_project_member[]
  research_project_partners                                                               research_project_partners[]
  research_project_relation_research_projectToresearch_project_relation_source_project_id research_project_relation[] @relation("research_projectToresearch_project_relation_source_project_id")
  research_project_relation_research_projectToresearch_project_relation_target_project_id research_project_relation[] @relation("research_projectToresearch_project_relation_target_project_id")

  @@index([area_id], map: "project_to_area")
  @@index([status_id], map: "project_to_status")
}

model research_project_member {
  profile_id            BigInt
  project_id            BigInt
  role_id               BigInt?
  profil                profil                 @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "project_member_to_profile")
  research_project      research_project       @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "project_member_to_project")
  research_profile_role research_profile_role? @relation(fields: [role_id], references: [id], onUpdate: NoAction, map: "project_member_to_role")

  @@id([profile_id, project_id])
  @@index([project_id], map: "project_member_to_project")
  @@index([role_id], map: "project_member_to_role")
}

model research_project_partners {
  id                  BigInt              @id @default(autoincrement())
  company_id          BigInt
  research_project_id BigInt
  type                Int                 @default(1) @db.SmallInt
  contact_person_id   BigInt?
  amount              Float?
  currency_id         BigInt?
  firma               firma               @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "research_project_partners_company_id")
  profil              profil?             @relation(fields: [contact_person_id], references: [id], onUpdate: NoAction, map: "research_project_partners_contact_person_id")
  financial_currency  financial_currency? @relation(fields: [currency_id], references: [id], onUpdate: NoAction, map: "research_project_partners_currency_id")
  research_project    research_project    @relation(fields: [research_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "research_project_partners_research_project_id")

  @@index([company_id], map: "research_project_partners_company_id")
  @@index([contact_person_id], map: "research_project_partners_contact_person_id")
  @@index([currency_id], map: "research_project_partners_currency_id")
  @@index([research_project_id], map: "research_project_partners_research_project_id")
}

model research_project_relation {
  source_project_id                                                              BigInt
  target_project_id                                                              BigInt
  relation_type_id                                                               BigInt
  research_project_relation_type                                                 research_project_relation_type @relation(fields: [relation_type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "project_relation_to_relation_type")
  research_project_research_projectToresearch_project_relation_source_project_id research_project               @relation("research_projectToresearch_project_relation_source_project_id", fields: [source_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "source_project_to_project")
  research_project_research_projectToresearch_project_relation_target_project_id research_project               @relation("research_projectToresearch_project_relation_target_project_id", fields: [target_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "target_project_to_project")

  @@id([source_project_id, target_project_id, relation_type_id])
  @@index([relation_type_id], map: "project_relation_to_relation_type")
  @@index([target_project_id], map: "target_project_to_project")
}

model research_project_relation_type {
  id                        BigInt                      @id @default(autoincrement())
  label_source_target_de    String?                     @db.VarChar(255)
  label_source_target_en    String?                     @db.VarChar(255)
  label_target_source_de    String?                     @db.VarChar(255)
  label_target_source_en    String?                     @db.VarChar(255)
  research_project_relation research_project_relation[]
}

model research_status {
  id               BigInt             @id @default(autoincrement())
  label_de         String?            @db.VarChar(255)
  label_en         String?            @db.VarChar(255)
  color            String?            @db.VarChar(20)
  research_project research_project[]
}

model scheduler_planning_status {
  id                          BigInt                    @id @default(autoincrement())
  label_de                    String?                   @db.VarChar(255)
  color                       String?                   @db.VarChar(20)
  visible_for_lecturers       Int                       @default(1) @db.TinyInt
  visible_for_participants    Int                       @default(1) @db.TinyInt
  editing_locked              Int                       @default(0) @db.TinyInt
  allow_participant_conflicts Int                       @default(1) @db.TinyInt
  color_id                    BigInt?
  label_en                    String?                   @db.VarChar(255)
  position                    Int                       @default(0)
  no_conflict_check           Boolean                   @default(false)
  assessment_day_settings     assessment_day_settings[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model search_index {
  domain Int
  lang   Int
  word   String? @db.VarChar(64)
  result String? @db.Text

  @@unique([domain, lang, word], map: "domain")
  @@ignore
}

model search_pages {
  id            BigInt    @id @default(autoincrement())
  domain        BigInt    @default(0)
  url           String?   @db.VarChar(255)
  titel         String?   @db.VarChar(255)
  cont_full     String?   @db.Text
  cont_stripped String?   @db.Text
  updated       DateTime? @db.DateTime(0)
  hash          String?   @db.VarChar(32)

  @@unique([domain, url], map: "domain")
}

model select_values {
  id       Int     @id @default(autoincrement())
  tabelle  String? @db.VarChar(255)
  data_id  Int?
  field    String? @db.VarChar(255)
  value    String? @db.VarChar(255)
  value_en String? @db.VarChar(64)
  position Int     @default(1)

  @@index([position], map: "position")
}

model semester_deviation {
  year                      Int      @db.SmallInt
  term                      Int      @db.SmallInt
  site_id                   BigInt
  study_program_category_id BigInt
  semester_begin            DateTime @db.DateTime(0)
  semester_end              DateTime @db.DateTime(0)
  lecture_begin             DateTime @db.DateTime(0)
  lecture_end               DateTime @db.DateTime(0)

  @@id([year, term, site_id, study_program_category_id])
}

model semester_site_infopool_folder {
  semester_id        Int
  site_id            BigInt
  infopool_folder_id BigInt
  ip_folders         ip_folders   @relation(fields: [infopool_folder_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ssif_folder")
  ac5_semester       ac5_semester @relation(fields: [semester_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ssif_semester")
  pm_standorte       pm_standorte @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ssif_site")

  @@id([semester_id, site_id, infopool_folder_id])
  @@index([infopool_folder_id], map: "fk_ssif_folder")
  @@index([site_id], map: "fk_ssif_site")
}

model semester_type {
  id                                    Int                                     @id @default(autoincrement())
  active                                Boolean                                 @default(true)
  profile_semester_type                 Int                                     @db.TinyInt
  course_enrolment_period_semester_type course_enrolment_period_semester_type[]
  mobility_online_configuration         mobility_online_configuration[]
  semester_type_language                semester_type_language[]
}

model semester_type_language {
  id_semester_type Int
  language         String        @db.VarChar(2)
  label            String        @db.VarChar(256)
  semester_type    semester_type @relation(fields: [id_semester_type], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "semester_type_language_ibfk_1")

  @@id([id_semester_type, language])
}

model seminar {
  id                         BigInt                      @id @default(autoincrement())
  internal_number            String?                     @db.VarChar(255)
  name                       String?                     @db.VarChar(255)
  subname                    String?                     @db.VarChar(255)
  start_date                 DateTime?                   @db.DateTime(0)
  end_date                   DateTime?                   @db.DateTime(0)
  date_description           String?                     @db.VarChar(255)
  min_participants           Int?
  max_participants           Int?
  participants_description   String?                     @db.VarChar(255)
  type_id                    BigInt?
  status_id                  BigInt?
  description                String?                     @db.Text
  methodology                String?                     @db.Text
  currency_id                BigInt?
  show_residence_fields      Boolean?
  sphere_of_activity_id      BigInt?
  application_closing_date   DateTime?                   @db.DateTime(0)
  registration_description   String?                     @db.Text
  financial_currency         financial_currency?         @relation(fields: [currency_id], references: [id], onUpdate: NoAction, map: "seminar_to_currency")
  seminar_sphere_of_activity seminar_sphere_of_activity? @relation(fields: [sphere_of_activity_id], references: [id], onUpdate: NoAction, map: "seminar_to_sphere_of_activity")
  seminar_status             seminar_status?             @relation(fields: [status_id], references: [id], onUpdate: NoAction, map: "seminar_to_status")
  seminar_type               seminar_type?               @relation(fields: [type_id], references: [id], onUpdate: NoAction, map: "seminar_to_type")
  seminar_partner            seminar_partner[]
  seminar_seminar_tag        seminar_seminar_tag[]

  @@index([currency_id], map: "seminar_to_currency")
  @@index([sphere_of_activity_id], map: "seminar_to_sphere_of_activity")
  @@index([status_id], map: "seminar_to_status")
  @@index([type_id], map: "seminar_to_type")
}

model seminar_file {
  id               Int     @id @default(autoincrement()) @db.UnsignedInt
  seminar_id       Int?
  name             String? @db.VarChar(255)
  type             String? @db.VarChar(255)
  show_in_frontend Boolean @default(false)
}

model seminar_lecturer {
  id                             BigInt                           @id @default(autoincrement())
  seminar_id                     Int?
  profile_id                     BigInt?
  position                       Int?
  extra                          String?                          @db.Text
  seminar_lecturer_lecturer_role seminar_lecturer_lecturer_role[]
}

model seminar_lecturer_lecturer_role {
  id                    BigInt                @id @default(autoincrement())
  lecturer_id           BigInt
  role_id               BigInt
  seminar_lecturer      seminar_lecturer      @relation(fields: [lecturer_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "lecturer_id_to_lecturer_role")
  seminar_lecturer_role seminar_lecturer_role @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "role_id_to_lecturer_role")

  @@index([lecturer_id], map: "lecturer_id_to_lecturer_role")
  @@index([role_id], map: "role_id_to_lecturer_role")
}

model seminar_lecturer_role {
  id                             BigInt                           @id @default(autoincrement())
  label_de                       String?                          @db.VarChar(255)
  label_en                       String?                          @db.VarChar(255)
  seminar_lecturer_lecturer_role seminar_lecturer_lecturer_role[]
}

model seminar_location {
  id              Int     @id @default(autoincrement())
  seminar_id      Int?
  location_id     Int?
  room_id         Int?
  conference_site String? @db.Text
}

model seminar_participant {
  id                    Int       @id @default(autoincrement()) @db.UnsignedInt
  seminar_id            Int?
  profile_id            BigInt?
  participant_status_id Int?
  registration_date     DateTime? @db.DateTime(0)
  accommodation_from    DateTime? @db.Date
  accommodation_to      DateTime? @db.Date
  firstname             String?   @db.VarChar(255)
  lastname              String?   @db.VarChar(255)
  registration_id       Int?
}

model seminar_participant_cost {
  id             BigInt  @id @default(autoincrement())
  participant_id Int?
  label          String? @db.VarChar(255)
  cost           BigInt?
}

model seminar_participant_status {
  id    Int     @id @default(autoincrement()) @db.UnsignedInt
  label String? @db.VarChar(255)
}

model seminar_partner {
  id                BigInt  @id @default(autoincrement())
  seminar_id        BigInt
  company_id        BigInt
  contact_person_id BigInt?
  firma             firma   @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "company_id_to_company")
  profil            profil? @relation(fields: [contact_person_id], references: [id], onUpdate: NoAction, map: "contact_person_id_to_profile")
  seminar           seminar @relation(fields: [seminar_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "seminar_id_to_seminar")

  @@index([company_id], map: "company_id_to_company")
  @@index([contact_person_id], map: "contact_person_id_to_profile")
  @@index([seminar_id], map: "seminar_id_to_seminar")
}

model seminar_price {
  id         Int     @id @default(autoincrement()) @db.UnsignedInt
  seminar_id Int?
  amount     Int?
  label      String? @db.VarChar(255)
}

model seminar_registration {
  id                   Int       @id @default(autoincrement()) @db.UnsignedInt
  seminar_id           Int?
  access_token         String?   @db.VarChar(255)
  salutation           String?   @db.VarChar(255)
  firstname            String?   @db.VarChar(255)
  lastname             String?   @db.VarChar(255)
  academic_title       String?   @db.VarChar(255)
  official_title       String?   @db.VarChar(255)
  function             String?   @db.VarChar(255)
  email                String?   @db.VarChar(255)
  office               String?   @db.VarChar(255)
  department           String?   @db.VarChar(255)
  zip                  Int?
  city                 String?   @db.VarChar(255)
  street               String?   @db.VarChar(255)
  phone                String?   @db.VarChar(255)
  mobile_phone         String?   @db.VarChar(255)
  invoice_office       String?   @db.VarChar(255)
  invoice_department   String?   @db.VarChar(255)
  invoice_zip          Int       @default(0)
  invoice_city         String?   @db.VarChar(255)
  invoice_street       String?   @db.VarChar(255)
  invoice_phone        String?   @db.VarChar(255)
  invoice_mobile_phone String?   @db.VarChar(255)
  invoice_email        String?   @db.VarChar(255)
  invoice_key          Int?
  accommodation_from   DateTime? @db.Date
  accommodation_to     DateTime? @db.Date
  is_confirmed         Boolean?
  extra_hint           String?   @db.VarChar(255)
}

model seminar_registration_old {
  id                      Int     @id @default(autoincrement()) @db.UnsignedInt
  seminar_id              Int?
  access_token            String? @db.VarChar(255)
  company_name            String? @db.VarChar(255)
  company_zip             Int?
  company_city            String? @db.VarChar(255)
  company_street          String? @db.VarChar(255)
  company_phone           String? @db.VarChar(255)
  company_email           String? @db.VarChar(255)
  contact_person          String? @db.VarChar(255)
  firstname               String? @db.VarChar(255)
  lastname                String? @db.VarChar(255)
  person_phone            String? @db.VarChar(255)
  person_email            String? @db.VarChar(255)
  department              String? @db.VarChar(255)
  position                String? @db.VarChar(255)
  title                   String? @db.VarChar(255)
  invoice_street          String? @db.VarChar(255)
  invoice_zip             Int?
  invoice_city            String? @db.VarChar(255)
  accommodation_on_campus Boolean @default(false)
  accommodation_from      String? @db.VarChar(255)
  accommodation_to        String? @db.VarChar(255)
  send_hotel_register     Boolean @default(false)
  is_confirmed            Boolean @default(false)
}

model seminar_seminar_tag {
  id          BigInt      @id @default(autoincrement())
  seminar_id  BigInt
  tag_id      BigInt
  seminar     seminar     @relation(fields: [seminar_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "from_seminar_seminar_tag_to_seminar")
  seminar_tag seminar_tag @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "from_seminar_seminar_tag_to_seminar_tag")

  @@index([seminar_id], map: "from_seminar_seminar_tag_to_seminar")
  @@index([tag_id], map: "from_seminar_seminar_tag_to_seminar_tag")
}

model seminar_sphere_of_activity {
  id      BigInt    @id @default(autoincrement())
  label   String?   @db.VarChar(255)
  seminar seminar[]
}

model seminar_status {
  id                BigInt    @id @default(autoincrement())
  label             String?   @db.VarChar(255)
  show_in_frontend  Boolean?
  can_registrate    Boolean?
  label_in_frontend String?   @db.Text
  seminar           seminar[]
}

model seminar_tag {
  id                  BigInt                @id @default(autoincrement())
  label_de            String?               @db.VarChar(255)
  label_en            String?               @db.VarChar(255)
  seminar_seminar_tag seminar_seminar_tag[]
}

model seminar_type {
  id      BigInt    @id @default(autoincrement())
  label   String?   @db.VarChar(255)
  seminar seminar[]
}

model session {
  sid          String   @id @default("") @db.VarChar(255)
  pid          BigInt   @default(0)
  status       String?  @db.VarChar(10)
  lastaction   DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  member       String?  @db.Text
  lang         String?  @db.Char(2)
  stid         String?  @db.Text
  standort     Int      @default(0)
  login_extern Int      @db.TinyInt
}

model settings {
  id        BigInt @id @default(autoincrement())
  module    String @db.VarChar(255)
  values    String @db.LongText
  schema_id BigInt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model settings_authentication_ldap {
  ldap_enabled        Int     @default(0) @db.TinyInt
  ldap_url            String? @db.VarChar(255)
  ldap_domain         String? @db.VarChar(255)
  ldap_domain_mapping String? @db.VarChar(255)

  @@ignore
}

model settings_cronjob {
  relative_path String @id @db.VarChar(255)
  display_name  String @db.VarChar(255)
  active        Int    @default(0) @db.TinyInt
}

model settings_schema {
  id          BigInt        @id @default(autoincrement())
  label       String        @db.VarChar(255)
  is_default  Boolean
  application application[]
}

model settings_schema_sites {
  schema_id BigInt @default(0)
  site_id   BigInt @default(0)

  @@id([site_id, schema_id])
}

model settings_system {
  name  String  @id @db.VarChar(255)
  value String? @db.LongText
}

model settings_system_activation {
  id                                          BigInt  @id
  community_bundle_lecturer_registration      Boolean @default(false)
  is_grading_sheet_active                     Boolean
  community_bundle_exam                       Boolean @default(false)
  is_ldap_configuration_active                Boolean @default(false)
  community_bundle_supervisor                 Boolean @default(false)
  community_bundle_room_booking               Boolean @default(false)
  health_insurance_registration               Boolean @default(false)
  is_mobility_online_active                   Boolean
  is_sso_configuration_active                 Boolean @default(false)
  campus_web_bundle_assessment_day_commission Boolean @default(false)
}

model settings_system_application {
  id                                BigInt  @id
  assessment_day_register_all_parts Boolean @default(false)
}

model settings_system_course {
  id                               BigInt   @id
  standardized_course_series_parts Boolean
  single_course_site               Boolean?
  module_version_filter            Boolean  @default(false)
  multiple_site_events             Boolean  @default(false)
  paid_offer                       Boolean  @default(false)
  moodle_interface_pro             Boolean  @default(false)
  moodle_interface                 Boolean  @default(false)
}

model settings_system_customisation {
  id                      BigInt  @id @default(autoincrement())
  navbar_background_color String? @db.VarChar(255)
  navbar_bottom_color     String? @db.VarChar(255)
}

model settings_system_datasource_site {
  id_site       BigInt       @id
  id_datasource BigInt?
  cms_datasrc   cms_datasrc? @relation(fields: [id_datasource], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "settings_system_datasource_site_ibfk_2")
  pm_standorte  pm_standorte @relation(fields: [id_site], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "settings_system_datasource_site_ibfk_1")

  @@index([id_datasource], map: "id_datasource")
}

model settings_system_exam_management {
  id                          BigInt @id @default(autoincrement())
  grade_annotation            Int    @default(0) @db.TinyInt
  is_grade_request_assignment Int    @default(0) @db.TinyInt
}

model settings_system_feature_flag {
  id                                      BigInt  @id
  new_course_ticket_list                  Int     @default(0) @db.TinyInt
  pwa                                     Int     @default(0) @db.TinyInt
  profile_archiving                       Int     @default(0) @db.TinyInt
  curriculum_document                     Int     @default(0) @db.TinyInt
  curricular_course_inscription_electives Int     @default(0) @db.TinyInt
  new_statistic_tab                       Boolean @default(false)
  company_invoice                         Boolean @default(false)
  split_invoice                           Boolean @default(false)
  soap_service_access_right               Boolean @default(false)
  system_usability_scale                  Boolean @default(false)
  authentication                          Boolean @default(false)
  access_group_validity_date              Boolean @default(false)
  new_exam_result_list                    Boolean @default(false)
  communicator_bundle                     Boolean @default(false)
  assessment_day_event_synchronisation    Boolean @default(false)
  subject_version_multi_select_fields     Boolean @default(false)
  is_conflict_check_disabled              Boolean @default(false)
  is_participant_caching_enabled          Boolean @default(false)
  exam_registration_special_period        Boolean @default(false)
  experimental_rest_api                   Boolean @default(false)
  new_email_dialog                        Boolean @default(false)
  module_version_status                   Int     @default(0) @db.TinyInt
  is_hide_exam_part_assessor_text         Boolean @default(false)
  extracurricular_grade_transfer          Int     @default(0) @db.TinyInt
}

model settings_system_internationalisation {
  id                                                            BigInt       @id
  region_number                                                 BigInt
  time_zone_identifier                                          String?      @db.VarChar(255)
  locale_code                                                   String?      @db.VarChar(10)
  date_format                                                   String?      @db.VarChar(10)
  time_format                                                   String?      @db.VarChar(7)
  date_format_date_formatTosettings_system_internationalisation date_format? @relation(fields: [date_format], references: [format], onDelete: NoAction, onUpdate: NoAction, map: "fk_system_international_date_format")
  locale                                                        locale?      @relation(fields: [locale_code], references: [code], onDelete: Cascade, onUpdate: NoAction, map: "fk_system_international_locale_code")

  @@index([date_format], map: "fk_system_international_date_format")
  @@index([locale_code], map: "fk_system_international_locale_code")
}

model settings_system_log {
  id                   BigInt  @id @default(autoincrement())
  deletion_period_days BigInt?
  data_access_log      Int     @default(0) @db.TinyInt
}

model settings_system_log_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model settings_system_profile {
  id                                     BigInt  @id @default(autoincrement())
  profile_id_is_personnel_number         Int     @default(0) @db.TinyInt
  lecturer_contract_site_selection       Int     @default(0) @db.TinyInt
  employment_reliefs_editable            Boolean @default(true)
  portal_login_data_protection_compliant Boolean @default(false)
  profile_custom_function_code           Boolean @default(false)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model setup {
  setup_started  DateTime? @db.Timestamp(0)
  setup_complete Int       @default(0) @db.TinyInt

  @@ignore
}

model skeleton {
  id               BigInt             @id @default(autoincrement())
  name             String             @db.VarChar(255)
  created_date     DateTime           @db.DateTime(0)
  room_id          BigInt?
  pm_raeume        pm_raeume?         @relation(fields: [room_id], references: [id], onUpdate: NoAction, map: "fk_skeleton_room_id")
  skeleton_address skeleton_address[]

  @@index([room_id], map: "fk_skeleton_room_id")
}

model skeleton_access_group {
  groupid             BigInt        @id
  skeleton_read_write Int           @default(0) @db.TinyInt
  access_groups       access_groups @relation(fields: [groupid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "skeleton_access_group_ibfk_1")
}

model skeleton_address {
  skeleton_id BigInt
  address_id  BigInt
  pm_fields   pm_fields @relation(fields: [address_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_skeleton_address_address_id")
  skeleton    skeleton  @relation(fields: [skeleton_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_skeleton_address_skeleton_id")

  @@id([skeleton_id, address_id])
  @@index([address_id], map: "fk_skeleton_address_address_id")
}

model skeleton_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model soap_access_group {
  groupid       BigInt        @id
  access        Int           @default(0) @db.TinyInt
  access_groups access_groups @relation(fields: [groupid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "soap_access_group_ibfk_1")
}

model sonderzeichen {
  ID            Int     @id @default(autoincrement())
  sonderzeichen String? @db.VarChar(255)
  ersatzzeichen String? @db.VarChar(255)
}

model specialization_election {
  id                             BigInt                           @id @default(autoincrement())
  start_date                     DateTime                         @db.DateTime(0)
  end_date                       DateTime                         @db.DateTime(0)
  specialization_count           Int?                             @default(2)
  specialization_election_cohort specialization_election_cohort[]
}

model specialization_election_cohort {
  specialization_election_id BigInt
  cohort_id                  BigInt
  klasse                     klasse                  @relation(fields: [cohort_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "cohort_id")
  specialization_election    specialization_election @relation(fields: [specialization_election_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "specialization_election_id")

  @@id([specialization_election_id, cohort_id])
  @@index([cohort_id], map: "cohort_id")
}

model sprachen {
  id      BigInt  @id @default(autoincrement())
  name    String? @db.VarChar(30)
  name_en String? @db.VarChar(32)
  kuerzel String? @unique(map: "kuerzel") @db.Char(2)
}

model sprachgruppen {
  id   BigInt  @id @default(autoincrement())
  name String? @db.VarChar(255)
}

model sso_settings {
  id       Int    @id @default(autoincrement()) @db.UnsignedTinyInt
  type     Int    @db.UnsignedTinyInt
  name     String @unique(map: "name") @db.VarChar(255)
  settings String @db.Text
}

model statistic_access_group {
  groupid                              BigInt   @id @default(1)
  statistic_showReports                Boolean
  statistic_settings                   Boolean
  statistic_settings_editKeyDirectory  Boolean
  statistic_alternative_database       Boolean  @default(false)
  edit_bis                             Boolean?
  edit_reports                         Boolean?
  edit_ba_statistic                    Boolean  @default(false)
  read_reports                         Boolean  @default(false)
  bis_profile_edit                     Boolean?
  statistic_profile_read               Boolean  @default(false)
  statistic_profile_edit               Boolean  @default(false)
  html_gadget_read_write_delete        Boolean  @default(false)
  health_insurance_read                Boolean  @default(false)
  health_insurance_edit                Boolean  @default(false)
  health_insurance_reporting_institute Boolean  @default(false)
}

model statistic_custom_study_field_signature {
  signature                                        String?                                            @db.VarChar(255)
  field_of_study                                   String?                                            @db.VarChar(255)
  id                                               BigInt                                             @id @default(autoincrement())
  deviating_statistic_custom_study_field_signature deviating_statistic_custom_study_field_signature[]
}

model statistic_protocol {
  id                             BigInt   @id @default(autoincrement())
  year                           Int?
  semester                       Int?     @db.SmallInt
  version                        Int
  successful                     Boolean?
  ipFileId_Excel                 BigInt?
  ipFileId_PlainText             BigInt?
  ipFileId_csv                   BigInt?
  createdTime                    DateTime @db.DateTime(0)
  createdUserId                  BigInt
  type                           Int      @db.SmallInt
  statistic_report_university_id BigInt?
  delivered                      Boolean  @default(false)
}

model statistic_protocol_entry {
  id         BigInt  @id @default(autoincrement())
  protocolId BigInt
  message    String? @db.Text
  type       Int     @db.SmallInt

  @@index([protocolId], map: "protocolId")
}

model statistic_protocol_matriculation_number {
  protocol_id          BigInt
  matriculation_number String @default("") @db.VarChar(12)

  @@id([protocol_id, matriculation_number])
}

model statistic_protocol_study_program {
  statistic_protocol_id BigInt
  study_program_id      BigInt

  @@id([statistic_protocol_id, study_program_id])
}

model statistic_report_university {
  id                                       BigInt  @id @default(autoincrement())
  label                                    String? @db.VarChar(255)
  university_signature                     String? @db.VarChar(4)
  state_signature                          String? @db.VarChar(2)
  examination_office_signature             String? @db.VarChar(7)
  statistic_study_field_signature_table_id BigInt?
}

model statistic_report_university_site {
  statistic_report_university_id BigInt
  site_id                        BigInt

  @@id([statistic_report_university_id, site_id])
}

model statistic_study_field_signature_entry {
  id                                       BigInt  @id @default(autoincrement())
  statistic_study_field_signature_table_id BigInt
  signature                                String? @db.VarChar(255)
  original_signature                       String? @db.VarChar(255)
}

model statistic_study_field_signature_table {
  id   BigInt  @id @default(autoincrement())
  name String? @db.VarChar(255)
}

model statistic_tab_log {
  id        BigInt   @id @default(autoincrement())
  type      String   @db.VarChar(255)
  time      DateTime @db.DateTime(0)
  user_id   BigInt?
  values    String?  @db.Text
  entity_id BigInt?
}

model statistik_datasrc {
  id          Int       @id @default(autoincrement())
  name        String?   @db.VarChar(255)
  tabelle     String?   @db.VarChar(255)
  sig_feld    String?   @db.VarChar(255)
  last_update DateTime? @db.Date
}

model stellen_files {
  id     BigInt  @id @default(autoincrement())
  stelle BigInt  @default(0)
  name   String? @db.VarChar(128)
  format String? @db.VarChar(5)
  size   BigInt  @default(0)

  @@index([stelle], map: "stelle")
}

model studium {
  id                                                             BigInt                                       @id @default(autoincrement())
  abkuerzung                                                     String?                                      @db.VarChar(50)
  beschreibung                                                   String?                                      @db.VarChar(255)
  beschreibung_2                                                 String?                                      @db.VarChar(255)
  name                                                           String?                                      @db.VarChar(255)
  bez_en                                                         String?                                      @db.VarChar(255)
  bez_en_zusatz                                                  String?                                      @db.VarChar(255)
  bez_en_zusatz_2                                                String?                                      @db.VarChar(255)
  bez_es                                                         String?                                      @db.VarChar(255)
  bez_fr                                                         String?                                      @db.VarChar(255)
  faculty                                                        Int?                                         @db.SmallInt
  studiumsart                                                    BigInt?
  studiengangsleiter                                             BigInt?
  sparte                                                         Int?
  typ                                                            Int?                                         @db.SmallInt
  abschluss                                                      String?                                      @db.VarChar(40)
  abschluss_id                                                   BigInt?
  abschluss_abkuerzung                                           String?                                      @db.VarChar(20)
  abschluss_m                                                    String?                                      @db.VarChar(100)
  abschluss_w                                                    String?                                      @db.VarChar(100)
  aktenzeichen                                                   String?                                      @db.VarChar(20)
  aktenzeichen_datum                                             DateTime?                                    @db.Date
  beginn                                                         DateTime?                                    @db.Date
  ende                                                           DateTime?                                    @db.Date
  studienzeit_typ                                                Int?                                         @db.SmallInt
  regelstudienzeit                                               Int                                          @default(6)
  studienzeit_v_von                                              Int                                          @default(1)
  studienzeit_v_bis                                              Int                                          @default(12)
  bez_zeugnis                                                    String?                                      @db.VarChar(255)
  bez_zeugnis_en                                                 String?                                      @db.VarChar(64)
  beschreibung_zeugnis                                           String?                                      @db.VarChar(255)
  dekan                                                          String?                                      @db.VarChar(255)
  status                                                         Int?                                         @db.SmallInt
  link                                                           String?                                      @db.VarChar(255)
  gebuehr                                                        Int?
  waehrung                                                       String?                                      @db.Char(2)
  abrechnungszeitraum                                            String?                                      @db.VarChar(30)
  akademie                                                       Int?
  mnr_zaehler                                                    Int?                                         @default(0)
  mnr_jahreszaehler                                              String?                                      @db.Text
  studienfach                                                    String?                                      @db.VarChar(20)
  abschlussziel                                                  String?                                      @db.VarChar(3)
  matrikelid                                                     Int?
  matrikelid_manuell                                             String?                                      @db.VarChar(6)
  ip_folder                                                      BigInt?
  bewerberabsageabsender                                         String?                                      @db.VarChar(255)
  bewerbung_moeglich                                             Boolean                                      @default(false)
  bewerberabsagetext                                             String?                                      @db.Text
  bewerberabsagebetreff                                          String?                                      @db.VarChar(255)
  angebot_ws                                                     Boolean?                                     @default(true)
  angebot_ss                                                     Boolean?                                     @default(true)
  gueltig_von                                                    DateTime?                                    @db.Date
  gueltig_bis                                                    DateTime?                                    @db.Date
  konto                                                          BigInt?
  balance_account                                                BigInt?
  bewerberwartelisteabsender                                     String?                                      @db.VarChar(255)
  bewerberwartelistetext                                         String?                                      @db.Text
  bewerberwartelistebetreff                                      String?                                      @db.VarChar(255)
  description                                                    String?                                      @db.Text
  category_id                                                    BigInt?
  statistic_study_time_type                                      String?                                      @db.VarChar(1)
  application_category_id                                        BigInt?
  ects_based                                                     Int?                                         @default(0) @db.TinyInt
  course_number                                                  String?                                      @db.VarChar(255)
  announcement_code                                              String?                                      @db.VarChar(255)
  organizational_form_code                                       String?                                      @db.VarChar(255)
  distribution_grade_1                                           Float?                                       @db.Float
  distribution_grade_2                                           Float?                                       @db.Float
  distribution_grade_3                                           Float?                                       @db.Float
  distribution_grade_4                                           Float?                                       @db.Float
  isced_f                                                        String?                                      @db.VarChar(4)
  ba_statistic_type_of_graduation                                String?                                      @db.VarChar(2)
  ba_statistic_first_course_code                                 String?                                      @db.VarChar(3)
  legal_de                                                       String?                                      @db.Text
  legal_en                                                       String?                                      @db.Text
  bis_include_applicants                                         Int                                          @default(1) @db.TinyInt
  bis_bmwfw_funding                                              Int?                                         @default(3)
  studienfach_custom                                             String?                                      @db.VarChar(255)
  consider_semester_limits                                       Boolean                                      @default(false)
  admission_procedure                                            admission_procedure[]
  application_program                                            application_program[]
  bis_student_report_study_program                               bis_student_report_study_program[]
  digital_signature_document                                     digital_signature_document[]
  document_generator_document_study_program                      document_generator_document_study_program[]
  exam_study_program                                             exam_study_program[]
  financial_payment_model                                        financial_payment_model[]
  instrument_study_program_field                                 instrument_study_program_field[]
  kb_kursangebot_modul                                           kb_kursangebot_modul[]
  lecturer_contract_employment_study_program                     lecturer_contract_employment_study_program[]
  lecturer_contract_function_study_program                       lecturer_contract_function_study_program[]   @ignore
  profil_studium_profil_studium_application_for_programTostudium profil_studium[]                             @relation("profil_studium_application_for_programTostudium")
  profil_studium_profil_studium_studiumTostudium                 profil_studium[]                             @relation("profil_studium_studiumTostudium")
  study_time_model_program                                       study_time_model_program[]
  submission_assignment_program                                  submission_assignment_program[]
}

model studium_areas {
  id           BigInt  @id @default(autoincrement())
  studium      BigInt
  version      BigInt
  bez_de       String? @db.VarChar(255)
  bez_en       String? @db.VarChar(255)
  position     Int     @default(1) @db.TinyInt
  beschreibung String? @db.Text

  @@index([studium, version], map: "studium")
}

model studium_category {
  id      BigInt  @id @default(autoincrement())
  studium BigInt
  version BigInt
  kuerzel String? @db.VarChar(16)
  bez_de  String? @db.VarChar(64)
  bez_en  String? @db.VarChar(64)

  @@index([studium, version], map: "studium")
}

model studium_desc {
  id         BigInt  @id @default(autoincrement())
  studium    BigInt
  version    String? @db.VarChar(64)
  start_jahr Int
  start_term Int     @default(1) @db.TinyInt
  ende_jahr  Int
  ende_term  Int     @default(1) @db.TinyInt
  abkuerzung String? @db.VarChar(16)
  bez_de     String? @db.VarChar(255)
  bez_en     String? @db.VarChar(255)

  @@index([studium], map: "studium")
}

model studium_fakultaeten {
  id BigInt  @id @default(autoincrement())
  de String? @db.VarChar(255)
  en String? @db.VarChar(255)
}

model studium_fields {
  id                  BigInt  @id @default(autoincrement())
  groupid             BigInt  @default(0)
  name                String? @db.VarChar(64)
  feld                String? @db.VarChar(64)
  feldid              BigInt  @default(0)
  typ                 String? @db.VarChar(8)
  show                Int     @default(1) @db.TinyInt
  position            Int     @default(0)
  box                 Int     @default(1) @db.SmallInt
  row                 Int     @default(1) @db.SmallInt
  export              Int     @default(0) @db.TinyInt
  datenquelle         Int     @db.TinyInt
  conjunction         Int     @default(0) @db.TinyInt
  ebenen              Int     @default(1) @db.TinyInt
  suche               Int     @default(0) @db.TinyInt
  profil_suche        Int     @db.TinyInt
  system              Int     @default(1) @db.TinyInt
  sel_table           String? @db.VarChar(50)
  sel_feld            String? @db.VarChar(40)
  gewichtung          Int     @default(1) @db.TinyInt
  ref_table           String? @db.VarChar(32)
  ref_table_as        String? @db.VarChar(50)
  refSelection        Int     @default(1) @db.TinyInt
  ref_field           String? @db.VarChar(32)
  ref_name            String? @db.VarChar(32)
  ref_ref_table       String? @db.VarChar(40)
  ref_ref_table_as    String? @db.VarChar(100)
  ref_refSelection    Int     @default(1) @db.TinyInt
  ref_ref_name        String? @db.VarChar(100)
  ref_ref_field       String? @db.VarChar(100)
  ref_ref_conjunction Int     @default(0) @db.TinyInt
  ref_selection       String? @db.Text
}

model studium_invisible_tabs {
  tabid   Int
  studium Int

  @@id([tabid, studium])
}

model studium_module {
  id           BigInt  @id @default(autoincrement())
  studium      BigInt  @default(0)
  studium_desc BigInt
  de           String? @db.VarChar(256)
  en           String? @db.VarChar(256)
  beschreibung String? @db.Text
  fachid       BigInt
  modulid      String? @db.VarChar(32)
  position     Int?

  @@index([studium], map: "seminar")
}

model studium_schwerpunkte {
  id                           BigInt                         @id @default(autoincrement())
  studium                      BigInt                         @default(0)
  version                      BigInt
  name                         String?                        @db.VarChar(255)
  bez_en                       String?                        @db.VarChar(255)
  abkuerzung                   String?                        @db.VarChar(20)
  beschreibung                 String?                        @db.Text
  mnr_zaehler                  Int                            @default(0) @db.TinyInt
  mnr_zusatz                   String?                        @db.VarChar(20)
  mnr_id                       Int?
  bewerbung_moeglich           Int                            @db.TinyInt
  aktiv                        Int                            @default(1) @db.TinyInt
  application                  Int?                           @db.TinyInt
  election_possible            Boolean?
  outside_the_study_program    Boolean
  course_study_program_focus   course_study_program_focus[]
  noten_notenblatt_schwerpunkt noten_notenblatt_schwerpunkt[]
  planning_group               planning_group[]

  @@index([studium, version], map: "studium")
}

model studium_standorte {
  studium  BigInt
  standort BigInt

  @@id([studium, standort])
}

model studium_studienrichtung {
  id                             BigInt                           @id @default(autoincrement())
  studium                        BigInt
  de                             String?                          @db.VarChar(255)
  en                             String?                          @db.VarChar(255)
  beschreibung                   String?                          @db.Text
  instrument_study_program_field instrument_study_program_field[]
}

model studium_studienzeit {
  id       BigInt @id @default(autoincrement())
  bez_de   String @db.VarChar(255)
  bez_en   String @db.VarChar(255)
  position Int    @default(1)
}

model study_center {
  id                           BigInt                         @id @default(autoincrement())
  name                         String?                        @db.VarChar(50)
  center_name                  String?                        @db.VarChar(50)
  care_of_info                 String?                        @db.VarChar(50)
  street                       String?                        @db.VarChar(50)
  zip_code                     String?                        @db.VarChar(20)
  city                         String?                        @db.VarChar(50)
  country_id                   BigInt?
  contact_person_name          String?                        @db.VarChar(100)
  email                        String?                        @db.VarChar(50)
  phone                        String?                        @db.VarChar(50)
  room_name                    String?                        @db.VarChar(50)
  capacity                     Int?                           @db.SmallInt
  arrival_info                 String?                        @db.VarChar(255)
  timeblock_auto_assign        Boolean                        @default(false)
  study_center_category_id     BigInt?
  comment                      String?                        @db.Text
  study_center_category        study_center_category?         @relation(fields: [study_center_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "study_center_category_id")
  study_center_exam_dates      study_center_exam_dates[]      @ignore
  study_center_exam_enrolments study_center_exam_enrolments[]
  study_center_site            study_center_site[]
  study_center_timeblocks      study_center_timeblocks[]      @ignore

  @@index([study_center_category_id], map: "study_center_category_id")
}

model study_center_category {
  id            BigInt         @id @default(autoincrement())
  category_name String?        @unique(map: "unique_name") @db.VarChar(255)
  study_center  study_center[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model study_center_exam_dates {
  study_center_id BigInt
  exam_date_id    BigInt
  exam_dates      exam_dates   @relation(fields: [exam_date_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "study_center_exam_dates_exam_date_id")
  study_center    study_center @relation(fields: [study_center_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "study_center_exam_dates_study_center_id")

  @@index([exam_date_id], map: "study_center_exam_dates_exam_date_id")
  @@index([study_center_id], map: "study_center_exam_dates_study_center_id")
  @@ignore
}

model study_center_exam_enrolment_exams {
  id                             BigInt                       @id @default(autoincrement())
  study_center_exam_enrolment_id BigInt
  grade_exam_id                  BigInt
  noten_pruefungen               noten_pruefungen             @relation(fields: [grade_exam_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "study_center_exam_enrolment_exams_grade_exam_id")
  study_center_exam_enrolments   study_center_exam_enrolments @relation(fields: [study_center_exam_enrolment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "study_center_exam_enrolment_exams_enrolment_id")

  @@index([study_center_exam_enrolment_id], map: "study_center_exam_enrolment_exams_enrolment_id")
  @@index([grade_exam_id], map: "study_center_exam_enrolment_exams_grade_exam_id")
}

model study_center_exam_enrolments {
  id                                BigInt                              @id @default(autoincrement())
  time_block_id                     BigInt
  study_center_id                   BigInt
  exam_date_id                      BigInt
  curriculum_id                     BigInt
  booking_id                        BigInt
  profil_studium                    profil_studium                      @relation(fields: [booking_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "study_center_exam_enrolments_booking_id")
  exam_dates                        exam_dates                          @relation(fields: [exam_date_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "study_center_exam_enrolments_exam_dates_id")
  study_center                      study_center                        @relation(fields: [study_center_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "study_center_exam_enrolments_study_center_id")
  timeblocks                        timeblocks                          @relation(fields: [time_block_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "study_center_exam_enrolments_time_block_id")
  study_center_exam_enrolment_exams study_center_exam_enrolment_exams[]

  @@index([booking_id], map: "study_center_exam_enrolments_booking_id")
  @@index([exam_date_id], map: "study_center_exam_enrolments_exam_dates_id")
  @@index([study_center_id], map: "study_center_exam_enrolments_study_center_id")
  @@index([time_block_id], map: "study_center_exam_enrolments_time_block_id")
}

model study_center_site {
  study_center_id BigInt
  site_id         BigInt
  pm_standorte    pm_standorte @relation(fields: [site_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_study_center_site_site_id")
  study_center    study_center @relation(fields: [study_center_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_study_center_site_study_center_id")

  @@id([study_center_id, site_id])
  @@index([site_id], map: "fk_study_center_site_site_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model study_center_timeblocks {
  study_center_id BigInt
  timeblock_id    BigInt
  capacity        Int?         @db.SmallInt
  study_center    study_center @relation(fields: [study_center_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "study_center_timeblocks_study_center_id")
  timeblocks      timeblocks   @relation(fields: [timeblock_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "study_center_timeblocks_timeblock_id")

  @@index([study_center_id], map: "study_center_timeblocks_study_center_id")
  @@index([timeblock_id], map: "study_center_timeblocks_timeblock_id")
  @@ignore
}

model study_time_model {
  id                            BigInt                     @id @default(autoincrement())
  active                        Int                        @default(0) @db.TinyInt
  label_de                      String                     @default("") @db.VarChar(255)
  label_en                      String                     @default("") @db.VarChar(255)
  type                          Int                        @db.UnsignedTinyInt
  mandatory_semester            Int                        @db.UnsignedTinyInt
  default_credits_per_semester  Float                      @db.Float
  number_of_months              Int                        @db.UnsignedSmallInt
  abbreviation                  String                     @default("") @db.VarChar(255)
  total_distributed_credits     Float                      @db.Float
  number_of_months_free_renewal Int                        @default(0) @db.SmallInt
  booking_study_time_model      booking_study_time_model[]
  study_time_model_program      study_time_model_program[]
}

model study_time_model_program {
  study_time_model_id BigInt           @default(0)
  program_id          BigInt           @default(0)
  studium             studium          @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_study_time_model_program_program_id")
  study_time_model    study_time_model @relation(fields: [study_time_model_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_study_time_model_program_study_time_model_id")

  @@id([study_time_model_id, program_id])
  @@index([program_id], map: "fk_study_time_model_program_program_id")
}

model studyprogram_category {
  id   BigInt @id @default(autoincrement())
  name String @db.VarChar(255)
}

model studyprogram_category_access {
  categoryId BigInt
  groupId    BigInt

  @@id([categoryId, groupId])
}

model studyprogram_category_closure_table {
  ancestor   Int
  descendant Int
  distance   Int

  @@id([ancestor, descendant])
  @@index([descendant], map: "descendant")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model subject_version_additional_assignee {
  subject_version_id BigInt
  profile_id         BigInt
  profil             profil             @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_subject_version_additional_assignee_profile_id")
  noten_faecher_desc noten_faecher_desc @relation(fields: [subject_version_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_subject_version_additional_assignee_subject_version_id")

  @@index([profile_id], map: "fk_subject_version_additional_assignee_profile_id")
  @@index([subject_version_id], map: "fk_subject_version_additional_assignee_subject_version_id")
  @@ignore
}

model subject_version_exam_type {
  subject_version_id BigInt
  exam_type_id       BigInt
  noten_select       noten_select       @relation(fields: [exam_type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_subject_version_exam_type_noten_select_id")
  noten_faecher_desc noten_faecher_desc @relation(fields: [subject_version_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_subject_version_exam_type_noten_faecher_desc_id")

  @@id([subject_version_id, exam_type_id])
  @@index([exam_type_id], map: "fk_subject_version_exam_type_noten_select_id")
}

model subject_version_language {
  subject_version_id BigInt
  language_id        BigInt
  noten_select       noten_select       @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_subject_version_language_language_id")
  noten_faecher_desc noten_faecher_desc @relation(fields: [subject_version_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_subject_version_language_subject_version_id")

  @@id([subject_version_id, language_id])
  @@index([language_id], map: "fk_subject_version_language_language_id")
}

model subject_version_log {
  id                 BigInt   @id @default(autoincrement())
  subject_version_id BigInt
  author_id          BigInt
  date               DateTime @db.DateTime(0)
  type               Int      @db.SmallInt
  property_name      String?  @db.VarChar(255)
  old_value          String?  @db.Text
  new_value          String?  @db.Text
}

model submission {
  id                                           BigInt                              @id @default(autoincrement())
  type                                         Int
  submission_assignment_id                     BigInt
  title                                        String?                             @db.VarChar(255)
  description                                  String?                             @db.Text
  first_lecturer_id                            BigInt?
  first_lecturer_name                          String?                             @db.VarChar(255)
  second_lecturer_id                           BigInt?
  second_lecturer_name                         String?                             @db.VarChar(255)
  booking_id                                   BigInt?
  submission_status_id                         BigInt?
  create_date                                  DateTime                            @db.DateTime(0)
  edit_date                                    DateTime                            @db.DateTime(0)
  deleted                                      Int?                                @default(0) @db.TinyInt
  course_id                                    BigInt?
  submission_internship_id                     BigInt?
  submission_company_id                        BigInt?
  additional_title                             String?                             @db.VarChar(255)
  additional_description                       String?                             @db.Text
  submission_date                              DateTime?                           @db.DateTime(0)
  experience_id                                BigInt?
  confidentiality_clause                       Int?                                @db.TinyInt
  confidentiality_clause_text                  String?                             @db.Text
  start_edit_date                              DateTime?                           @db.DateTime(0)
  topic_selection_start_date                   DateTime?                           @db.DateTime(0)
  topic_selection_end_date                     DateTime?                           @db.DateTime(0)
  internal_comment                             String?                             @db.Text
  profil_studium                               profil_studium?                     @relation(fields: [booking_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_submission_booking")
  kb_kursangebot                               kb_kursangebot?                     @relation(fields: [course_id], references: [id], onUpdate: NoAction, map: "fk_submission_course_id")
  erfahrungen                                  erfahrungen?                        @relation(fields: [experience_id], references: [id], onUpdate: NoAction, map: "fk_submission_experience_id")
  profil_profilTosubmission_first_lecturer_id  profil?                             @relation("profilTosubmission_first_lecturer_id", fields: [first_lecturer_id], references: [id], onUpdate: NoAction, map: "fk_submission_first_lecturer")
  profil_profilTosubmission_second_lecturer_id profil?                             @relation("profilTosubmission_second_lecturer_id", fields: [second_lecturer_id], references: [id], onUpdate: NoAction, map: "fk_submission_second_lecturer")
  submission_assignment                        submission_assignment               @relation(fields: [submission_assignment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_submission_submission_assignment")
  submission_company                           submission_company?                 @relation(fields: [submission_company_id], references: [id], onUpdate: NoAction, map: "fk_submission_submission_company_id")
  submission_internship                        submission_internship?              @relation(fields: [submission_internship_id], references: [id], onUpdate: NoAction, map: "fk_submission_submission_internship_id")
  submission_status                            submission_status?                  @relation(fields: [submission_status_id], references: [id], onUpdate: NoAction, map: "fk_submission_submission_status_id")
  kb_vorlesungen                               kb_vorlesungen?
  noten_submission                             noten_submission[]
  noten_submission_oral_examination            noten_submission_oral_examination[]
  noten_submission_partial                     noten_submission_partial[]
  submission_file                              submission_file[]
  submission_log                               submission_log[]
  submission_role_approval                     submission_role_approval[]

  @@index([booking_id], map: "fk_submission_booking")
  @@index([course_id], map: "fk_submission_course_id")
  @@index([experience_id], map: "fk_submission_experience_id")
  @@index([first_lecturer_id], map: "fk_submission_first_lecturer")
  @@index([second_lecturer_id], map: "fk_submission_second_lecturer")
  @@index([submission_assignment_id], map: "fk_submission_submission_assignment")
  @@index([submission_company_id], map: "fk_submission_submission_company_id")
  @@index([submission_internship_id], map: "fk_submission_submission_internship_id")
  @@index([submission_status_id], map: "fk_submission_submission_status_id")
  @@index([deleted], map: "submission_deleted")
}

model submission_assignment {
  id                                                                  BigInt                          @id @default(autoincrement())
  label                                                               String                          @db.VarChar(255)
  submission_assignment_type_id                                       BigInt
  grade_subject_id                                                    BigInt
  start_semester                                                      BigInt?
  is_permanent                                                        Int                             @default(0) @db.TinyInt
  start_date                                                          DateTime?                       @db.DateTime(0)
  end_date                                                            DateTime?                       @db.DateTime(0)
  submission_date                                                     DateTime?                       @db.DateTime(0)
  processing_time_in_days                                             Int?
  examination_office_email                                            String?                         @db.VarChar(255)
  lectureship_relevant                                                Boolean                         @default(false)
  first_lecturer_lectureship_units                                    Float?                          @db.Float
  second_lecturer_lectureship_units                                   Float?                          @db.Float
  necessary_credits                                                   Float?                          @db.Float
  company                                                             Boolean                         @default(false)
  company_mandatory                                                   Boolean                         @default(false)
  company_start_date                                                  DateTime?                       @db.Date
  company_end_date                                                    DateTime?                       @db.Date
  info_text_de                                                        String?                         @db.Text
  info_text_en                                                        String?                         @db.Text
  additional_title_description                                        Boolean                         @default(false)
  confidentiality_clause                                              Int?                            @db.TinyInt
  status_change_id                                                    BigInt?
  start_edit_date                                                     DateTime?                       @db.DateTime(0)
  visible_for_students                                                Boolean                         @default(false)
  oral_subject_id                                                     BigInt?
  cv_type                                                             BigInt?
  valuation_type                                                      Int                             @default(0)
  company_contact_person_mandatory                                    Boolean                         @default(false)
  deleted_at                                                          DateTime?                       @db.DateTime(0)
  topic_selection_start_date                                          DateTime?                       @db.DateTime(0)
  topic_selection_end_date                                            DateTime?                       @db.DateTime(0)
  show_contact_person                                                 Boolean                         @default(true)
  active                                                              Int                             @default(1) @db.TinyInt
  is_evaluation_per_supervisor                                        Int?                            @db.TinyInt
  is_evaluation_points                                                Int?                            @db.TinyInt
  evaluation_max_points                                               Float?                          @db.Float
  grading_key_id                                                      BigInt?
  admin_cv_type                                                       admin_cv_type?                  @relation(fields: [cv_type], references: [id], onUpdate: NoAction, map: "fk_submission_assignment_cv_type")
  noten_faecher_noten_faecherTosubmission_assignment_grade_subject_id noten_faecher                   @relation("noten_faecherTosubmission_assignment_grade_subject_id", fields: [grade_subject_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_assignment_subject")
  noten_nkey                                                          noten_nkey?                     @relation(fields: [grading_key_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_submission_assigment_grading_key_id")
  noten_faecher_noten_faecherTosubmission_assignment_oral_subject_id  noten_faecher?                  @relation("noten_faecherTosubmission_assignment_oral_subject_id", fields: [oral_subject_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_submission_assignment_oral_subject_id")
  submission_status                                                   submission_status?              @relation(fields: [status_change_id], references: [id], onUpdate: NoAction, map: "fk_submission_assignment_status_change_id")
  submission_assignment_type                                          submission_assignment_type      @relation(fields: [submission_assignment_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_assignment_submission_assignment_type_id")
  submission                                                          submission[]
  submission_assignment_program                                       submission_assignment_program[]
  submission_assignment_site                                          submission_assignment_site[]

  @@index([grade_subject_id], map: "fk_assignment_subject")
  @@index([submission_assignment_type_id], map: "fk_assignment_submission_assignment_type_id")
  @@index([grading_key_id], map: "fk_submission_assigment_grading_key_id")
  @@index([cv_type], map: "fk_submission_assignment_cv_type")
  @@index([oral_subject_id], map: "fk_submission_assignment_oral_subject_id")
  @@index([status_change_id], map: "fk_submission_assignment_status_change_id")
}

model submission_assignment_program {
  assignment_id         BigInt
  program_id            BigInt
  submission_assignment submission_assignment @relation(fields: [assignment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_submission_assignment_program_assignment_id")
  studium               studium               @relation(fields: [program_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_submission_assignment_program_program_id")

  @@id([assignment_id, program_id])
  @@index([program_id], map: "fk_submission_assignment_program_program_id")
}

model submission_assignment_site {
  submission_assignment_id BigInt
  site_id                  BigInt
  pm_standorte             pm_standorte          @relation(fields: [site_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_assignment_site_relation_site")
  submission_assignment    submission_assignment @relation(fields: [submission_assignment_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_assignment_site_assignment")

  @@id([submission_assignment_id, site_id])
  @@index([site_id], map: "fk_assignment_site_relation_site")
}

model submission_assignment_type {
  id                             BigInt                           @id @default(autoincrement())
  de                             String                           @db.VarChar(255)
  en                             String                           @db.VarChar(255)
  submission_assignment          submission_assignment[]
  submission_status_type_mapping submission_status_type_mapping[]
}

model submission_company {
  id                                BigInt       @id
  address_id                        BigInt?
  name                              String?      @db.VarChar(255)
  web                               String?      @db.VarChar(255)
  address_street                    String?      @db.VarChar(255)
  address_additional                String?      @db.VarChar(255)
  address_postal_code               String?      @db.VarChar(20)
  address_city                      String?      @db.VarChar(255)
  address_country                   String?      @db.VarChar(255)
  contact_person_id                 BigInt?
  contact_person_name               String?      @db.VarChar(255)
  contact_person_salutation         String?      @db.VarChar(255)
  contact_person_email              String?      @db.VarChar(255)
  contact_person_phone              String?      @db.VarChar(50)
  is_contact_person_second_lecturer Int          @default(0) @db.TinyInt
  period_from                       DateTime?    @db.Date
  period_to                         DateTime?    @db.Date
  pm_fields                         pm_fields?   @relation(fields: [address_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_submission_company_address_id")
  profil                            profil?      @relation(fields: [contact_person_id], references: [id], onUpdate: NoAction, map: "fk_submission_company_contact_person_id")
  submission                        submission[]

  @@index([address_id], map: "fk_submission_company_address_id")
  @@index([contact_person_id], map: "fk_submission_company_contact_person_id")
}

model submission_file {
  id              BigInt     @id @default(autoincrement())
  submission_id   BigInt
  file_size       Int?
  file_name       String?    @db.VarChar(255)
  created_user_id BigInt?
  created_date    DateTime?  @db.DateTime(0)
  available       Boolean    @default(false)
  submission      submission @relation(fields: [submission_id], references: [id], onDelete: Cascade, map: "submission_id")

  @@index([submission_id], map: "submission_id")
}

model submission_internship {
  id               BigInt       @id
  salary           String?      @db.VarChar(255)
  weekly_hours     Float?
  monthly_holidays Float?
  submission       submission[]
}

model submission_log {
  id                     BigInt                  @id @default(autoincrement())
  type                   String                  @db.VarChar(255)
  time                   DateTime                @db.DateTime(0)
  submission_id          BigInt?
  created_date_time      DateTime?               @db.DateTime(0)
  user_id                BigInt?
  values                 String?                 @db.Text
  entity_id              BigInt?
  log_type               String?                 @db.VarChar(255)
  submission             submission?             @relation(fields: [submission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_submission_log_submission_id")
  profil                 profil?                 @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_submission_log_user_id")
  submission_log_comment submission_log_comment?
  submission_log_event   submission_log_event?

  @@index([submission_id], map: "fk_submission_log_submission_id")
  @@index([user_id], map: "fk_submission_log_user_id")
}

model submission_log_comment {
  id             BigInt         @id @default(autoincrement())
  comment        String?        @db.Text
  submission_log submission_log @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_submission_log_comment_log_id")
}

model submission_log_event {
  id             BigInt         @id @default(autoincrement())
  event_type     String?        @db.VarChar(255)
  value_before   String?        @db.VarChar(255)
  value_after    String?        @db.VarChar(255)
  submission_log submission_log @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_submission_log_event_log_id")
}

model submission_role_approval {
  submission_id      BigInt
  permission_role_id Int        @db.UnsignedTinyInt
  submission         submission @relation(fields: [submission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_submission_role_approval_submission_id")

  @@id([submission_id, permission_role_id])
}

model submission_settings {
  id                                                                       BigInt   @id
  comment_notification_template_de_id                                      BigInt?
  comment_notification_template_en_id                                      BigInt?
  help_text_add_submission_de                                              String?  @db.Text
  help_text_add_submission_en                                              String?  @db.Text
  nl_text_nl_textTosubmission_settings_comment_notification_template_de_id nl_text? @relation("nl_textTosubmission_settings_comment_notification_template_de_id", fields: [comment_notification_template_de_id], references: [id], onUpdate: NoAction, map: "fk_submission_settings_comment_notification_template_de_id")
  nl_text_nl_textTosubmission_settings_comment_notification_template_en_id nl_text? @relation("nl_textTosubmission_settings_comment_notification_template_en_id", fields: [comment_notification_template_en_id], references: [id], onUpdate: NoAction, map: "fk_submission_settings_comment_notification_template_en_id")

  @@index([comment_notification_template_de_id], map: "fk_submission_settings_comment_notification_template_de_id")
  @@index([comment_notification_template_en_id], map: "fk_submission_settings_comment_notification_template_en_id")
}

model submission_status {
  id                                         BigInt                           @id @default(autoincrement())
  label_en                                   String?                          @db.VarChar(255)
  label_de                                   String?                          @db.VarChar(255)
  position                                   BigInt?
  color_id                                   BigInt?
  role_permissions                           String?                          @db.Text
  email_notification                         Int?                             @db.TinyInt
  email_template_id                          BigInt?
  visible_in_community_for_first_supervisor  Int?                             @default(1) @db.TinyInt
  visible_in_community_for_second_supervisor Int?                             @default(1) @db.TinyInt
  visible_in_community_for_student           Int?                             @default(1) @db.TinyInt
  submission_deletable                       Boolean?
  grade_released                             Boolean                          @default(false)
  lecturer_create_grade                      Boolean                          @default(false)
  multiple_request                           Boolean                          @default(true)
  color                                      color?                           @relation(fields: [color_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_submission_status_color")
  nl_text                                    nl_text?                         @relation(fields: [email_template_id], references: [id], onUpdate: NoAction, map: "fk_submission_status_email_template_id")
  submission                                 submission[]
  submission_assignment                      submission_assignment[]
  submission_status_email_role               submission_status_email_role[]
  submission_status_type_mapping             submission_status_type_mapping[]

  @@index([color_id], map: "FK_submission_status_color")
  @@index([email_template_id], map: "fk_submission_status_email_template_id")
}

model submission_status_email_role {
  status_id         BigInt
  role_id           Int               @db.UnsignedTinyInt
  submission_status submission_status @relation(fields: [status_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_submission_status_email_role_status_id")

  @@id([status_id, role_id])
}

model submission_status_type_mapping {
  assignment_type_id         BigInt                     @default(autoincrement())
  status_id                  BigInt
  submission_assignment_type submission_assignment_type @relation(fields: [assignment_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "submission_status_type_mapping_ibfk_1")
  submission_status          submission_status          @relation(fields: [status_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "submission_status_type_mapping_ibfk_2")

  @@unique([assignment_type_id, status_id], map: "assignment_type_id")
  @@index([status_id], map: "status_id")
}

model system_event_graph_access_log {
  id                   BigInt    @id @default(autoincrement())
  listener             String?   @db.VarChar(255)
  created_at           DateTime? @db.DateTime(0)
  request_type         String?   @db.VarChar(255)
  endpoint             String?   @db.Text
  request_body         String?   @db.Text
  office365_setting_id BigInt?
}

model system_event_queue_entry {
  id               BigInt   @id @default(autoincrement())
  type             String?  @db.VarChar(255)
  attributes       String?  @db.Text
  create_date_time DateTime @db.DateTime(0)
}

model system_event_queue_entry_status {
  id                          BigInt    @id @default(autoincrement())
  system_event_queue_entry_id BigInt?
  status                      Int?      @db.TinyInt
  last_update                 DateTime  @db.DateTime(0)
  run_counter                 Int       @db.TinyInt
  exception_log               String?   @db.Text
  listener_result             String?   @db.Text
  break_until                 DateTime? @db.DateTime(0)
  next_start_point            String?   @db.Text
  listener_message            String?   @db.Text

  @@index([system_event_queue_entry_id], map: "idx_system_event_queue_entry_id")
  @@index([break_until], map: "system_event_queue_entry_status_break_until")
  @@index([last_update], map: "system_event_queue_entry_status_last_update")
}

model system_usability_scale {
  academy_version_id              Int
  user_id                         BigInt
  question_id                     BigInt
  value                           BigInt
  date                            DateTime                        @db.DateTime(0)
  academy_version                 academy_version                 @relation(fields: [academy_version_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_system_usability_scale_academy_version_id")
  system_usability_scale_question system_usability_scale_question @relation(fields: [question_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_system_usability_scale_question_id")
  profil                          profil                          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_system_usability_scale_user_id")

  @@id([academy_version_id, user_id, question_id])
  @@index([question_id], map: "fk_system_usability_scale_question_id")
  @@index([user_id], map: "fk_system_usability_scale_user_id")
}

model system_usability_scale_question {
  id                     BigInt                   @id @default(autoincrement())
  question_name          String?                  @db.VarChar(255)
  system_usability_scale system_usability_scale[]
}

model tag_company {
  tag_id       BigInt
  company_id   BigInt
  created_user BigInt?
  created_date DateTime? @db.Date

  @@id([tag_id, company_id])
  @@index([company_id], map: "company_id")
}

model tickets {
  id              BigInt    @id @default(autoincrement())
  ticket          String?   @db.VarChar(16)
  checked_in      Boolean   @default(false)
  user            BigInt    @default(0)
  client_id       BigInt    @default(0)
  client_nr       String?   @db.VarChar(16)
  client_name     String?   @db.VarChar(32)
  create_date     DateTime? @db.DateTime(0)
  ap_id           BigInt    @default(0)
  ap_name         String?   @db.VarChar(32)
  ap_tel          String?   @db.VarChar(20)
  ap_email        String?   @db.VarChar(64)
  betreff         String?   @db.VarChar(128)
  typ             Int       @default(1) @db.TinyInt
  open            DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  close           DateTime? @db.DateTime(0)
  status          Int       @default(1) @db.TinyInt
  state           Boolean   @default(false)
  state2          Boolean   @default(false)
  kategorie       Int       @default(1)
  bereich         Int       @default(1) @db.TinyInt
  frist           DateTime  @default(dbgenerated("'0000-00-00'")) @db.Date
  taskid          Int       @default(4)
  reminder_set    Int       @default(0) @db.TinyInt
  erinnerung_nach Int       @default(0) @db.SmallInt
  einheiten       String?   @db.VarChar(20)
  erinnerungszeit Int
  mail            Int       @default(0) @db.TinyInt
  news            Int       @default(0) @db.TinyInt
  nid             BigInt    @default(0)
  sms             Int       @default(0) @db.TinyInt
  startseite      Int       @default(0) @db.TinyInt
  mail_subject    String?   @db.VarChar(255)
  mail_text       String?   @db.Text
  sms_text        String?   @db.VarChar(255)
  news_text       String?   @db.Text
  news_subject    String?   @db.VarChar(255)
  startseite_text String?   @db.VarChar(255)
  member          BigInt    @default(0)
  state3          Boolean?
  deleted         Boolean?  @default(true)
  tickethash      String?   @db.VarChar(128)

  @@index([ticket, user, client_id], map: "ticket")
}

model tickets_rueckruf {
  id              BigInt   @id @default(autoincrement())
  create_date     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  firmaid         BigInt   @default(0)
  apid            BigInt?
  firma           String?  @db.VarChar(255)
  mitarbeiter     BigInt   @default(0)
  ansprechpartner String?  @db.VarChar(255)
  tel             String?  @db.VarChar(255)
  termin          String?  @db.VarChar(255)
  anliegen        String?  @db.Text
  status          Int      @default(0) @db.TinyInt
}

model tile_color {
  id                     BigInt                   @id @default(autoincrement())
  color                  String?                  @db.VarChar(255)
  dashboard_gadget_tiles dashboard_gadget_tiles[]
}

model tile_icons {
  id                     BigInt                   @id @default(autoincrement())
  icon                   String                   @db.VarChar(255)
  dashboard_gadget_tiles dashboard_gadget_tiles[]
}

model timeblocks {
  id                           BigInt                         @id @default(autoincrement())
  name                         String?                        @db.VarChar(50)
  from                         DateTime                       @db.Time(0)
  until                        DateTime                       @db.Time(0)
  study_center_exam_enrolments study_center_exam_enrolments[]
  study_center_timeblocks      study_center_timeblocks[]      @ignore
}

model tmp_file {
  id            String   @id @default("") @db.VarChar(100)
  filename      String?  @db.VarChar(500)
  created       DateTime @db.Date
  real_filename String?  @db.VarChar(255)
}

model togglelist_user {
  profile_id    BigInt
  togglelist_id BigInt
  key           String @default("") @db.VarChar(50)

  @@id([profile_id, togglelist_id, key])
}

model view {
  id      BigInt  @id @default(autoincrement())
  view    String? @db.VarChar(32)
  name    String? @unique(map: "name") @db.VarChar(128)
  session String? @db.Text
  sql     String? @db.Text
}

model vorlage {
  id                      Int       @id @default(autoincrement())
  typ                     String?   @db.VarChar(4)
  merged_letter_classname String?   @db.VarChar(255)
  language_key            String?   @db.Char(2)
  folder                  BigInt?   @default(0)
  de                      String?   @db.VarChar(255)
  pfad                    String?   @db.VarChar(255)
  ext                     String?   @db.VarChar(255)
  groesse                 Int       @default(0)
  datum                   DateTime? @db.DateTime(0)
  datum_edit              DateTime? @db.DateTime(0)
  used                    Int       @default(0)
  en                      String?   @db.VarChar(255)
  en_desc                 String?   @db.Text
  de_desc                 String?   @db.Text
  create_user             BigInt?   @default(0)
  create_date             DateTime? @db.DateTime(0)
  delete_date             DateTime? @db.DateTime(0)
  update_date             DateTime? @db.DateTime(0)
  delete_user             BigInt?
  update_user             BigInt?
  last_sent               DateTime? @db.DateTime(0)
}

model vorlage_folder {
  id          BigInt    @id @default(autoincrement())
  parent      BigInt    @default(0)
  de          String?   @db.VarChar(255)
  en          String?   @db.VarChar(255)
  siteId      BigInt?
  create_date DateTime? @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  create_user BigInt?   @default(0)
  update_date DateTime? @db.DateTime(0)
  delete_user BigInt?
  delete_date DateTime? @db.DateTime(0)
}

model workflow {
  id       BigInt  @id @default(autoincrement())
  datasrc  BigInt  @default(0)
  workflow String? @db.VarChar(16)
  data     BigInt
  start    BigInt
  json     String? @db.Text

  @@index([datasrc], map: "datasrc")
  @@index([workflow, data], map: "workflow")
}

model workflow_element {
  id             BigInt  @id @default(autoincrement())
  workflow       BigInt  @default(0)
  typ            Int     @default(1) @db.TinyInt
  name           String? @db.VarChar(255)
  e_next         BigInt
  e_true         BigInt
  e_false        BigInt
  e_end          Int     @default(0) @db.TinyInt
  scriptlet      BigInt
  scriptlet_vars String? @db.Text

  @@index([workflow], map: "workflow")
}

model workflow_progress {
  id          BigInt   @id @default(autoincrement())
  workflow    BigInt   @default(0)
  data        BigInt   @default(0)
  element     BigInt   @default(0)
  last_action DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  last_user   BigInt   @default(0)
  status      Int      @default(0) @db.TinyInt
  history     String?  @db.Text

  @@index([workflow, data], map: "workflow")
}

model workflow_scriptlets {
  id         BigInt  @id @default(autoincrement())
  name       String? @db.VarChar(128)
  typ        Int     @default(0) @db.TinyInt
  sourcecode String? @db.Text
  file       String? @db.VarChar(64)
  function   String? @db.VarChar(64)
}
